// File: intro

import AuthPageLink from '@site/src/components/AuthPageLink';

Hello! myKaarma API platform can help you get started with building the most innovative solutions using our best-in-class APIs. Our APIs provide an all-round experience of customer interactions in the automotive industry such as communications, appointments, orders management, payments, pick-up and delivery, etc.

You can check-out our startup guides to cover some of the most basic use cases in our APIs, or look at the reference docs for a more comprehensive understanding. If you are already aware of which APIs you want to use, please feel free to jump in docs specific to that API using the navigation panel on this page. Head over to the <AuthPageLink/> to understand how you can get your own sandbox credentials to play with our APIs.

Some common terms you'll see used throughout the documentation:
1. Dealer UUID - the Unique identifier assigned to the particular Dealership store you're integrating with.
2. Department UUID (analogous to Dealer Department UUID) - the Unique identifier assigned to a particular department (for eg. Service department) of the store you're integrating with.
3. Customer UUID, Vehicle UUID

## Partnerships
If you want to inquire about our partnerships, please fill this [form](https://docs.google.com/forms/d/e/1FAIpQLScmfS6DmgcYmek8eQ8iemL2Qhf2YdFBJkIHASqpOdqDdxITTQ/viewform)  and send an email to [myKaarma Partnerships](mailto:partnerships@mykaarma.com)

## Famous Recipes 

- <a href="/our-products/scheduler/API/how-to-create-an-appointment">how to create an appointment</a>
- <a href="/our-products/scheduler/API/how-to-create-draft-appointment">how to create a draft appointment</a>
- <a href="/our-products/integration/customer/search-then-create-customer">how to search and then create customer</a>

---

// File: authentication-and-authorization

# Authentication and Authorization

myKaarma API's utilizes Basic Authentication to secure access to its resources. Clients must authenticate with valid credentials to make successful API requests.

## Credential Acquisition

1.  **Service Subscriber Creation:** To obtain API access credentials, clients must please fill this [form](https://docs.google.com/forms/d/e/1FAIpQLScmfS6DmgcYmek8eQ8iemL2Qhf2YdFBJkIHASqpOdqDdxITTQ/viewform). Upon request, a dedicated `ServiceSubscriber` account will be created.
2.  **Credential Provision:** The `ServiceSubscriber` account will be provisioned with a unique `username` and `password`. These credentials will be securely provided to the client.

## Authentication Process

1.  **Basic Authentication Header:** Clients are required to include an `Authorization` header in every API request.
2.  **Header Format:** The `Authorization` header must use the Basic Authentication scheme. The format is as follows:

    ```
    Authorization: Basic <base64_encoded_credentials>
    ```

3.  **Credential Encoding:**
    * Concatenate the `username` and `password` with a colon (`:`) separator (e.g., `username:password`).
    * Encode the resulting string using Base64 encoding.

    **Example:**

    If your `username` is `apiuser` and your `password` is `securepass`, the process would be:

    1.  Concatenate: `apiuser:securepass`
    2.  Base64 encode: `YXBpdXNlcjpzZWN1cmVwYXNz`
    3.  The `Authorization` header would be: `Authorization: Basic YXBpdXNlcjpzZWN1cmVwYXNz`

4.  **Request Inclusion:** The client must include the constructed `Authorization` header in the header section of every API request.

## Example API Request (using curl)

```bash
curl -X GET \
  'https://api.mykaarma.com/resource' \
  -H 'Authorization: Basic YXBpdXNlcjpzZWN1cmVwYXNz'
```
## Dealer/Department Authorization

In addition to Basic Authentication, each API endpoint requires either a `dealerUuid` or `departmentUuid` to validate authorization for specific entities. These identifiers are typically passed either in the URL as path variable, or as query parameters or within the request body, depending on the specific API endpoint.
Please contact your myKaarma API Representative to get these unique identifiers for the dealerships.

* **`dealerUuid`:** Used to authorize access for a specific dealer.
* **`departmentUuid`:** Used to authorize access for a specific department.

## Important Security Considerations
- **Secure Storage**: Clients are responsible for securely storing the provided username and password. Avoid embedding credentials directly in client-side code.
- **HTTPS Required**: All API requests must be made over HTTPS to ensure the confidentiality of the transmitted credentials.
- **Credential Rotation**: Clients should periodically request new credentials to enhance security. Contact [myKaarma APIs Support](mailto:apisupport@mykaarma.com) to initiate a credential rotation.
- **Rate limiting**: Excessive failed login attempts will result in temporary or permanent IP address blocking.
- **Least Privilege**: Service Subscribers will be granted only the minimum necessary permissions to perform their intended function.

## Error Handling
- **401 Unauthorized**: If the Authorization header is missing, invalid, or the provided credentials are incorrect, the API will return a 401 Unauthorized error.
- **403 Forbidden**: If the supplied credentials are valid, but the user does not have permission to access the requested resource, a 403 Forbidden error will be returned.
## Contact Information
For any questions or assistance with authentication and authorization, please send an email to [myKaarma APIs Support](mailto:apisupport@mykaarma.com).

## Future Authentication Strategy
- To enhance security and modernize our authentication protocols, we will be transitioning from basic authentication to OAuth 2.0 in the future.

---

// File: ui-integration

# UI Integration with myKaarma

This document outlines the steps and process of Iframing inside myKaarma.
Third party web application will be embedded  within an iframe of myKaarma application.
The expected user-experience is to have User already logged into third-party application with SAML integration.

## Prerequisites:

1.  Third party web application should be embeddable as Iframe. For this the application should not have [frame-ancestors](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors) set to none or deny to be able to iframed anywhere, or have myKaarma URLs whitelisted in frame-ancestors
2. Third party web application should support SAML 2.0 integration and work as SAML Service Provider


## SAML Integration Process

SAML (Security Assertion Markup Language) is an XML-based open standard for exchanging authentication and authorization data between an identity provider (IdP) and a service provider (SP)

### Identity Provider (IdP)

An IdP is a system that manages user identities and authenticates users. It's responsible for verifying a user's credentials and issuing digital certificates or tokens that confirm the user's identity

myKaarma will work as IdP.

### Service Provider (SP)
An SP is an entity that provides a service, typically in the form of an application or website.  It relies on an IdP to authenticate users.

Third party web application will work as SP.

### How SAML Flow works:

- User logins into myKaarma Web Application via myKaarma IdP
- User attempts to access a service protected by the SP (Third party application) within myKaarma Application
- The SP redirects the user to the IdP.
- As User is already authenticated as part of myKaarma application login thus creating a seamless experience without asking for user credentials again.
- The IdP sends the SAML assertion containing information about the user to the SP.
- The SP (Third party application) validates the assertion and grants the user access to the service.

### Integration with myKaarma IdP

For Intergration with myKaarma IdP - SP needs to configure the following myKaarma IdP's metadata on their end.

```xml
<?xml version="1.0"?>
<md:EntityDescriptor xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" entityID="https://accounts.mykaarma.com/saml2/idp/metadata.php">
  <md:IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">
    <md:KeyDescriptor use="signing">
      <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        <ds:X509Data>
          <ds:X509Certificate>MIIElTCCA32gAwIBAgIJAJoWKsFrnIAvMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExCzAJBgNVBAcTAkxBMREwDwYDVQQKEwhteUthYXJtYTETMBEGA1UECxMKS2FhcnlhIExMQzERMA8GA1UEAxMIbXlLYWFybWExKTAnBgkqhkiG9w0BCQEWGm1vdWxpLmthdGh1bGFAbXlrYWFybWEuY29tMB4XDTE3MDYxMjEyNDYyNloXDTI3MDYxMjEyNDYyNlowgY0xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTELMAkGA1UEBxMCTEExETAPBgNVBAoTCG15S2Fhcm1hMRMwEQYDVQQLEwpLYWFyeWEgTExDMREwDwYDVQQDEwhteUthYXJtYTEpMCcGCSqGSIb3DQEJARYabW91bGkua2F0aHVsYUBteWthYXJtYS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDSyCO5sBmJXFBMO6+szzin6SPXN4prqD7xU/G0rzAiKgXVPJ0iFaWfW95maO0NypRwwxeELabVqTnPPt8PqDs56vfH1LpshZ2mQLmZguIrCls6GDB2+gUszYdDV35ASoOe/9dGqEGeJvoN1fas22tEh55Gs2P3I2ZYRSMkkQrzbtrQTxdx0gpeW39SZjBK0E02vh3mU7HToFB5MDRxaURHbHASBBqdscAMK/orjx+PWL5PqmKUX5Asx/sUp4f13I5+dw0PnYjG5rHPfl+J+1xb5GEBdp82V34kzzX8t20htEHDlzwCcw+mqpylozedZCQUZbp7N5nlPpyR8wCCphnNAgMBAAGjgfUwgfIwHQYDVR0OBBYEFBcBVdGTJNJmywjKdvTgCVIs+y48MIHCBgNVHSMEgbowgbeAFBcBVdGTJNJmywjKdvTgCVIs+y48oYGTpIGQMIGNMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExCzAJBgNVBAcTAkxBMREwDwYDVQQKEwhteUthYXJtYTETMBEGA1UECxMKS2FhcnlhIExMQzERMA8GA1UEAxMIbXlLYWFybWExKTAnBgkqhkiG9w0BCQEWGm1vdWxpLmthdGh1bGFAbXlrYWFybWEuY29tggkAmhYqwWucgC8wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAYWE7uBrAXrYMhY/PtkmDmGDOjt/327J8FTZf/TzPFwS98TDPlvrn12iZsQwwPc4PF5kLFMbtZZqGARz1RMoarlF/oMDJAmRROxDaLtxw1pT/eNS2Whuc5hVmUPFQybtvaht15pdrjFTO98ygE8foYeSGNf5CuppUGw16lJIJTTc3JjyWu5JiCdEKNxvdJNRVVzg4wm9WKdsYaP7S75tRiyd5WyZXgLA5xm6APwCmu1yzS73sVVtmzbzfIMyf1+1Q1xK9q/jmfWF/mIurj+5/BuqY45Az+seXBiNSS7X3xbHBEtl46TeUWb0rHPZz5MKfp9JV2DFDOEBxjlgI/1ocOg==</ds:X509Certificate>
        </ds:X509Data>
      </ds:KeyInfo>
    </md:KeyDescriptor>
    <md:KeyDescriptor use="encryption">
      <ds:KeyInfo xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
        <ds:X509Data>
          <ds:X509Certificate>MIIElTCCA32gAwIBAgIJAJoWKsFrnIAvMA0GCSqGSIb3DQEBBQUAMIGNMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExCzAJBgNVBAcTAkxBMREwDwYDVQQKEwhteUthYXJtYTETMBEGA1UECxMKS2FhcnlhIExMQzERMA8GA1UEAxMIbXlLYWFybWExKTAnBgkqhkiG9w0BCQEWGm1vdWxpLmthdGh1bGFAbXlrYWFybWEuY29tMB4XDTE3MDYxMjEyNDYyNloXDTI3MDYxMjEyNDYyNlowgY0xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTELMAkGA1UEBxMCTEExETAPBgNVBAoTCG15S2Fhcm1hMRMwEQYDVQQLEwpLYWFyeWEgTExDMREwDwYDVQQDEwhteUthYXJtYTEpMCcGCSqGSIb3DQEJARYabW91bGkua2F0aHVsYUBteWthYXJtYS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDSyCO5sBmJXFBMO6+szzin6SPXN4prqD7xU/G0rzAiKgXVPJ0iFaWfW95maO0NypRwwxeELabVqTnPPt8PqDs56vfH1LpshZ2mQLmZguIrCls6GDB2+gUszYdDV35ASoOe/9dGqEGeJvoN1fas22tEh55Gs2P3I2ZYRSMkkQrzbtrQTxdx0gpeW39SZjBK0E02vh3mU7HToFB5MDRxaURHbHASBBqdscAMK/orjx+PWL5PqmKUX5Asx/sUp4f13I5+dw0PnYjG5rHPfl+J+1xb5GEBdp82V34kzzX8t20htEHDlzwCcw+mqpylozedZCQUZbp7N5nlPpyR8wCCphnNAgMBAAGjgfUwgfIwHQYDVR0OBBYEFBcBVdGTJNJmywjKdvTgCVIs+y48MIHCBgNVHSMEgbowgbeAFBcBVdGTJNJmywjKdvTgCVIs+y48oYGTpIGQMIGNMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExCzAJBgNVBAcTAkxBMREwDwYDVQQKEwhteUthYXJtYTETMBEGA1UECxMKS2FhcnlhIExMQzERMA8GA1UEAxMIbXlLYWFybWExKTAnBgkqhkiG9w0BCQEWGm1vdWxpLmthdGh1bGFAbXlrYWFybWEuY29tggkAmhYqwWucgC8wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAYWE7uBrAXrYMhY/PtkmDmGDOjt/327J8FTZf/TzPFwS98TDPlvrn12iZsQwwPc4PF5kLFMbtZZqGARz1RMoarlF/oMDJAmRROxDaLtxw1pT/eNS2Whuc5hVmUPFQybtvaht15pdrjFTO98ygE8foYeSGNf5CuppUGw16lJIJTTc3JjyWu5JiCdEKNxvdJNRVVzg4wm9WKdsYaP7S75tRiyd5WyZXgLA5xm6APwCmu1yzS73sVVtmzbzfIMyf1+1Q1xK9q/jmfWF/mIurj+5/BuqY45Az+seXBiNSS7X3xbHBEtl46TeUWb0rHPZz5MKfp9JV2DFDOEBxjlgI/1ocOg==</ds:X509Certificate>
        </ds:X509Data>
      </ds:KeyInfo>
    </md:KeyDescriptor>
    <md:SingleLogoutService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://accounts.mykaarma.com/saml2/idp/SingleLogoutService.php"/>
    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>
    <md:SingleSignOnService Binding="urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect" Location="https://accounts.mykaarma.com/saml2/idp/SSOService.php"/>
  </md:IDPSSODescriptor>
  <md:ContactPerson contactType="technical">
    <md:GivenName>myKaarma</md:GivenName>
    <md:SurName>Administrator</md:SurName>
    <md:EmailAddress>sso@mykaarma.com</md:EmailAddress>
  </md:ContactPerson>
</md:EntityDescriptor>
```

#### Going over the important fields from IdP metadata


| Field Name       | Value | Description                   |
|------------------|  ---  |-------------------------------|
| `entityID` | `https://accounts.mykaarma.com/saml2/idp/metadata.php` | Unique identifier of the IdP  |
| `SingleSignOnService`       | `https://accounts.mykaarma.com/saml2/idp/SSOService.php` | endpoint where the Service Provider (SP) will send SAML authentication requests     |
| `SingleLogoutService`   | `https://accounts.mykaarma.com/saml2/idp/SingleLogoutService.php` | endpoint(s) where the SP will send logout requests and responses |

After configuring IdPs metadata , SP need to share their metadata to [sso@mykaarma.com](mailto:sso@mykaarma.com)



### Iframing Application

Once SAML Setup is completed. myKaarma Engineering team can embed the Third party url  iframe into myKaarma application.

---

// File: API_references/index



---

// File: mykaarmaWebhooks/mykaarma-webhook-events

## Context

This document is designed to help you integrate with myKaarma webhooks. myKaarma will publish customer, appointment and order events on any change happening to the corresponding entity in our system. The third party API partners can build an API path (as in example shown later in this document). This API endpoint will be hit anytime myKaarma produces these events. 

API partners can take a look at the events shape that is explained in this document and then filter and use the events according to their use cases.

## Shape of API and Events

### API Path

This API path is what we expect from the third party to provide us so the events can be sent to the API URL as a `POST` endpoint with a JSON request body.

```plaintext
https://<third-party-base-url>/<webhook-event-path>
```

**Example:** `https://mykaarma-partner.ai/mykaarmaevents`

### Shape of myKaarma Event

#### Body

This table explains the different attributes associated with events in myKaarma. 



| Attribute                | Description                                                                                         |
|--------------------------|-----------------------------------------------------------------------------------------------------|
| **Source**              | The source where this event generated. This can take values - `mykaarma.scheduler`, `mykaarma.customer`, `mykaarma.orders`.                               |
| **id**                  | Unique event ID. Can be used along with `eventType` for deduplication.                             |
| **dataType**            | Can be `service-orders`, `appointments`, or `customers`.                                           |
| **timestamp**           | Time of the event occurrence (UTC). Used to handle out-of-order events.                            |
| **eventType**           | `pointInTime` for this context.                                                                    |
| **dealeruuid**          | Unique 64-character identifier for the dealer.                                                     |
| **departmentuuid**      | Unique 64-character identifier for the department.                                                 |
| **payload**             | Stringified JSON corresponding to the event type.                                                  |
| **x-authorization-token** | This HTTP request header will be shared beforehand for verification.   

**Note**

These fields will be common to all the myKaarma events with the payload differing according to the events.

Example: 

```json
{
  "id": "6c7e57fe-0e06-4fc9-8120-e1593257f1cf",
  "timestamp": 1728542293678,
  "dealeruuid": "_dealeruuid",
  "departmentuuid": "_departmentuuid",
  "dataType": "service-orders/appointments/customers",
  "eventType": "pointintime",
  "payload": { ... }
}
```

There will be three different kinds of events

- Customer event
- Appointment event 
- Order event


## Example Customer Payload Event

The payload will include the model of the Customer that third-party partners already receive from calling the [myKaarma Customer API](https://docs.mykaarma.com/our-products/integration/customer/api-reference)
You can find the documentation references for the fields received in customerWithVehicles payload [here](https://docs.mykaarma.com/our-products/integration/customer/how-to-read-a-customer#quick-summary-of-getcustomer-response-fields).

> **Note**: The actual payload below would be an escaped stringified JSON and would look something like:
>
> `"{\"customerWithVehicles\":{\"customer\":{\"id\":null,\"customerKey\":\"testKey123\",\"firstName\":\"John\",\"middleName\":\"\",\"lastName\":\"Doe\"...`

## Important Notes

- The architecture for customer creation and update pushes events via an indexer job, which runs once per second.
- If a particular customer has been updated multiple times within a duration of less than 1 second, you will receive only a single update event with the final customer data.

## Example Payload

```json
{
    "id": "569841a7-230d-41ec-9e64-26839cda986e",
    "timestamp": 1731484042215,
    "dealeruuid": "5765507a95f23d2da7c96b5d88100bfebdc2883af8cb925ce2b61934884b24b5",
    "departmentuuid": "f05f0d7a90c09cd48b8398addd477c8f2acf2dee8bae7b013ee2693e651c62b4",
    "dataType": "customers",
    "eventType": "pointintime",
    "payload": '{
        "customerWithVehicles": {
            "customer": {
                "id": null,
                "customerKey":testKey123,
                "firstName": "John",
                "middleName": "",
                "lastName": "Doe",
                "company": null,
                "preferredLocale": "en-us",
                "emails": [
                    {
                        "emailAddress": "test.mkLeiferst@gmail.com",
                        "label": "home",
                        "okToEmail": true,
                        "isPreferred": true,
                        "comments": null
                    }
                ],
                "phoneNumbers": [
                    {
                        "phoneNumber": "+13108170196",
                        "label": "cell",
                        "okToCall": true,
                        "okToText": true,
                        "isPreferred": true,
                        "comments": null
                    }
                ],
                "preferredCommunication": null,
                "bestTimeToContact": {
                    "startTime": null,
                    "endTime": null
                },
                "addresses": [
                    {
                        "line1": "100 W Broadway",
                        "line2": "",
                        "city": "Long Beach",
                        "zip": null,
                        "addressType": "P",
                        "type": "PRIMARY",
                        "country": "United States",
                        "updateTS": 1731483922000,
                        "uuid": "FgkuPqGHIR8PgTMlHj8fUylxb_eA48p8oBtz9AqGFig",
                        "isValid": true,
                        "isPreferred": false,
                        "state": "CA"
                    }
                ],
                "availability": 0,
                "isBusiness": false,
                "customerUuid": "NjBuU_4VccfPr_hgA3s25QVzcJ0kzTMwZsCFYusRns4",
                "customerId": "NjBuU_4VccfPr_hgA3s25QVzcJ0kzTMwZsCFYusRns4"
            },
            "vehicles": [
                {
                    "id": null,
                    "vin": null,
                    "vehicleKey": "Key0MUBTXOUH3",
                    "isValid": false,
                    "imageUrl": null,
                    "brandId": null,
                    "licensePlate": null,
                    "color": null,
                    "vehicleModel": "1 Series M",
                    "vehicleYear": "2011",
                    "vehicleTrim": "Base",
                    "vehicleUuid": "vNzot7pDZgj3DKETdBWrcB0RFF4sQiCVyjul78vuNH0",
                    "vehicleEngine": null,
                    "estimatedMileage": null,
                    "vehicleMake": "BMW"
                }
            ]
        }
    }'
}
```

:::caution
For now, please ignore appointment and order events.
::: 

## Appointment Event

The appointment event will be fired *every* time an appointment is created, updated or deleted in myKaarma. You can use *event* and *newStatus* fields to identify what caused this event to trigger. You can filter these events depending on your use case and ignore the ones irrelevant to you.

These events have everything that you get on hitting our get APIs and more. Let us walk through what the payload of these events would look like:

| Attribute                                      | Description                                                                                                      |
|-----------------------------------------------|------------------------------------------------------------------------------------------------------------------|
| **uuid**                                      | Unique identifier of the event in myKaarma.                                                                      |
| **departmentUuid**                            | Unique identifier of the dealer department for which the appointment is scheduled.                               |
| **subscriberName**                            | Name of the service subscriber or the user of our APIs that triggered the event.                                |
| **serviceAppointmentRequestLoanerBookingList** | This is a list to show all the loaner bookings that have been done for this appointment. This usually contains information like booking ID, time, etc., when booking loaners through third parties like TSD, Logitrac, etc. |
| **event**                                     | This field basically tells you what triggered this appointment event. For the complete list of these types of events, please check the table below. |
| **appointmentInfoResponse**                   | This is the data model that you receive from myKaarma when getting appointments. Please refer to <a href="/our-products/scheduler/API/appointment-data-model">this page</a>. for details.        |

This table explains the different values 'event' field in these events can take:


| 'event' Field Value                     | Meaning                                                                                                                                                                                                                                                                                                |
|--------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| **CREATED**                    | The appointment has been created.                                                                                                                                                                                                                                                                         |
| **UPDATED**                    | Some parameter (other than date or time) in the appointment has been changed.                                                                                                                                                                                                                            |
| **CANCELLED**                  | The appointment has been cancelled.                                                                                                                                                                                                                                                                       |
| **PUSHED_DMS**                 | The appointment has been pushed to the data management system (DMS) that the dealership uses.                                                                                                                                                                                                            |
| **REMINDER_TEXT_SENT**          | A reminder text has been sent to the customer.                                                                                                                                                                                                                                                           |
| **REMINDER_EMAIL_SENT**         | A reminder email has been sent to the customer.                                                                                                                                                                                                                                                          |
| **DEALERORDER_MAPPED**          | A repair order has been mapped to the appointment. This signifies that the customer showed up for the appointment.                                                                                                                                                                                       |
| **DEALERORDER_UNMAPPED**        | A repair order has been unmapped from the appointment. This means an incorrect order was mapped and has now been corrected. This can happen when a repair order was mapped based on probable matching (e.g., name, phone number), but a more certain mapping (UUID-based) replaces it.                     |
| **LOANER_BOOKED**               | A loaner has been booked for the customer related to this appointment.                                                                                                                                                                                                                                  |
| **LOANER_CANCELLED**            | The loaner that was booked for the customer has been cancelled.                                                                                                                                                                                                                                         |
| **LOANER_UPDATED**              | There has been some change in the loaner booking that was made earlier.                                                                                                                                                                                                                                |
| **LOANER_BOOKING_FAILURE**      | There has been a failure in the loaner booking system when trying to book a loaner for the customer.                                                                                                                                                                                                   |
| **LOANER_UPDATE_FAILURE**       | There has been a failure in the loaner booking system when trying to update the loaner booking for the customer.                                                                                                                                                                                       |
| **LOANER_CANCEL_FAILURE**       | There has been a failure in the loaner booking system when trying to cancel the loaner booking for the customer.                                                                                                                                                                                       |
| **PUSHED_DMS_FAILURE**          | There has been a failure when trying to push the appointment to the dealership's data management system (DMS).                                                                                                                                                                                          |
| **RESCHEDULED**                 | The appointment has been rescheduled to a different time or date.                                                                                                                                                                                                                                      |
| **SHOW_WITHOUT_RO**             | The appointment has been marked as "show" manually by the service advisor without a repair order (RO) being attached. Some users at the dealership have the authority to do this through myKaarma UI.                                                                                                   |


> **Note**:

- An event with 'event' field as `"UPDATED"` and 'newStatus' as `"No Show"` would mean the customer didn't show up for the appointment.  
  - **Please note:** This appointment can still be marked as **Show** later by the advisor. The event will come with 'event' field as `"DEALERORDER_MAPPED"` and 'newStatus' as `"Show"`.

- An event with 'event' field as `"DEALERORDER_MAPPED"` and 'newStatus' as `"Show"` would mean the customer has shown up for the appointment.  
  - **Please note:** This appointment can still be marked as **No Show** later by the advisor. The event will come with 'event' field as `"DEALERORDER_UNMAPPED"` and 'newStatus' as `"No Show"`. This event is *not published right now*, we are working on publishing this.

## Important Note

- For a single appointment update from myKaarma, you will receive **two appointment events** over the webhook.  
  - This happens because every time an appointment is created/updated from myKaarma, the latest details are pushed to DMS, prompting DMS to send another update event, which triggers the second event over the webhook.  
  - When an appointment is created from myKaarma, you will receive a **SCHEDULED** event (due to myKaarma creation) and an **UPDATED** event (due to the DMS update), for example, when an appointment key is provided by DMS.

:::caution
For now, please ignore order events.
:::

## Example Order Payload Event

The payload will include the model of the Order Info that third-party partners already receive from calling the [myKaarma Order API](https://docs.mykaarma.com/our-products/integration/order/api-reference).
You can find the documentation references for the fields received under `order` key of the payload [here](https://docs.mykaarma.com/our-products/integration/order/how-to-read-a-service-order/#order-details).

> **Note**: The actual payload below would be an escaped stringified JSON and would look something like:
>
> `{"uuid":"ALO6GAyJsjHWKR7rMBxD5lrVWof5K1oMcAPqCnz1GIyx","order":{"type":"RO","header":{"orderNumber":"A85483C","serviceAccount":"KR4CERT-S","accountingAccount":"KR4CERT-A","dmsStatus":"O","status":"O","deptType":"KR4CERT-S",...}`

## Example Payload

```json
{
    "id": "06b8934b-5cd6-4576-bb70-424646e9ad00",
    "timestamp": 1731482869488,
    "dealeruuid": "5765507a95f23d2da7c96b5d88100bfebdc2883af8cb925ce2b61934884b24b5",
    "departmentuuid": "f05f0d7a90c09cd48b8398addd477c8f2acf2dee8bae7b013ee2693e651c62b4",
    "dataType": "service-orders",
    "eventType": "pointintime",
    "payload": '{
        "uuid": "ALO6GAyJsjHWKR7rMBxD5lrVWof5K1oMcAPqCnz1GIyx",
        "order": {
            "type": "RO",
            "header": {
                "orderNumber": "A85483C",
                "serviceAccount": "KR4CERT-S",
                "accountingAccount": "KR4CERT-A",
                "dmsStatus": "O",
                "status": "O",
                "deptType": "KR4CERT-S",
                "advisorNumber": "qa_automation",
                "advisorName": "",
                "dealerAssociateUuid": "2c2407de46d137c17442208b8a7359d9b0ef9abd3ea6e0e33f5bca667a3d1c7a",
                "originalAssociateUUID": "2c2407de46d137c17442208b8a7359d9b0ef9abd3ea6e0e33f5bca667a3d1c7a",
                "appointmentNumber": "",
                "tagNumber": "T205",
                "mileageIn": "75000",
                "mileageOut": "75000",
                "orderDate": "2024-11-12",
                "orderTime": "00:00:00",
                "promisedDate": "2017-05-05",
                "promisedTime": "21:00:00",
                "voidDate": "",
                "closeDate": "2024-11-12",
                "closeTime": "",
                "waiter": "N",
                "rental": "",
                "soldHours": "1.10",
                "actualHours": "1.00",
                "laborCost": "4.00",
                "laborSale": "82.00",
                "laborSaleCustomer": "82.00",
                "laborSaleInternal": "0.00",
                "laborSaleWarranty": "0.00",
                "partsCost": "5.00",
                "partsCostCustomer": "5.00",
                "partsCostInternal": "0.00",
                "partsCostWarranty": "0.00",
                "partsSale": "0.00",
                "partsSaleCustomer": "20.00",
                "partsSaleInternal": "0.00",
                "partsSaleWarranty": "0.00",
                "lubeSale": "",
                "lubeSaleCustomer": "0.00",
                "lubeSaleInternal": "0.00",
                "lubeSaleWarranty": "0.00",
                "miscSale": "5.00",
                "miscSaleCustomer": "5.00",
                "miscSaleInternal": "3.00",
                "miscSaleWarranty": "4.00",
                "subletSale": "",
                "subletSaleCustomer": "5.00",
                "subletSaleInternal": "0.00",
                "subletSaleWarranty": "0.00",
                "customerPayAmount": "16.00",
                "customerPayStateTax": "1.84",
                "warrantyPayStateTax": "",
                "internalPayStateTax": "",
                "internalPayAmount": "0.00",
                "warrantyPayAmount": "0.00",
                "invoiceURL": null,
                "payTypes": "C--",
                "description": null,
                "printDate": null,
                "printTime": null,
                "deliveryAmount": null,
                "estimate": "",
                "localTaxAmountCustomer": "",
                "localTaxAmountWarranty": "",
                "localTaxAmountInternal": "",
                "stockNumber": null,
                "isInternal": false,
                "isVoided": null,
                "invoiceTotal": null
            },
            "vehicle": {
                "uuid": "D25m1pBLieewXSlmPWQ7McGBAOOTDvaRbJMeO01FSGo",
                "vin": "1M1AK06Y96N008881",
                "make": "Honda",
                "key": "Test-789565",
                "model": "CXN613",
                "color": null
            },
            "customer": {
                "uuid": "J0sEQMXRBe_91YvAPV1HR1zMK-rlFYI8jLg1DnjCyHM",
                "key": "CK165710",
                "firstName": "Automation",
                "lastName": "Test-789565"
            },
            "jobs": [
                {
                    "jobIdentifier": "A-1",
                    "jobNumberString": "A",
                    "lopSeqNumber": "1",
                    "laborOpCode": "02",
                    "laborOpCodeDesc": "Customer declined oil filter change.",
                    "laborType": "C",
                    "dmsLaborType": "C",
                    "serviceType": "",
                    "jobTotal": "33",
                    "laborSale": "13.00",
                    "soldHours": "0.10",
                    "actualHours": "0.50",
                    "partsSale": "20.00",
                    "miscSale": "5.00",
                    "shopCharge": null,
                    "bookerNo": "1",
                    "dispatchLineStatus": "C93",
                    "techNos": "9999",
                    "campaignCode": "",
                    "parts": null,
                    "gog": [
                        {
                            "itemType": "",
                            "itemDescription": "",
                            "jobNumber": null,
                            "quantity": "",
                            "saleTotal": "",
                            "salePrice": "",
                            "laborType": ""
                        }
                    ],
                    "techHours": [
                        {
                            "techNo": "9999",
                            "partSeqNo": "",
                            "laborCost": "4.00",
                            "laborSale": "13.00",
                            "soldHours": "0.10",
                            "otherHours": "",
                            "laborType": "C",
                            "actualHours": "0.50",
                            "lineCode": "A",
                            "mcdLaborPercentage": "",
                            "timeCardHours": ""
                        }
                    ],
                    "comments": null,
                    "ccc": {
                        "complaint": "CHANGED OIL FILTER, LUBE CHASSIS, TOP OFF FLUIDS CK TIRE PRESS.",
                        "complaintCode": "02",
                        "cause": "L.O.F.",
                        "correction": ""
                    },
                    "estimates": {
                        "laborEstimate": null,
                        "partsEstimate": null,
                        "serviceEstimate": null,
                        "taxEstimate": null,
                        "lubeEstimate": null,
                        "miscEstimate": null,
                        "subletEstimate": null
                    },
                    "dispatchCode": "CS10",
                    "complaintCode": "02",
                    "addOnLine": "N",
                    "partsFlag": "1",
                    "dispatchEstimatedDuration": "0.5",
                    "comeBackFlag": "0"
                },
                {
                    "jobIdentifier": "B-2",
                    "jobNumberString": "B",
                    "lopSeqNumber": "2",
                    "laborOpCode": "",
                    "laborOpCodeDesc": "30k service.",
                    "laborType": "C",
                    "dmsLaborType": "C",
                    "serviceType": "",
                    "jobTotal": "35",
                    "laborSale": "15.00",
                    "soldHours": "1.10",
                    "actualHours": "1.50",
                    "partsSale": "20.00",
                    "miscSale": "5.00",
                    "shopCharge": null,
                    "bookerNo": "1",
                    "dispatchLineStatus": "C93",
                    "techNos": "9999",
                    "campaignCode": "",
                    "parts": null,
                    "gog": [
                        {
                            "itemType": "",
                            "itemDescription": "",
                            "jobNumber": null,
                            "quantity": "",
                            "saleTotal": "",
                            "salePrice": "",
                            "laborType": ""
                        }
                    ],
                    "techHours": [
                        {
                            "techNo": "9999",
                            "partSeqNo": "",
                            "laborCost": "6.00",
                            "laborSale": "15.00",
                            "soldHours": "1.10",
                            "otherHours": "",
                            "laborType": "C",
                            "actualHours": "1.50",
                            "lineCode": "B",
                            "mcdLaborPercentage": "",
                            "timeCardHours": ""
                        }
                    ],
                    "comments": null,
                    "ccc": {
                        "complaint": "30k service",
                        "complaintCode": "02",
                        "cause": "L.O.F.",
                        "correction": ""
                    },
                    "estimates": {
                        "laborEstimate": null,
                        "partsEstimate": null,
                        "serviceEstimate": null,
                        "taxEstimate": null,
                        "lubeEstimate": null,
                        "miscEstimate": null,
                        "subletEstimate": null
                    },
                    "dispatchCode": "CS10",
                    "complaintCode": "02",
                    "addOnLine": "N",
                    "partsFlag": "1",
                    "dispatchEstimatedDuration": "0.5",
                    "comeBackFlag": "0"
                },
                {
                    "jobIdentifier": "C-2",
                    "jobNumberString": "C",
                    "lopSeqNumber": "2",
                    "laborOpCode": "",
                    "laborOpCodeDesc": "CUSTOMER STATES OIL PRESSURE LIGHT IS ON",
                    "laborType": "C",
                    "dmsLaborType": "C",
                    "serviceType": "",
                    "jobTotal": "38",
                    "laborSale": "17.00",
                    "soldHours": "1.10",
                    "actualHours": "2.50",
                    "partsSale": "21.00",
                    "miscSale": "5.00",
                    "shopCharge": null,
                    "bookerNo": "1",
                    "dispatchLineStatus": "C93",
                    "techNos": "9999",
                    "campaignCode": "",
                    "parts": null,
                    "gog": [
                        {
                            "itemType": "",
                            "itemDescription": "",
                            "jobNumber": null,
                            "quantity": "",
                            "saleTotal": "",
                            "salePrice": "",
                            "laborType": ""
                        }
                    ],
                    "techHours": [
                        {
                            "techNo": "9999",
                            "partSeqNo": "",
                            "laborCost": "7.00",
                            "laborSale": "17.00",
                            "soldHours": "1.10",
                            "otherHours": "",
                            "laborType": "C",
                            "actualHours": "2.50",
                            "lineCode": "C",
                            "mcdLaborPercentage": "",
                            "timeCardHours": ""
                        }
                    ],
                    "comments": null,
                    "ccc": {
                        "complaint": "CUSTOMER STATES OIL PRESSURE LIGHT IS ON",
                        "complaintCode": "02",
                        "cause": "L.O.F.",
                        "correction": ""
                    },
                    "estimates": {
                        "laborEstimate": null,
                        "partsEstimate": null,
                        "serviceEstimate": null,
                        "taxEstimate": null,
                        "lubeEstimate": null,
                        "miscEstimate": null,
                        "subletEstimate": null
                    },
                    "dispatchCode": "CS10",
                    "complaintCode": "02",
                    "addOnLine": "N",
                    "partsFlag": "1",
                    "dispatchEstimatedDuration": "0.5",
                    "comeBackFlag": "0"
                }
            ],
            "mls": null
        }
    }'
}
```

:::caution
For now, please ignore unrelated events.
:::

## Questions

### Which appointment update events will be sent to the third party?

All appointment updates for the dealers that the third party subscribes to in the context of myKaarma webhooks.

### What if the partner needs more information than what is given in the event such as detailed customer info?

Third-party partners will have to call myKaarma’s APIs post receiving events for further information, if needed.

### Why am I receiving multiple appointment events for a single create/update?

- For a single appointment update from myKaarma, you will receive **two appointment events** over the webhook.
- This happens because every time an appointment is created/updated from myKaarma, the latest details are pushed to DMS, prompting DMS to send another update event, which triggers the second event over the webhook.
- When an appointment is created from myKaarma, you will receive a **SCHEDULED** event (due to myKaarma creation) and an **UPDATED** event (due to the DMS update), for example, when an appointment key is provided by DMS.

### Are customer events 1:1 in terms of customer updates?

Not always, as explained in "The architecture for customer creation and update pushes events via an indexer job, which runs once per second.".

---

// File: mykaarmaWebhooks/signature-verification-for-webhooks

import ImageZoom from '@site/src/components/ImageZoom';

## Context

This document is designed to explain the current pipeline for Signature token verification for myKaarma webhook events.

API partners can take a look at the details about the secret key and the algorithm used for generating the Signature token, a sample cURL for an event received with the signature token in header, and a pseudocode for a Java Spring Boot webhook consumer endpoint with the signature token verification code.

## Need for Signature verification

To ensure that your server only processes webhook deliveries that were sent by myKaarma, and to ensure that the delivery was not tampered with, you should validate the webhook signature before processing the delivery further.  
This will help you avoid spending server time to process deliveries that are not from myKaarma and will help avoid man-in-the-middle attacks.

## Secret key used for signature token generation

All webhook events sent by myKaarma include a `myKaarma-signature-token` header. We generate this header using a secret key that only you and myKaarma know, and will be shared with you beforehand.  
**Currently, the secret key used for the signature token generation process is the same as the username shared with you for the basic auth credentials used for myKaarma APIs access.**
In the meantime, we're working on making this process more robust from a security perspective, which will involve a different strategy for selection of the secret key.

## Algorithm used for signature token generation

Currently, we use the **HMAC SHA256 algorithm** for generating the signature token. The signature token generated is in a **hexadecimal format**.
The algorithm name is also sent pre-pended to the signature token header, so the value for the `myKaarma-signature-token` received on your end will look something like: `sha256=GENERATED_SIGNATURE_TOKEN`

## Sample cURL for an event

Below you'll find the cURL for a sample API request received on a webhook consumer endpoint.
The signature token in header is generated with HMAC SHA256 algorithm using a sample secret key `SampleSecretKey`
```
curl --location 'https://webhook.site/eae397e0-3f75-4f9e-bb58-8863f46f45cf' \
--header 'accept-encoding: gzip,deflate' \
--header 'content-type: text/plain' \
--header 'mykaarma-signature-token: sha256=1440d3d694562d574e8f1fdcd14071d7176efcd9ae692894d6e3d3c42d7667c3' \
--header 'user-agent: Amazon/EventBridge/ApiDestinations' \
--data-raw '{"id":"8ae58f7c-84d8-441b-b2b1-d71c3879fccf","dealeruuid":"cb731d36fd635ddd6ef8dd43500892b0c0249d1c01a46dbcc445a809c0a8e3b2","payload":"{\"uuid\":\"8ae58f7c-84d8-441b-b2b1-d71c3879fccf\",\"departmentUuid\":\"8ec821aefe98664ab15df7c426c3c46f9c37d0b1aeda9ff58df3db89bb0a55a3\",\"subscriberName\":\"mkMobileCheckIn\",\"serviceAppointmentRequestLoanerBookingList\":[],\"event\":\"UPDATED\",\"appointmentInfoResponse\":{\"uuid\":\"ky4qeMUbu7wruhruyk7S4BPTTnJdKiYJiKSJdQED5XI\",\"customerInformation\":{\"firstName\":\"Test\",\"lastName\":\"Customer\",\"company\":null,\"isBusiness\":null,\"customerKey\":null,\"confirmationPhone\":null,\"confirmationEmail\":null,\"custLocale\":\"en-us\",\"uuid\":\"flBBY79kYLFX_4eqyW1YBfXC8wK6plsiA2YlffhzWfg\"},\"vehicleInformation\":{\"vin\":\"1G6AF5S39D0212976\",\"vehicleKey\":null,\"model\":\"ATS\",\"year\":\"2013\",\"brand\":\"Cadillac\",\"trim\":\"3.6L Premium RWD\",\"engine\":null,\"mileage\":null,\"dealerUuid\":null,\"uuid\":\"NAeh4elV2uAII9iamq-GQUhwqmFQneKB10WwdGJ7JJM\"},\"orderInformation\":{\"uuid\":null,\"orderNumber\":null,\"orderDate\":null,\"orderType\":null},\"dealerUuid\":\"cb731d36fd635ddd6ef8dd43500892b0c0249d1c01a46dbcc445a809c0a8e3b2\",\"assignedAdvisorUuid\":\"80c9166f65eecad91e3855555198156470d9cd3e5d7a95841c3a2a7086d1c87a\",\"creatorAdvisorUuid\":\"80c9166f65eecad91e3855555198156470d9cd3e5d7a95841c3a2a7086d1c87a\",\"assignedAdvisorUserUuid\":null,\"creatorAdvisorUserUuid\":null,\"assignedAdvisorDmsDepartmentCode\":null,\"date\":\"2025-04-22 14:17:10\",\"preferredDate\":\"2025-04-22\",\"startTime\":\"2025-04-22 17:15:00\",\"endTime\":\"2025-04-22 17:29:59\",\"transportOption\":{\"uuid\":\"Uuid\",\"altTransportation\":\"None\",\"bookingId\":null,\"bookInThirdParty\":false,\"bookingStartDate\":null,\"bookingEndDate\":null,\"bookingIsManual\":null,\"bookingIsValid\":null,\"loanerSmartLink\":null,\"transportation\":\"None\",\"organicTransportation\":\"None\",\"subTransportOptionUuid\":null},\"appointmentKey\":null,\"mileageText\":\"23449\",\"recall\":false,\"platform\":\"Mobile\",\"appointmentSource\":\"Mobile\",\"status\":\"N\",\"newStatus\":\"Scheduled\",\"comments\":null,\"internalNotes\":\"\\n--HangTag: 4144\",\"isCancelled\":null,\"reminderCount\":0,\"serviceList\":[],\"skillList\":null,\"appointmentCommunicationPreferences\":{\"emailConfirmation\":false,\"textConfirmation\":false,\"emailReminder\":false,\"textReminder\":false,\"confirmationEmail\":\"test.customer@mykaarma.com\",\"confirmationPhoneNumber\":\"+13108170196\",\"notifyCustomer\":true,\"sendCommunicationToDA\":true},\"pdrToOpcodes\":null,\"teamUuid\":null,\"dispatchCode\":\"B10\",\"customerVehicleInspectionId\":null,\"recommendedTiresDTO\":{\"valid\":false,\"chooseLaterOpted\":false,\"laborOpcode\":null,\"tireGroupInfoWithPricing\":null},\"sarmetaData\":null},\"eventCreationDateTime\":\"2025-04-22 04:38:08.590\",\"updatedByUserUuid\":\"80c9166f65eecad91e3855555198156470d9cd3e5d7a95841c3a2a7086d1c87a\"}","timestamp":1745321888596,"type":"appointments"}'
```

<ImageZoom src="/img/screenshots/signature-token-in-header.png" alt="Signature token in header"/>




## Verification process for received signature token

To verify that the event received on your webhook endpoint is a genuine event from myKaarma, you can use the secret key to generate your own signature for each webhook.  
Since only you and myKaarma know the secret key, if both signatures match, you can be sure that a received event came from myKaarma.

### Pseudocode for a Java Spring Boot webhook consumer endpoint

```
@RestController
@RequestMapping("/webhook")
public class WebhookController {

	@PostMapping(value = "/mykaarma-events", produces = "application/json")
	public ResponseEntity<Void> myKaarmaEventsWebhook(@RequestBody String event,
		@RequestHeader("myKaarma-signature-token") String signatureToken) {
		try {
			verifySignatureHeader(event, signatureToken);

			// process event asynchronously now
			// ...
		} catch (Exception e) {
			log.error(" Some error occurred while verifying signature header for myKaarma event ", e);
		}

		return new ResponseEntity<Void>(HttpStatus.OK);
	}


	private void verifySignatureHeader(String payload, String receivedSignatureHeader) throws Exception {
		try {
			String secret = fetchSecretKey();	//this should fetch the secret key configured for webhooks signature token generation. Currently it returns "SampleSecretKey"

			if (receivedSignatureHeader == null || receivedSignatureHeader.isBlank()) {
				log.warn(" In verifySignature ---- Received a blank signature token header ");
				throw new SignatureVerificationException(" In verifySignature ---- Received a blank signature token header ", receivedSignatureHeader);
			}

			String algo = "", receivedSignature = "";
			String[] receivedSignatureParts = receivedSignatureHeader.split("=");
			if (receivedSignatureParts.length >= 2) {
				algo = receivedSignatureParts[0];
				receivedSignature = receivedSignatureParts[1];
			}
			if (algo == null || algo.isBlank() || receivedSignature == null || receivedSignature.isBlank()) {
				log.warn(" In verifySignature ---- Received a blank signature token value = {} or algo = {} ", receivedSignature, algo);
				throw new SignatureVerificationException(" In verifySignature ---- Received a blank signature token value or algo ", receivedSignatureHeader);
			}
			String computedSignature = "";
			if ("sha256".equals(algo)) {
				computedSignature = getComputedSignatureForHMACSHA256(jsonPayload, secret);
			}	//... similarly for other future algos

			// Secure constant-time comparison
			if ( java.security.MessageDigest.isEqual(computedSignature.getBytes(), receivedSignature.getBytes())) {
				return true;
			}

			log.warn(" In verifySignature ---- No signatures found in received signatures = {} matching the expected signature = {} for payload ", receivedSignatureHeader, computedSignature);
			throw new SignatureVerificationException(" In verifySignature ---- No signatures found in received signatures ", receivedSignatureHeader);
		} catch (Exception e) {
			log.warn(" Exception in verifySignature: ", e);
			throw new SignatureVerificationException(" In verifySignature ---- Exception in verifySignature ", receivedSignatureHeader);
		}
	}

	public static String getComputedSignatureForHMACSHA256(String jsonPayload, String secret) throws Exception {
		// Generate HMAC SHA-256 signature
		Mac mac = Mac.getInstance("HmacSHA256");
		SecretKeySpec secretKeySpec = new SecretKeySpec(secret.getBytes(), "HmacSHA256");
		mac.init(secretKeySpec);
		byte[] rawHmac = mac.doFinal(jsonPayload.getBytes());

		// Convert byte array to hex string
		return bytesToHex(rawHmac);
	}

	private static String bytesToHex(byte[] bytes) {
		java.util.Formatter formatter = new java.util.Formatter();
		for (byte b : bytes) {
			formatter.format("%02x", b);
		}
		String hexString = formatter.toString();
		formatter.close();
		return hexString;
	}
}
...
public class SignatureVerificationException extends Exception {

	private static final long serialVersionUID = 2L;
	private final String signatureHeader;

	public SignatureVerificationException(String message, String signatureHeader) {
		super(message);
		this.signatureHeader = signatureHeader;
	}
}

```

## Important Notes

- Signature token generated in myKaarma is stripped of padding. Make sure the expected signature token you generate on your end is also generated in a similar manner.
- Don't transform or process the raw body of the request, including adding whitespace or applying other formatting, before verifying the signature token.
  This results in a different signed payload, meaning signatures won't match when you compare.
- It is recommended to use a secure constant-time comparison method for comparing the expected and the received signature tokens, rather than String.equals or other similar alternatives, to counter a possible DDoS from a malicious entity. For eg. the above sample consumer compares the MessageDigest for the signatures.
- Currently, we support only 1 signature token in header sent in the webhook event. However, keeping in mind the possibilities in the future - of (a) secret key rotation, and (b) signature token generation algorithm rotation - we might need to send multiple signature tokens in the event. In such a case, the format of the event/header might change somewhat. For a breaking change, we'll provide all webhook consumers a 2-week buffer to ensure they are updated to the newer format, before rolling it out.

## Questions

### What do I need to do to start receiving the signature token in header?

Nothing. All events received from myKaarma WILL contain the signature token in the header.

### Can I get some custom headers added specific to my webhook?

Third-party partners can request additional static headers to be added to the webhook API request, as long as these do not conflict with any of the existing header names already being passed in the request.

---

// File: our-products/admin/intro

The myKaarma Admin module contains a set of RESTful APIs which are used in conjunction to manage/administer all the configurations related to a dealership or dealer group.

---

// File: our-products/admin/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/admin/manage/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const ManageApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.manageApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<ManageApiSwagger />

---

// File: our-products/admin/manage/dealer-associate-group/how-to-get-dealerAssociateGroupList

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get DealerAssociate Groups for provided Department uuid

## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/manage/v2/department/{ServiceSubscriberDepartment}/dealerAssociateGroup/list
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `ServiceSubscriberDepartment` | `String` | Unique identifier of DealerDepartment | Yes |

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `manage.dealerassociate.group` | `Department` | Authorises client to manage dealerassociate group |

### Sample Curl

```shell
curl --location 'https://api.mykaarma.com/manage/v2/department/3fed82861160717ea55057293650d3f0e63903c756ec1b85b261a70390ff0d6f/dealerAssociateGroup/list' \
--header 'Authorization: {{basic_auth_token}}'
```

## Response

```json
{
  "errors": [
    {
      "errorCode": 0,
      "errorTitle": "string",
      "errorMessage": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "apiRequestId": "string",
  "dealerAssociateGroups": [
    {
      "name": "string",
      "uuid": "string",
      "virtualDealerAssociateUuid": "string",
      "virtualDealerAssociateIdentifier": {
        "userUUID": "string",
        "departmentUUID": "string"
      },
      "dealerAssociateIdentifiers": [
        {
          "userUUID": "string",
          "departmentUUID": "string"
        }
      ],
      "groupPhoneNumber": "string",
      "valid": true,
      "defaultCommunicationDealerAssociateGroup": true,
      "defaultDealerAssociateUuid": "string",
      "defaultDealerAssociateIdentifier": {
        "userUUID": "string",
        "departmentUUID": "string"
      },
      "purposesList": [
        {
          "key": "string",
          "name": "string",
          "authorities": [
            {
              "authority": "string",
              "description": "string"
            }
          ],
          "uuid": "string"
        }
      ],
      "dealerAssociateGroupAuthorities": [
        {
          "authority": "string",
          "description": "string"
        }
      ],
      "virtualDealerAssociateUserUuid": "string",
      "enableGroupThreadOwnership": true
    }
  ]
}
```

---

// File: our-products/admin/manage/dealer-associate-group/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage Dealer Associate Group.
<DocCardList />

---

// File: our-products/admin/manage/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage dealer configurations.

<DocCardList />

---

// File: our-products/admin/manage/manual-templates/how-to-create-manual-template

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can create manual templates.
To create manual templates, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

The endpoint mentioned below can be used to create multiple manual templates at once by passing a list -

## Request
### HTTP request
<pre>
POST https://api.mykaarma.com/manage/v2/dealer/<PathVariable variableName="ServiceSubscriberDealer"/>/manualTemplates
</pre>

### Parameters
  | Parameter Name | Value | Description |
  | ---         |     :---:      |   --- |
  | `ServiceSubscriberDealer`  |     `string`     |   Unique identifier (UUID) of the dealership for which you want to create manual templates |

### Authorization
This request requires following scopes

| Scope |  Level | Description |
| ---         |     :---:      |   --- |
| `manage.dealer.write`  | `Dealer`  | Authorizes client to create manual templates for given dealership |

### Request Body
| Parameter Name | Value | Description |
  | ---         |     :---:      |   --- |
| `{{template}}`  |     `string`     |   Template body |
| `{{title}}`  |     `string`     |   Title of the template |

### Curl
```shell
curl -X POST "https://api.mykaarma.com/manage/v2/dealer/{{ServiceSubscriberDealer}}/manualTemplates" 
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "templates": [
    {
      "template": {{template}},
      "title": {{title}}
    }
  ]
}'
```
### Response
```json
{
  "apiRequestId": "string",
  "errors": [
    {
      "errorCode": "number",
      "errorMessage": "string",
      "errorTitle": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": "number",
      "warningMessage": "string",
      "warningTitle": "string"
    }
  ]
}
```

### Sample Response
```json
{
  "errors": [
    {
      "errorCode": 100004,
      "errorTitle": "REQUEST_NOT_AUTHORIZED",
      "errorMessage": "Authentication passed but Authorization failed."
    }
  ],
  "warnings": [],
  "apiRequestId": "a3f2dc40-1913-4883-8c82-4585723402ec"
}
```

---

// File: our-products/admin/manage/manual-templates/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage manual templates.
<DocCardList />

---

// File: our-products/admin/manage/manual-templates/how-to-get-manual-templates

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can fetch a list of all the manual templates owned by a dealership.
To get this data, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

The endpoint mentioned below can be used to get the list of all the manual templates for a dealership -

## Request
### HTTP request
<pre>
GET https://api.mykaarma.com/manage/v2/dealer/<PathVariable variableName="ServiceSubscriberDealer"/>/manualTemplates
</pre>
### Parameters
| Parameter Name | Value | Description |
  | ---         |     :---:      |   --- |
| `ServiceSubscriberDealer`  |     `string`     |   Unique identifier (UUID) of the dealership for which you want to create manual templates |

### Authorization
This request requires following scopes

| Scope |  Level | Description |
| ---         |     :---:      |   --- |
| `manage.dealer.read`  | `Dealer`  | Authorizes client to get manual templates for given dealership |

### Curl
```shell
curl -X GET "https://api.mykaarma.com/manage/v2/dealer/{{dealerUuid}}/manualTemplates" 
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json'
```
### Response
```json
{
  "apiRequestId": "string",
  "errors": [
    {
      "errorCode": "number",
      "errorMessage": "string",
      "errorTitle": "string"
    }
  ],
  "templates": [
    {
      "template": "string",
      "title": "string",
      "uuid": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": "number",
      "warningMessage": "string",
      "warningTitle": "string"
    }
  ]
}


{templates} - List containing details of all the manual templates.
```
### Sample Response
```json
{
  "errors": [],
  "warnings": [],
  "apiRequestId": "c984ae02-6bd4-46b4-a323-2f5c78faf64e",
  "templates": [
    {
      "title": "1. Welcome",
      "template": "Please store this number as a contact in your mobile phone as _DealerName . Any call or text to this number gives you direct access to me and my team for all of your service needs. Send STOP to cancel any further texts. _c_mms_vcard",
      "uuid": "97b6cdf38e0d873607b2dba5c9357b73781dfbed788cd77c3c1e56ebaf882247"
    },
    {
      "title": "2. Waiter",
      "template": "_fname -  While you wait, connect to our free Wi-Fi & enjoy complimentary refreshments.",
      "uuid": "27137bdfc75d0dd012d507289ecbdcce73f2d42ccddaa253f56672ce38006245"
    },
    {
      "title": "3. Green MPI",
      "template": "Congratulations _fname! Your Multi Point Inspection is complete. No service needs at this time. Great job!",
      "uuid": "5f4ae4f1fd28fa2663b19e40870c2d75e416a37ef14d57faad44779be5fbb758"
    },
    {
      "title": "4. Call Back",
      "template": "_fname, when convenient, please call me at this number regarding your vehicle.",
      "uuid": "b927fd37d60910af4366a6f04b8ff48b376eae8d94b79bb1b04c51df57ce97be"
    },
    {
      "title": "5. No Answer. No Reply.",
      "template": "Dear _fname, I am trying to contact you. Please call me at this number to discuss your vehicle.",
      "uuid": "2e4cbabff8da17c7f0ef9ed22672413eee9ca26572c97d2bc54d72f3c85860e7"
    },
    {
      "title": "6. Car Ready (Waiter)",
      "template": "Good News _fname! Your vehicle is ready.",
      "uuid": "01ae43c50f6a1dba922afd5db5c09ca2bcc8fb493d33f5881bd2951f7ac58621"
    },
    {
      "title": "8. Car Ready w/$ (offsite)",
      "template": "_fname, your service is complete. Let me know your pick-up time and I'll have your vehicle ready. Repair total = $",
      "uuid": "c3aa00c418248d6b000d55dfba4e516f53c688272c11efec00f9ce58b5cef806"
    },
    {
      "title": "9. Shuttle on the way",
      "template": "_fname, Your shuttle is on its way.",
      "uuid": "f8be685336154cd9c2329e8afdeaa7a8a9d106fe4f3cb8892fd131acbef538ee"
    },
    {
      "title": "10. Follow Up",
      "template": "_fname - Thank you for trusting us with the service of your vehicle. If you have any further questions or concerns, please don't hesitate to text or call me at this number.",
      "uuid": "af5dac1bd310cbf4e0227c093d43fa8b0d21b4352ea21e3677191b96047d059c"
    },
    {
      "title": "1. Welcome Text",
      "template": "Dear _fname, thank you for texting. How may I assist you? Please save this number as _DealerName for convenient communication and rapid responses.",
      "uuid": "faf7509a52b2f2deb80bf66ffded7713b769befa940afa9c04b4a073c83855fc"
    },
    {
      "title": "2. Inquiry Response",
      "template": "Dear _fname, thank you for contacting us. Would you like me to call you or continue via text? I want to communicate with you based on your preference. Please save this number as _DealerName for convenient communication and rapid responses.",
      "uuid": "6064a30472002e2db298739b3c61d42e1fd18f64a22d9fc06929cc5850818721"
    },
    {
      "title": "3. Car Details",
      "template": "Dear _fname, please view this URL for the vehicle details:",
      "uuid": "c6f7a8f8288dc0704e7ba00889e213c2a4de136cb68efbccc8f577401ce65eba"
    },
    {
      "title": "4. Test Drive",
      "template": "I would like to schedule a VIP Test Drive -- more than just around the block! What day and time would work best?",
      "uuid": "9e86aee6f50d1646014f3942e9366004a47944488b34b71f1aa12bbb88ae9abc"
    },
    {
      "title": "5. Invite Into the Dealership",
      "template": "It would be my pleasure to schedule an appointment with you. When are you available this week?",
      "uuid": "c89e7639240f9fa26be478441f6606074734cf4608a0710485df1ab67e9b97aa"
    },
    {
      "title": "6. Satisfaction Follow Up",
      "template": "Just checking in. Do you have any questions or outstanding items that I can assist with?",
      "uuid": "d4f7d97e1f70db2b9ddf851d86d690bd75512a4fcd1e2cd3fc76c98ba808538e"
    },
    {
      "title": "7. Follow-Up",
      "template": "Dear _fname, it’d be my pleasure to assist you if you are still in the market for a vehicle. Please do not hesitate to text or call me on this number with any questions. Thank you for the opportunity for your business.",
      "uuid": "01cedc7da28d5996f87487a5decbea797ffebcd161b812b3684a49c03cae5d6f"
    },
    {
      "title": "Loaner Charges",
      "template": "_fname you have sustained charges based on your recent loaner vehicle usage. We will be sending a bill through an online payment link. Please let me know if you have any questions.",
      "uuid": "215affea837b917d60771393e8bc0db8cbe71d84039c7ea4beee219c1ce0c84a"
    },
    {
      "title": "Loaner Car Damages",
      "template": "_fname you have sustained damages to your loaner vehicle during your recent service visit. We will be sending a bill through an online payment link. Please let me know if you have any questions.",
      "uuid": "1742ae44ed1f810b0a97f578ff59d72d8b6973929763239bd709320edba9fab1"
    }
  ]
}
```

---

// File: our-products/admin/opcodes/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const OpcodeApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.opcodeApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<OpcodeApiSwagger />

---

// File: our-products/admin/opcodes/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage opcode and menus configuration.

<DocCardList />

---

// File: our-products/admin/opcodes/opcodes-and-menus/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage opcodes and menus.
<DocCardList />

---

// File: our-products/admin/opcodes/opcodes-and-menus/operation-data-model

This is the data structure that you will receive every time you are trying to get opcodes and factory menus from our APIs or listening to our events.


## Summary of the fields.

| Parameter Name | Description |
| ---         |   --- |
| `laborOpCode`                                           |  The laborOpcode (Unique Identifier) associated with the operation.                                                   |
| `opCodeName`                                            |  The name of the operation code.                                                                                      |
| `description`                                           | A brief description of the operation.                                                                                |
| `totalPrice`                                            | The total price of the operation.                                                                                    |
| `opCodeDurationInMinutes`                               | The duration of the operation in minutes.                                                                            |
| `isValid`                                               | A flag indicating whether the operation is valid.                                                                    |
| `uuid`                                                  |  The unique identifier (UUID) for the operation.                                                                      |
| `inMobileService`                                       |  Indicates if the operation is available in mobile service.                                                           |
| `inOnlineScheduler`                                     |  Indicates if the operation is available in the online scheduler.                                                     |
| `communicationCode`                                     |  The communication code associated with the operation.                                                                |
| `payType`                                               | The type of payment associated with the operation.                                                                   |
| `inServiceCart`                                         |  Indicates if the operation is included in the service cart.                                                          |
| `inDealerAppScheduler`                                  |  Indicates if the operation is available in the dealer app scheduler.                                                 |
| `dmsDescription`                                        |  The DMS (Dealer Management System) description of the operation.                                                     |
| `laborPrice`                                            | The labor price for the operation.                                                                                   |
| `dmsLaborPrice`                                         | The DMS labor price for the operation.                                                                               |
| `partsPrice`                                            | The parts price for the operation.                                                                                   |
| `dmsPartsPrice`                                         |  The DMS parts price for the operation.                                                                               |
| `taxAmount`                                             |  The tax amount associated with the operation.                                                                        |
| `dmsTaxAmount`                                          |  The DMS tax amount associated with the operation.                                                                    |
| `dmsTotalPrice`                                         |  The total price according to the DMS.                                                                                |
| `sortOrder`                                             |  The sort order of the operation.                                                                                     |
| `correction`                                            |  The correction information related to the operation.                                                                 |
| `cause`                                                 |  The cause information related to the operation.                                                                      |
| `soldHours`                                             |  The number of hours sold for the operation.                                                                          |
| `dispatchCode`                                          |  The dispatch code associated with the operation.                                                                     |
| `comebackFlag`                                          |  Indicates if the operation is a comeback.                                                                            |
| `usagePercentile`                                       |  The usage percentile of the operation.                                                                               |
| `position`                                              |  The position of the operation.                                                                                       |
| `leadTimeInMinutes`                                     |  The lead time in minutes for the operation.                                                                          |
| `isIndexed`                                             |  Indicates if the operation is indexed.                                                                               |
| `isDefault`                                             |  Indicates if the operation is set as default.                                                                        |
| `notes`                                                 |  Any additional notes related to the operation.                                                                       |
| `serviceType`                                           |  The type of service associated with the operation. Possible values are `MAINTENANCE`, `REPAIR`, `INSPECT`, `SERVICE` |
| `serviceTypeServiceCart`                                |  The service type for the service cart.                                                                               |
| `recallId`                                              |  The recall ID associated with the operation.                                                                         |
| `vehicleMileageConfigDTOList[].brandDTO.id`             |  The identifier for the brand in the mileage configuration.                                                           |
| `vehicleMileageConfigDTOList[].brandDTO.name`           |  The name of the brand in the mileage configuration.                                                                  |
| `vehicleMileageConfigDTOList[].brandDTO.motorsMakeId`   |  The identifier for the motors make in the mileage configuration.                                                     |
| `vehicleMileageConfigDTOList[].brandDTO.motorsMakeName` |  The name of the motors make in the mileage configuration.                                                            |
| `vehicleMileageConfigDTOList[].year`                    |  The year associated with the vehicle mileage configuration.                                                          |
| `vehicleMileageConfigDTOList[].model`                   |  The model associated with the vehicle mileage configuration.                                                         |
| `vehicleMileageConfigDTOList[].trim`                    |  The trim associated with the vehicle mileage configuration.                                                          |
| `vehicleMileageConfigDTOList[].engine`                  |  The engine type associated with the vehicle mileage configuration.                                                   |
| `vehicleMileageConfigDTOList[].mileageUuid`             |  The unique identifier (UUID) for the mileage configuration.                                                          |
| `vehicleMileageConfigDTOList[].uuid`                    |  The unique identifier (UUID) for the vehicle mileage configuration.                                                  |
| `vehicleMileageConfigDTOList[].motorsBaseVehicleId`     |  The base vehicle ID in the motors configuration.                                                                     |
| `vehicleMileageConfigDTOList[].motorsEngineId`          |  The engine ID in the motors configuration.                                                                           |
| `vehicleMileageConfigDTOList[].isValid`                 |  Indicates if the vehicle mileage configuration is valid.                                                             |
| `dailyLimitConfigDTOList[].dayNumber`                   |  The day number for the daily limit configuration.                                                                    |
| `dailyLimitConfigDTOList[].dayLimit`                    |  The limit for the specified day in the daily limit configuration.                                                    |
| `pullEstimateInSC`                                      |  Indicates if the estimate should be pulled into the service cart.                                                    |
| `miscPrice`                                             |  The miscellaneous price associated with the operation.                                                               |
| `useDmsPrice`                                           |  Indicates if the DMS price should be used for the operation.                                                         |
| `showDmsPriceMismatchWarning`                           |  Indicates if a warning should be shown when there is a price mismatch between the DMS and MyKaarma.                  |
| `noPartsNeeded`                                         |  Indicates if no parts are needed for the operation.                                                                  |
| `inCheckIn`                                             |  Indicates if the operation is available during check-in.                                                             |
| `quickOpLiteUuid`                                       |  The unique identifier (UUID) for the parent operation code. Only needed for service-menu.                            |
| `invoiceLineList[]`                                     |  A list of invoice lines (operations codes) associated with the service-menu.                                         |
| `menuName`                                              |  The name of the service-menu.                                                                                        |
| `.operationType`                                         |  The type of operation, `OPCODE` or `SERVICEMENU`.                                                                    |
| `dealerUuid`                                            |  The unique identifier (UUID) of the dealer associated with the operation.                                            |
| `isCustomConcern`                                       |  Indicates if the operation is a custom concern.                                                                      |
| `taxonomyId`                                            |  The taxonomy identifier associated with the operation.                                                               |
| `severityFlag`                                          |  The severity flag associated with the operation.                                                                     |
| `isSeverityNormal`                                      |  Indicates if the severity of the operation is normal.                                                                |
| `isSeveritySevere`                                      |  Indicates if the severity of the operation is severe.                                                                |
| `notesSevere[]`                                         |  A list of notes related to severe operations.                                                                        |
| `notesNormal[]`                                         |  A list of notes related to normal operations.                                                                        |
| `motorsOperationName`                                   |  The name of the motors operation.                                                                                    |
| `mileage`                                               |  The mileage associated with the operation.                                                                           |
| `motorsMake`                                            |  The make of the motors associated with the operation.                                                                |
| `motorsMakeId`                                          |  The identifier for the motors make.                                                                                  |


Note - Above summary of the fields doesn't contain all the fields that we return in the response. We will be updating this documentation to include the summary of all fields.

---

// File: our-products/admin/opcodes/opcodes-and-menus/how-to-get-factory-menus

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can fetch a list of all the factory-menus owned by a dealership and use filters.
To get this data, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

The endpoint mentioned below can be used to get the list of all the factory-menus owned by a dealership.

Currently, the required attributes to fetch factory menus are mileageDTOList, brandUuidList, and any one of the following vehicle information.

| Vehicle Information |
  |----------------|
| VIN |
| make, model & year    |
| myKaarma vehicle UUID |
| baseVehicleId |


If you don't have brandUuidList, ask your mykaarma API representative.

Note that you need to show the models and years from mykaarma in your schedule to use the model and year parameter to fetch factory menus. Otherwise, there may be an issue with matching the names of the models with mykaarma. If you don't use mykaarma models and do not have other parameters to fetch menus, talk to your mykaarma API representative to discuss further. 

### How to Pass Factory Menu in Create Appointment API

To pass the Factory Menu in the **Create Appointment API**, include the following three attributes in the **serviceList** parameter:

| Parameter in `serviceList` (Create Appointment API) | Description                                      | Corresponding Parameter in Factory Menu Response |
|-----------------------------------------------------|--------------------------------------------------|--------------------------------------------------|
| `menuUuid`                                          | Identifies the menu                              | `uuid`                                           |
| `operationType`                                     | Type of the menu. Example: `SERVICEMOTORSMAINTENANCEMENU` | `operationType`                                  |
| `title` or `operationUuid`                          | Identifies the opcode attached to the menu       | For `title` - `laborOpCode`, For `operationUuid` - `quickOpLiteUuid` |

#### Sample `serviceList` Object to Pass in Create Appointment API
```json
"serviceList": [
  {
    "title": "{laborOpCode}",
    "operationUuid": "{quickOpLiteUuid}",
    "menuUuid": "{uuid}",
    "operationType": "{operationType}"
  }
]
```

## Factory Menu Retrieval Process

To process your request, we will utilize the provided vehicle and mileage information to identify the corresponding factory menu.

### Process:

- **Exact Match Search**: We will first attempt to locate a factory menu that precisely matches the provided vehicle and mileage specifications.
- **Nearest Mileage Approximation**: If an exact match is not found, we will search for the closest available factory menu based on mileage.
- **Response Structure**: The response will include the selected factory menu and a "mileage" field. This field will indicate the mileage for which the returned menu is applicable.

### Mileage Approximation Logic:

- For instance, if the input mileage is 12,000 miles and factory menus exist for 10,000 and 20,000 miles, the 10,000-mile menu will be returned.
- Specifically, the 10,000 mile menu will be returned for input mileages ranging from 10,000 to 14,999 miles. The 20,000 mile menu will be returned for input mileages ranging from 15,000 to 20,000 miles.

This methodology ensures that you receive the most relevant and applicable factory menu based on your vehicle and mileage information.

## Request
### HTTP request

```http
POST https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUUID}}/factory-menus/searches
```
### Parameters

| Parameter Name |  Value   | Description                                                                                |
  |----------------|:--------:|--------------------------------------------------------------------------------------------|
| `dealerUUID`   | `string` | Unique identifier (UUID) of the dealership for which you want to fetch the operation codes |

### Authorization
This request requires following scopes

| Scope                    |  Level   | Description                                                   |
|--------------------------|:--------:|---------------------------------------------------------------|
| `kopcode.factory.menu.read` | `Dealer` | Authorizes client to get factory-menus for given dealership |

### Request Body

#### Required Parameters

The API requires the following parameters:

- `mileageDTOList`
- `typeList`

#### Additional Required Parameters

In addition to the above, you must include **at least one** of the following combinations of parameters:

1. `vin`
2. `make`,`model`,`year`
3. `brandUuidList`,`vehicleUuid`
4. `brandUuidList`,`baseVehicleId`

**Note**: To use **Make**, **Model**, and **Year**, you must first obtain the corresponding information from myKaarma to avoid any mismatches in naming.


#### All Supported Parameters
| Parameter Name                      |       Value        | Required | Description                                                                                                                                                                                                                            |
|-------------------------------------|:------------------:|:--------:|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `startPosition`                 |      `number`      |    No    | The starting position for paginated results. This field is used to define the beginning index for fetching records.                                                                                                                    |
| `endPosition`                   |      `number`      |    No    | The ending position for paginated results. This field is used to define the last index for fetching records.                                                                                                                           |
| `isLastPage`                    |     `boolean`      |    No    | A flag indicating if the current set of results is the last page. If `true`, no further pages are available.                                                                                                                           |
| `resultSize`                    |      `number`      |    No    | The number of results returned in the current response. This field indicates the size of the result set.                                                                                                                               |
| `uuidList`                      |   `list<string>`   |    No    | A list of unique identifiers (UUIDs) of the operation codes. Each string in the array corresponds to a specific factory menus.                                                                                                        |
| `mileageDTOList`                | `list<MileageDTO>` |    Yes    | This is a list of Mileage Data Transfer Objects (DTOs) that includes the `startMileage`. Please provide the vehicle mileage in the `startMileage` field, and ensure that only one mileage entry is included in the list. While this is a list, note that the current API does not support fetching Factory Menus for multiple mileages in a single request. For further clarification, please refer to the sample cURL request. Example - if you want to fetch Factory Menu's for a vehicle with 12,000 Miles, then just pass 12000 in the `startMileage` field.                                        |
| `baseVehicleId`                 |      `number`      |    No    | The identifier for the base vehicle. This ID is used to specify the base model or type of vehicle associated with the operation codes.                                                                                                 |
| `engineId`                      |      `number`      |    No    | The identifier for the engine. This field is used to specify the engine type associated with the operation codes.                                                                                                                      |
| `severityFlag`                  |      `string`      |    No    | A flag or indicator of the severity level associated with the operation codes. The value could represent different levels of severity (`NORMAL`, `SEVERE`).                                                                            |
| `brandUuidList`                      |   `list<string>`   |    No    | A list of brand uuids associated with the operation codes. Each string in the array represents a specific brand.                                                                                                                |
| `vin`                 |      `string`      |    No    | VIN of the vehicle.                                                                                                  |
| `model`                 |      `string`      |    No    | model of the vehicle.                                                                                                |
| `year`                 |      `string`      |    No    | year of the vehicle.                                                                                                 |
| `vehicleUuid`                 |      `string`      |    No    | A Unique identifier of the vehicle at myKaarma.                                                                                              |
| `make`                 |      `string`      |    No    | Make or Brand name of the vehicle at myKaarma. |
| `typeList` | `list<string>` | Yes | A list of types related to the request. Each string in the array represents a specific type, such as `SERVICEMOTORSMAINTENANCEMENU`, and `SERVICEMOTORSLINEITEM`. At present, we recommend just using `SERVICEMOTORSMAINTENANCEMENU` in this list in your request. |

### Curl
```shell
curl -X POST "https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUuid}}/factory-menus/searches"
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "startPosition": {{startPosition}},
  "endPosition": {{endPosition}},
  "isLastPage": {{isLastPage}},
  "resultSize": {{resultSize}},
  "uuidList": {{uuidList}},
  "typeList": {{typeList}},
  "mileageDTOList": [
    {
      "startMileage": {{startMileage}}
    }
  ],
  "baseVehicleId": {{baseVehicleId}},
  "engineId": {{engineId}},
  "make": {{make}},
  "vehicleUuid": {{vehicleUuid}},
  "year": {{year}},
  "model": {{model}},
  "vin": {{vin}},
  "brandUuidList": {{brandUuidList}},
}'
```
### Response
```json
{
  "errors": [
    {
      "errorName": "string",
      "errorMessage": "string",
      "errorCode": 0
    }
  ],
  "warnings": [
    {
      "warningCode": "string",
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "statusCode": 0,
  "apiRequestId": "string",
  "operationDTOList": [
    {
      "laborOpCode": "string",
      "opCodeName": "string",
      "description": "string",
      "totalPrice": "string",
      "opCodeDurationInMinutes": "string",
      "isValid": true,
      "uuid": "string",
      "inMobileService": true,
      "inOnlineScheduler": true,
      "communicationCode": "string",
      "payType": "string",
      "inServiceCart": true,
      "inDealerAppScheduler": true,
      "dmsDescription": "string",
      "laborPrice": "string",
      "dmsLaborPrice": "string",
      "partsPrice": "string",
      "dmsPartsPrice": "string",
      "taxAmount": "string",
      "dmsTaxAmount": "string",
      "dmsTotalPrice": "string",
      "sortOrder": 0,
      "correction": "string",
      "cause": "string",
      "soldHours": 0,
      "dispatchCode": "string",
      "comebackFlag": true,
      "usagePercentile": 0,
      "position": 0,
      "leadTimeInMinutes": 0,
      "isIndexed": true,
      "isDefault": true,
      "notes": "string",
      "serviceType": "string",
      "serviceTypeServiceCart": "string",
      "recallId": "string",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 0,
            "name": "string",
            "motorsMakeId": 0,
            "motorsMakeName": "string"
          },
          "year": "string",
          "model": "string",
          "trim": "string",
          "engine": "string",
          "mileageUuid": "string",
          "uuid": "string",
          "motorsBaseVehicleId": "string",
          "motorsEngineId": "string",
          "isValid": true
        }
      ],
      "dailyLimitConfigDTOList": [
        {
          "dayNumber": 0,
          "dayLimit": 0
        }
      ],
      "pullEstimateInSC": true,
      "miscPrice": "string",
      "useDmsPrice": true,
      "showDmsPriceMismatchWarning": true,
      "noPartsNeeded": true,
      "inCheckIn": true,
      "quickOpLiteUuid": "string",
      "invoiceLineList": [
        "string"
      ],
      "menuName": "string",
      "operationType": "OPCODE",
      "dealerUuid": "string",
      "isCustomConcern": true,
      "taxonomyId": 0,
      "severityFlag": "string",
      "isSeverityNormal": true,
      "isSeveritySevere": true,
      "notesSevere": [
        "string"
      ],
      "notesNormal": [
        "string"
      ],
      "motorsOperationName": "string",
      "mileage": 0,
      "motorsMake": "string",
      "motorsMakeId": 0,
      "totalPriceForConversion": 0
    }
  ],
  "totalCount": 0,
  "mkAndDmsSimilarOpcodeCount": 0,
  "pricingVisibleToCustomer": true
}
```
### Sample Response
```json
{
    "errors": null,
    "warnings": null,
    "statusCode": 200,
    "apiRequestId": "c043b46a-7f03-4bc8-a7d9-22620bc97bbe",
    "operationDTOList": [
        {
            "laborOpCode": "30K",
            "opCodeName": "30K/3 YR SCHEDULED MAINTENANCE",
            "description": "OIL AND FILTER CHANGE AND MULTI-POINT VISUAL INSPECTION.  IF DIESEL, ALSO DRAIN WATER FROM FUEL FILTER, AND FILL ADBLUE.",
            "totalPrice": null,
            "opCodeDurationInMinutes": null,
            "isValid": true,
            "uuid": "b1u6v1ceadIzjrIYiPVqaK2V_axRMPw22vM9UQLDBq0",
            "inMobileService": false,
            "inOnlineScheduler": false,
            "communicationCodes": null,
            "payType": null,
            "inServiceCart": false,
            "inDealerAppScheduler": true,
            "dmsDescription": "CUSTOMER REQUESTS THE 30K OIL AND FILTER CHANGE AND MULTI-POINT VISUAL INSPECTION.  IF DIESEL, ALSO DRAIN WATER FROM FUEL FILTER, AND FILL ADBLUE.",
            "laborPrice": null,
            "dmsLaborPrice": null,
            "partsPrice": null,
            "dmsPartsPrice": null,
            "taxAmount": null,
            "dmsTaxAmount": null,
            "dmsTotalPrice": null,
            "sortOrder": null,
            "correction": null,
            "cause": null,
            "soldHours": null,
            "dispatchCode": null,
            "comebackFlag": null,
            "usagePercentile": null,
            "position": 0,
            "leadTimeInMinutes": null,
            "isIndexed": true,
            "isDefault": null,
            "notes": null,
            "serviceType": null,
            "serviceTypeServiceCart": null,
            "recallId": null,
            "vehicleMileageConfigDTOList": [
                {
                    "brandDTO": {
                        "id": null,
                        "name": null,
                        "motorsMakeId": 2,
                        "motorsMakeName": "Porsche"
                    },
                    "year": null,
                    "model": null,
                    "trim": null,
                    "engine": null,
                    "mileageUuid": "DZ8GPo4RnBphcpb6SbsjGORL-sJwAmHSnDsQLOvxIoo",
                    "uuid": null,
                    "motorsBaseVehicleId": "84",
                    "motorsEngineId": "185",
                    "isValid": null
                }
            ],
            "dailyLimitConfigDTOList": null,
            "pullEstimateInSC": null,
            "miscPrice": null,
            "useDmsPrice": null,
            "showDmsPriceMismatchWarning": null,
            "noPartsNeeded": null,
            "inCheckIn": null,
            "quickOpLiteUuid": "WjSR3tYxEOsX5De_XZJe43ZBo3KTyxZY3VU7Zyi0ekE",
            "invoiceLineList": [
                {
                    "laborOpCode": null,
                    "opCodeName": null,
                    "description": null,
                    "totalPrice": null,
                    "opCodeDurationInMinutes": null,
                    "isValid": true,
                    "uuid": "XlcXeAZ9mDC2HLYewQB-n5s6JygGlcOMcyouw2gLnYk",
                    "inMobileService": null,
                    "inOnlineScheduler": null,
                    "communicationCodes": null,
                    "payType": null,
                    "inServiceCart": null,
                    "inDealerAppScheduler": null,
                    "dmsDescription": null,
                    "laborPrice": null,
                    "dmsLaborPrice": null,
                    "partsPrice": null,
                    "dmsPartsPrice": null,
                    "taxAmount": null,
                    "dmsTaxAmount": null,
                    "dmsTotalPrice": null,
                    "sortOrder": null,
                    "correction": null,
                    "cause": null,
                    "soldHours": null,
                    "dispatchCode": null,
                    "comebackFlag": null,
                    "usagePercentile": null,
                    "position": 0,
                    "leadTimeInMinutes": null,
                    "isIndexed": true,
                    "isDefault": null,
                    "notes": null,
                    "serviceType": "Service",
                    "serviceTypeServiceCart": null,
                    "recallId": null,
                    "vehicleMileageConfigDTOList": null,
                    "dailyLimitConfigDTOList": null,
                    "pullEstimateInSC": null,
                    "miscPrice": null,
                    "useDmsPrice": null,
                    "showDmsPriceMismatchWarning": null,
                    "noPartsNeeded": null,
                    "inCheckIn": null,
                    "quickOpLiteUuid": null,
                    "invoiceLineList": null,
                    "menuName": null,
                    "operationType": "SERVICEMOTORSLINEITEM",
                    "dealerUuid": "111b2de0b812fc8c1e408dede951d60d8c62d54da0c0269c43aa6a15ae7aff18",
                    "isCustomConcern": null,
                    "taxonomyId": 11747,
                    "severityFlag": null,
                    "isSeverityNormal": true,
                    "isSeveritySevere": null,
                    "notesSevere": null,
                    "notesNormal": null,
                    "motorsOperationName": "Engine Oil Filter R&R",
                    "mileage": 40000,
                    "motorsMake": "Porsche",
                    "motorsMakeId": 2,
                    "totalPriceForConversion": 0.0
                }
            ],
            "menuName": "30000 miles maintenance schedule",
            "operationType": "SERVICEMOTORSMAINTENANCEMENU",
            "dealerUuid": "c01e46c0bfdc4ef5110a36ddf5826f8d0b8e7a4897e99f89d88248dcc7bff48b",
            "isCustomConcern": null,
            "taxonomyId": 0,
            "severityFlag": null,
            "isSeverityNormal": null,
            "isSeveritySevere": null,
            "notesSevere": null,
            "notesNormal": null,
            "motorsOperationName": "30000 miles maintenance schedule",
            "mileage": null,
            "motorsMake": "Porsche",
            "motorsMakeId": 2,
            "totalPriceForConversion": 0.0
        }
    ],
    "totalCount": 196,
    "mkAndDmsSimilarOpcodeCount": null,
    "pricingVisibleToCustomer": null
}
```
## Operation data model

Please refer to <a href="/our-products/admin/opcodes/opcodes-and-menus/operation-data-model">operation data model</a> to see all the parameters you will get when you get opcodes and factory menus from myKaarma APIs or events.

---

// File: our-products/admin/opcodes/opcodes-and-menus/how-to-get-opcodes-and-menus

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can fetch a list of all the operation codes and service-menus owned by a dealership and use filters.
To get this data, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

The endpoint mentioned below can be used to get the list of all the operation codes and service-menus owned by a dealership.

## Request
### HTTP request

```http
POST https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUUID}}/operations/searches
```
### Parameters
| Parameter Name |  Value   | Description                                                                                |
  |----------------|:--------:|--------------------------------------------------------------------------------------------|
| `dealerUUID`   | `string` | Unique identifier (UUID) of the dealership for which you want to fetch the operation codes |

### Authorization
This request requires following scopes

| Scope                    |  Level   | Description                                                   |
|--------------------------|:--------:|---------------------------------------------------------------|
| `kopcode.operation.read` | `Dealer` | Authorizes client to get operation codes for given dealership |

### Pagination

Dealerships may contain a large number of opcodes, sometimes exceeding thousands. To ensure efficient data retrieval and prevent request timeouts, we strongly recommend using pagination when fetching opcodes. If pagination is not used, requests may time out, and excessive load may be placed on our APIs. 

#### How to Use Pagination

To implement pagination, use the following two fields in your request body:

- **`resultSize`**: Specifies the number of results per request. The maximum allowed value is **50**.
- **`startPosition`**: Identifies the starting index for pagination.

##### Example Workflow

1. Make an initial API request with `resultSize` set between `1` and `50` and `startPosition` set to `0`.
2. The API will return up to `X` (value of `resultSize`) opcodes for **Page 1**.
3. In the response, you will receive a `totalCount` field, which indicates the total number of opcodes available for that dealer.
4. Use `totalCount` to calculate the total number of pages required.
5. For each subsequent page, increment the `startPosition` by `resultSize` while keeping `resultSize` constant.

##### Example Request

```json
{
  "resultSize": 50,
  "startPosition": 0
}
```

##### Example Response

```json
{
  "opcodes": [
    { "id": 1, "name": "Opcode 1" },
    { "id": 2, "name": "Opcode 2" }
    // ... up to resultSize entries
  ],
  "totalCount": 250
}
```

##### Pagination Logic

If `totalCount` is 250 and `resultSize` is 50, then:

- **Page 1:** `startPosition = 0`
- **Page 2:** `startPosition = 50`
- **Page 3:** `startPosition = 100`
- … and so on until all data is retrieved.

Following this approach ensures optimal performance and prevents request failures due to excessive data fetching. In the future, if we receive any request without pagination, we will automatically set `resultSize` to **50** and `startPosition` to **0** at our end, process that request, and return data accordingly.

### Opcode Retrieval Based on BrandUUIDList

#### Overview of Brands mapping in Opcodes

An Opcode can be mapped to one or more brands. Opcodes may have the following brand-mapping behaviors:
- **Mapped to Specific Brands:** An opcode is mapped with one or more brands.
- **Mapped to All Brands:** An opcode applies to all brands.
- **Not Mapped to Any Brand:** An opcode not mapped to any brand.

#### How Brands Are Mapped to Opcodes 
Managers at dealership can update/map opcodes to brands via myKaarma Application

#### Behavior of `brandUUidList` in Request Body while fetching Opcodes

The `brandUuidList` filter is mainly relevant for dealerships having multiple brands. If a dealership has only one brand, filtering by brand UUID is unnecessary.

**1. If  `brandUuidList` is empty or not provided:**
- Returns **all opcodes**, including
  - Opcodes mapped to specific brands.
  - Opcodes mapped to all brands (ALL).
  - Opcodes without any brand mappings.

##### Example Request

```json
{
  "brandUuidList": []
}
```

##### Example Response

```json
{
  "operationDTOList": [
    {
      "laborOpCode": "OPC123",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 1,
            "name": "Brand A",
            "motorsMakeId": 10,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-123",
          "uuid": "uuid-123",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC789",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 2,
            "name": "ALL",
            "motorsMakeId": 20,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-999",
          "uuid": "uuid-999",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC999",
      "vehicleMileageConfigDTOList": []
    }
  ]
}
```
**2. If `brandUuidList` contains one or more brand UUIDs:**
- Returns opcodes that:
  - Are mapped to the provided brand UUID(s).
  - Are mapped to all brands (ALL).
  - Have no mapped brands.
  - Are mapped to multiple brands and include at least one matching the provided brand UUIDs.

##### Example Request

```json
{
  "brandUuidList": ["brand-A-uuid", "brand-B-uuid"]
}
```

##### Example Response

```json
{
  "operationDTOList": [
    {
      "laborOpCode": "OPC002",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 1,
            "name": "Brand A",
            "motorsMakeId": 10,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440001",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440001",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC003",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 40,
            "name": "Brand B",
            "motorsMakeId": 40,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440002",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440002",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC001",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 2,
            "name": "ALL",
            "motorsMakeId": 20,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-all",
          "uuid": "uuid-all",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC004",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 1,
            "name": "Brand A",
            "motorsMakeId": 10,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440001",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440003",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        },
        {
          "brandDTO": {
            "id": 3,
            "name": "Brand C",
            "motorsMakeId": 30,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440003",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440003",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC005",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 40,
            "name": "Brand B",
            "motorsMakeId": 40,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440002",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440004",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        },
        {
          "brandDTO": {
            "id": 4,
            "name": "Brand D",
            "motorsMakeId": 40,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "mileage-uuid-550e8400-e29b-41d4-a716-446655440004",
          "uuid": "uuid-550e8400-e29b-41d4-a716-446655440004",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ]
    },
    {
      "laborOpCode": "OPC006",
      "vehicleMileageConfigDTOList": []
    },
  ]
}

```

### Online Scheduler Visibility

We recommend always setting the onlineSchedulerVisibility parameter to true in your request body.

#### What It Does

This parameter is a flag that determines whether to fetch only the operation codes that are visible in the online scheduler. When set to true, the API will return **only** those operation codes that are currently marked as visible in the online scheduler.

#### Why It Matters

This ensures that if a dealership has configured certain operation codes to be hidden from the online scheduler, those preferences are respected. By sending this field as true, your integration will honor dealership-specific visibility rules, avoiding display of unintended services to end users.

### Request Body
| Parameter Name                      |       Value        | Required | Description                                                                                                                                                                                                                            |
|-------------------------------------|:------------------:|:--------:|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `requesterUserUUID`             |      `string`      |    No    | The unique identifier (UUID) of the user making the request. This field is used to identify the requester within the system.                                                                                                           |
| `onlineSchedulerVisibility`     |     `boolean`      |    No    | A flag indicating whether to only fetch the operation codes visible in the online scheduler. If `true`, only the operation codes which are visible in the online scheduler will be returned.                                           |
| `mobileServiceVisibility`       |     `boolean`      |    No    | A flag indicating whether to only fetch the operation codes visible in the mobile service. If `true`, only the operation codes which are visible in the mobile service will be returned.                                               |
| `serviceCartVisibility`         |     `boolean`      |    No    | A flag indicating whether to only fetch the operation codes visible in the service cart. If `true`, only the operation codes which are visible in the service cart will be returned.                                                   |
| `dealerAppSchedulerVisibility`  |     `boolean`      |    No    | A flag indicating whether to only fetch the operation codes visible in the dealer app scheduler. If `true`, only the operation codes which are visible in the dealer app scheduler will be returned.                                   |
| `checkInVisibility`             |     `boolean`      |    No    | A flag indicating whether to only fetch the operation codes visible in the check-in. If `true`, only the operation codes which are visible in the check-in will be returned.                                                           |
| `startPosition`                 |      `number`      |    No    | The starting position for paginated results. This field is used to define the beginning index for fetching records.                                                                                                                    |
| `endPosition`                   |      `number`      |    No    | The ending position for paginated results. This field is used to define the last index for fetching records.                                                                                                                           |
| `isLastPage`                    |     `boolean`      |    No    | A flag indicating if the current set of results is the last page. If `true`, no further pages are available.                                                                                                                           |
| `resultSize`                    |      `number`      |    No    | The number of results returned in the current response. This field indicates the size of the result set.                                                                                                                               |
| `communicationCodes`            |   `list<string>`   |    No    | A list of communication codes used for filtering the operation codes. Each string in the array represents a specific communication code.                                                                                               |
| `opCodes`                       |   `list<string>`   |    No    | A list of operation codes (`laborOpCode`) that are included in the request. Each string in the array represents a specific operation code.                                                                                             |
| `uuidList`                      |   `list<string>`   |    No    | A list of unique identifiers (UUIDs) of the operation codes. Each string in the array corresponds to a specific operation code.                                                                                                        |
| `getTotalCount`                 |     `boolean`      |    No    | A flag indicating whether the total count of records should be included in the response. If `true`, the total number of records will be returned.                                                                                      |
| `getMkAndDmsSimilarOpcodeCount` |     `boolean`      |    No    | A flag that determines whether the count of similar operation codes between Mk and DMS should be returned. When set to `true`, this count will be included in the response.                                                            |
| `searchToken`                   |      `string`      |    No    | A token used for searching specific records or data. The search token helps in filtering the results based on the given criteria. Search can be done on `laborOpCode`, `mkDescription`, `dmsDescription`, `opCodeName` and `menuName`. |
| `sortPreference`                |      `string`      |    No    | Defines the preferred field for sorting the results. Possible values `OPCODE`, `NAME`, `PRICE`.                                                                                                                                        |
| `sortDirection`                 |      `string`      |    No    | Specifies the direction of sorting. Possible values are `ASCENDING` or `DESCENDING`.                                                                                                                                                   |
| `eventDealerAssociateUuid`      |      `string`      |    No    | The unique identifier (UUID) of the dealer associate associated with the EVENT.                                                                                                                                                        |
| `serviceTypeList`               |   `list<string>`   |    No    | A list of service types to filter the request. Each string in the array represents a specific type of service, possible values are `MAINTENANCE`, `REPAIR`, `INSPECT`, `SERVICE`.                                                      |
| `brandUuidList`                 |   `list<string>`   |    No    | A list of unique indentifiers (UUIDs) of the dealer supported brands. Each string in the array represents a specific brand's UUID.                                                                                                                         |
| `typeList`                      |   `list<string>`   |    No    | A list of types related to the request. Each string in the array represents a specific type, such as `OPCODE`.                                                                                                                         |
| `mileageDTOList`                | `list<MileageDTO>` |    No    | A list of mileage data transfer objects (DTOs) that includes `startMileage`, `repeatInterval`, and `endMileage`. Each object defines the mileage parameters for filtering the operation codes.                                         |
| `baseVehicleId`                 |      `number`      |    No    | The identifier for the base vehicle. This ID is used to specify the base model or type of vehicle associated with the operation codes.                                                                                                 |
| `engineId`                      |      `number`      |    No    | The identifier for the engine. This field is used to specify the engine type associated with the operation codes.                                                                                                                      |
| `minPrice`                      |      `number`      |    No    | The minimum price filter for the results. This value sets the lower bound for total price in the operation codes.                                                                                                                      |
| `maxPrice`                      |      `number`      |    No    | The maximum price filter for the results. This value sets the upper bound for total price in the operation codes.                                                                                                                      |
| `dmsLaborPriceMismatch`         |     `boolean`      |    No    | A flag indicating whether there is a mismatch in labor prices between the DMS (Dealer Management System) and myKaarma. If `true`, only the mismatched ones are returned.                                                               |
| `severityFlag`                  |      `string`      |    No    | A flag or indicator of the severity level associated with the operation codes. The value could represent different levels of severity (`NORMAL`, `SEVERE`).                                                                            |
| `engineList`                    |   `list<string>`   |    No    | A list of engine types or models associated with the operation codes. Each string in the array represents a specific engine.                                                                                                           |
| `modelList`                     |   `list<string>`   |    No    | A list of vehicle models associated with the operation codes. Each string in the array represents a specific model.                                                                                                                    |
| `yearList`                      |   `list<string>`   |    No    | A list of vehicle years associated with the operation codes. Each number in the array represents a specific model year.                                                                                                                |
| `trimList`                      |   `list<string>`   |    No    | A list of vehicle trims associated with the request. Each string in the array represents a specific trim level.                                                                                                                        |

### Curl
```shell
curl -X POST "https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUuid}}/operations/searches"
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "requesterUserUUID": {{requesterUserUUID}},
  "onlineSchedulerVisibility": {{onlineSchedulerVisibility}},
  "mobileServiceVisibility": {{mobileServiceVisibility}},
  "serviceCartVisibility": {{serviceCartVisibility}},
  "dealerAppSchedulerVisibility": {{dealerAppSchedulerVisibility}},
  "checkInVisibility": {{checkInVisibility}},
  "startPosition": {{startPosition}},
  "endPosition": {{endPosition}},
  "isLastPage": {{isLastPage}},
  "resultSize": {{resultSize}},
  "communicationCodes": {{communicationCodes}},
  "opCodes": {{opCodes}},
  "uuidList": {{uuidList}},
  "getTotalCount": {{getTotalCount}},
  "getMkAndDmsSimilarOpcodeCount": {{getMkAndDmsSimilarOpcodeCount}},
  "searchToken": {{searchToken}},
  "sortPreference": {{sortPreference}},
  "sortDirection": {{sortDirection}},
  "eventDealerAssociateUuid": {{eventDealerAssociateUuid}},
  "serviceTypeList": {{serviceTypeList}},
  "brandUuidList": {{brandUUidList}},
  "typeList": {{typeList}},
  "mileageDTOList": [
    {
      "startMileage": {{startMileage}},
      "repeatInterval": {{repeatInterval}},
      "endMileage": {{endMileage}}
    }
  ],
  "baseVehicleId": {{baseVehicleId}},
  "engineId": {{engineId}},
  "minPrice": {{minPrice}},
  "maxPrice": {{maxPrice}},
  "dmsLaborPriceMismatch": {{dmsLaborPriceMismatch}},
  "severityFlag": {{severityFlag}},
  "engineList": {{engineList}},
  "modelList": {{modelList}},
  "yearList": {{yearList}},
  "trimList": {{trimList}}
}'
```
### Response
```json
{
  "errors": [
    {
      "errorName": "string",
      "errorMessage": "string",
      "errorCode": 0
    }
  ],
  "warnings": [
    {
      "warningCode": "string",
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "statusCode": 0,
  "apiRequestId": "string",
  "operationDTOList": [
    {
      "laborOpCode": "string",
      "opCodeName": "string",
      "description": "string",
      "totalPrice": "string",
      "opCodeDurationInMinutes": "string",
      "isValid": true,
      "uuid": "string",
      "inMobileService": true,
      "inOnlineScheduler": true,
      "communicationCode": "string",
      "payType": "string",
      "inServiceCart": true,
      "inDealerAppScheduler": true,
      "dmsDescription": "string",
      "laborPrice": "string",
      "dmsLaborPrice": "string",
      "partsPrice": "string",
      "dmsPartsPrice": "string",
      "taxAmount": "string",
      "dmsTaxAmount": "string",
      "dmsTotalPrice": "string",
      "sortOrder": 0,
      "correction": "string",
      "cause": "string",
      "soldHours": 0,
      "dispatchCode": "string",
      "comebackFlag": true,
      "usagePercentile": 0,
      "position": 0,
      "leadTimeInMinutes": 0,
      "isIndexed": true,
      "isDefault": true,
      "notes": "string",
      "serviceType": "string",
      "serviceTypeServiceCart": "string",
      "recallId": "string",
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 0,
            "name": "string",
            "motorsMakeId": 0,
            "motorsMakeName": "string"
          },
          "year": "string",
          "model": "string",
          "trim": "string",
          "engine": "string",
          "mileageUuid": "string",
          "uuid": "string",
          "motorsBaseVehicleId": "string",
          "motorsEngineId": "string",
          "isValid": true
        }
      ],
      "dailyLimitConfigDTOList": [
        {
          "dayNumber": 0,
          "dayLimit": 0
        }
      ],
      "pullEstimateInSC": true,
      "miscPrice": "string",
      "useDmsPrice": true,
      "showDmsPriceMismatchWarning": true,
      "noPartsNeeded": true,
      "inCheckIn": true,
      "quickOpLiteUuid": "string",
      "invoiceLineList": [
        "string"
      ],
      "menuName": "string",
      "operationType": "OPCODE",
      "dealerUuid": "string",
      "isCustomConcern": true,
      "taxonomyId": 0,
      "severityFlag": "string",
      "isSeverityNormal": true,
      "isSeveritySevere": true,
      "notesSevere": [
        "string"
      ],
      "notesNormal": [
        "string"
      ],
      "motorsOperationName": "string",
      "mileage": 0,
      "motorsMake": "string",
      "motorsMakeId": 0,
      "totalPriceForConversion": 0
    }
  ],
  "totalCount": 0,
  "mkAndDmsSimilarOpcodeCount": 0,
  "pricingVisibleToCustomer": true
}
```
### Sample Response
```json
{
  "errors": null,
  "warnings": null,
  "statusCode": 200,
  "apiRequestId": "a9af1d5e-7909-4c5b-8051-a46c52369acd",
  "operationDTOList": [
    {
      "laborOpCode": "00MYKOIL",
      "opCodeName": "Mykaarma Service",
      "description": "First complimentary oil and filter change.",
      "totalPrice": "848.54",
      "opCodeDurationInMinutes": "3",
      "isValid": true,
      "uuid": "BMKaaGcUuILk_-X-WLOpuqSBLpiOdIRkJ7yPHeDk3r8",
      "inMobileService": false,
      "inOnlineScheduler": true,
      "communicationCode": null,
      "payType": null,
      "inServiceCart": true,
      "inDealerAppScheduler": true,
      "dmsDescription": null,
      "laborPrice": null,
      "dmsLaborPrice": null,
      "partsPrice": "848.54",
      "dmsPartsPrice": null,
      "taxAmount": null,
      "dmsTaxAmount": null,
      "dmsTotalPrice": null,
      "sortOrder": 1,
      "correction": null,
      "cause": null,
      "soldHours": 0,
      "dispatchCode": null,
      "comebackFlag": null,
      "usagePercentile": null,
      "position": 0,
      "leadTimeInMinutes": null,
      "isIndexed": true,
      "isDefault": false,
      "notes": "First Complimentary in-house Service",
      "serviceType": "maintenance",
      "serviceTypeServiceCart": null,
      "recallId": null,
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": -1,
            "name": "ALL",
            "motorsMakeId": 0,
            "motorsMakeName": null
          },
          "year": "ALL",
          "model": "ALL",
          "trim": "ALL",
          "engine": "ALL",
          "mileageUuid": "oycKFuETr-rbZhW3jJdNSps3ILa_hnICIdjbaAh65-I",
          "uuid": "5zbqGG8p23DNDA_IWBS-szskfnQZnLEE8RIDXo1uM1s",
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ],
      "dailyLimitConfigDTOList": [
        {
          "dayNumber": 0,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 1,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 2,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 3,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 4,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 5,
          "dayLimit": 2147483647
        },
        {
          "dayNumber": 6,
          "dayLimit": 2147483647
        }
      ],
      "pullEstimateInSC": null,
      "miscPrice": null,
      "useDmsPrice": null,
      "showDmsPriceMismatchWarning": null,
      "noPartsNeeded": false,
      "inCheckIn": true,
      "quickOpLiteUuid": null,
      "invoiceLineList": null,
      "menuName": null,
      "operationType": "OPCODE",
      "dealerUuid": "29855ff5a66481efac200a67bf806c38f28e378b84e3dd46ec8578ca00ba31dd",
      "isCustomConcern": null,
      "taxonomyId": 0,
      "severityFlag": null,
      "isSeverityNormal": null,
      "isSeveritySevere": null,
      "notesSevere": null,
      "notesNormal": null,
      "motorsOperationName": null,
      "mileage": null,
      "motorsMake": null,
      "motorsMakeId": 0,
      "totalPriceForConversion": 848.54
    },
    {
      "laborOpCode": "00MYKOIL",
      "opCodeName": null,
      "description": "Oil leak and filter change",
      "totalPrice": "37.0",
      "opCodeDurationInMinutes": null,
      "isValid": true,
      "uuid": "ZNCB8aQ1GPVwPpZIE_BO-aBjtGJt2ocK-dwYUFaoPFI",
      "inMobileService": false,
      "inOnlineScheduler": true,
      "communicationCode": null,
      "payType": null,
      "inServiceCart": true,
      "inDealerAppScheduler": false,
      "dmsDescription": null,
      "laborPrice": "10.0",
      "dmsLaborPrice": null,
      "partsPrice": "15.0",
      "dmsPartsPrice": null,
      "taxAmount": null,
      "dmsTaxAmount": null,
      "dmsTotalPrice": null,
      "sortOrder": null,
      "correction": null,
      "cause": null,
      "soldHours": null,
      "dispatchCode": null,
      "comebackFlag": null,
      "usagePercentile": null,
      "position": 0,
      "leadTimeInMinutes": null,
      "isIndexed": true,
      "isDefault": null,
      "notes": "Test Menu for Oil and filter Change",
      "serviceType": "MAINTENANCE",
      "serviceTypeServiceCart": "Mechanical Repair",
      "recallId": null,
      "vehicleMileageConfigDTOList": [
        {
          "brandDTO": {
            "id": 85,
            "name": "Mykaarma Auto",
            "motorsMakeId": 0,
            "motorsMakeName": null
          },
          "year": "2022",
          "model": "Grand",
          "trim": "LXI",
          "engine": "2.0L L4 (N) EC2 Turbocharged GAS FI",
          "mileageUuid": "cxlAICikyoWE4mF7ddut0hp6abeIzJn4vkFg6QdxCK4",
          "uuid": null,
          "motorsBaseVehicleId": null,
          "motorsEngineId": null,
          "isValid": null
        }
      ],
      "dailyLimitConfigDTOList": null,
      "pullEstimateInSC": null,
      "miscPrice": "12",
      "useDmsPrice": null,
      "showDmsPriceMismatchWarning": null,
      "noPartsNeeded": null,
      "inCheckIn": false,
      "quickOpLiteUuid": "4NcTfjv3Xf4dZoBMe2fUp-9ffQfjHtrX2Eg89X-Q53c",
      "invoiceLineList": [
        {
          "laborOpCode": "01MYKOIL",
          "opCodeName": "Oil Leak",
          "description": "Oil Leak",
          "totalPrice": "0.0",
          "opCodeDurationInMinutes": null,
          "isValid": false,
          "uuid": "4NcTfjv3Xf4dZoBMe2fUp-9ffQfjHtrX2Eg89X-Q53c",
          "inMobileService": false,
          "inOnlineScheduler": false,
          "communicationCode": null,
          "payType": null,
          "inServiceCart": false,
          "inDealerAppScheduler": false,
          "dmsDescription": null,
          "laborPrice": null,
          "dmsLaborPrice": null,
          "partsPrice": null,
          "dmsPartsPrice": null,
          "taxAmount": null,
          "dmsTaxAmount": null,
          "dmsTotalPrice": null,
          "sortOrder": 1,
          "correction": null,
          "cause": null,
          "soldHours": 0,
          "dispatchCode": null,
          "comebackFlag": null,
          "usagePercentile": null,
          "position": 0,
          "leadTimeInMinutes": null,
          "isIndexed": true,
          "isDefault": false,
          "notes": "For Advisor Use Only",
          "serviceType": "repair",
          "serviceTypeServiceCart": null,
          "recallId": null,
          "vehicleMileageConfigDTOList": null,
          "dailyLimitConfigDTOList": null,
          "pullEstimateInSC": null,
          "miscPrice": null,
          "useDmsPrice": null,
          "showDmsPriceMismatchWarning": null,
          "noPartsNeeded": false,
          "inCheckIn": false,
          "quickOpLiteUuid": null,
          "invoiceLineList": null,
          "menuName": null,
          "operationType": "OPCODE",
          "dealerUuid": "29855ff5a66481efac200a67bf806c38f28e378b84e3dd46ec8578ca00ba31dd",
          "isCustomConcern": null,
          "taxonomyId": 0,
          "severityFlag": null,
          "isSeverityNormal": null,
          "isSeveritySevere": null,
          "notesSevere": null,
          "notesNormal": null,
          "motorsOperationName": null,
          "mileage": null,
          "motorsMake": null,
          "motorsMakeId": 0,
          "totalPriceForConversion": 0
        },
        {
          "laborOpCode": "02MYKOIL",
          "opCodeName": "Oil Services",
          "description": "Oil Services change",
          "totalPrice": "0.0",
          "opCodeDurationInMinutes": null,
          "isValid": false,
          "uuid": "GcexZomkzmVC63H4PSEF737kQA40zzFE3AZr9RVMvHc",
          "inMobileService": false,
          "inOnlineScheduler": true,
          "communicationCode": null,
          "payType": null,
          "inServiceCart": true,
          "inDealerAppScheduler": true,
          "dmsDescription": null,
          "laborPrice": null,
          "dmsLaborPrice": null,
          "partsPrice": null,
          "dmsPartsPrice": null,
          "taxAmount": null,
          "dmsTaxAmount": null,
          "dmsTotalPrice": null,
          "sortOrder": 2,
          "correction": null,
          "cause": null,
          "soldHours": null,
          "dispatchCode": null,
          "comebackFlag": null,
          "usagePercentile": null,
          "position": 0,
          "leadTimeInMinutes": null,
          "isIndexed": true,
          "isDefault": false,
          "notes": "For Advisor Use Only",
          "serviceType": "maintenance",
          "serviceTypeServiceCart": null,
          "recallId": null,
          "vehicleMileageConfigDTOList": null,
          "dailyLimitConfigDTOList": null,
          "pullEstimateInSC": null,
          "miscPrice": null,
          "useDmsPrice": null,
          "showDmsPriceMismatchWarning": null,
          "noPartsNeeded": false,
          "inCheckIn": true,
          "quickOpLiteUuid": null,
          "invoiceLineList": null,
          "menuName": null,
          "operationType": "OPCODE",
          "dealerUuid": "29855ff5a66481efac200a67bf806c38f28e378b84e3dd46ec8578ca00ba31dd",
          "isCustomConcern": null,
          "taxonomyId": 0,
          "severityFlag": null,
          "isSeverityNormal": null,
          "isSeveritySevere": null,
          "notesSevere": null,
          "notesNormal": null,
          "motorsOperationName": null,
          "mileage": null,
          "motorsMake": null,
          "motorsMakeId": 0,
          "totalPriceForConversion": 0
        },
        {
          "laborOpCode": "03MYKFILTER",
          "opCodeName": "Filter Change",
          "description": "Oil & Filter Change. Includes Multi-Point Inspection",
          "totalPrice": "0.0",
          "opCodeDurationInMinutes": null,
          "isValid": false,
          "uuid": "tbwR9E0vRd6askUrh-aQbXCRdDmJd6FAAXIYZQfd4ao",
          "inMobileService": false,
          "inOnlineScheduler": false,
          "communicationCode": null,
          "payType": null,
          "inServiceCart": true,
          "inDealerAppScheduler": false,
          "dmsDescription": null,
          "laborPrice": null,
          "dmsLaborPrice": null,
          "partsPrice": null,
          "dmsPartsPrice": null,
          "taxAmount": null,
          "dmsTaxAmount": null,
          "dmsTotalPrice": null,
          "sortOrder": 3,
          "correction": null,
          "cause": null,
          "soldHours": null,
          "dispatchCode": null,
          "comebackFlag": null,
          "usagePercentile": null,
          "position": 0,
          "leadTimeInMinutes": null,
          "isIndexed": true,
          "isDefault": false,
          "notes": "Filter change pricing starts at $80.50.",
          "serviceType": "maintenance",
          "serviceTypeServiceCart": null,
          "recallId": null,
          "vehicleMileageConfigDTOList": null,
          "dailyLimitConfigDTOList": null,
          "pullEstimateInSC": null,
          "miscPrice": null,
          "useDmsPrice": null,
          "showDmsPriceMismatchWarning": null,
          "noPartsNeeded": false,
          "inCheckIn": true,
          "quickOpLiteUuid": null,
          "invoiceLineList": null,
          "menuName": null,
          "operationType": "OPCODE",
          "dealerUuid": "29855ff5a66481efac200a67bf806c38f28e378b84e3dd46ec8578ca00ba31dd",
          "isCustomConcern": null,
          "taxonomyId": 0,
          "severityFlag": null,
          "isSeverityNormal": null,
          "isSeveritySevere": null,
          "notesSevere": null,
          "notesNormal": null,
          "motorsOperationName": null,
          "mileage": null,
          "motorsMake": null,
          "motorsMakeId": 0,
          "totalPriceForConversion": 0
        }
      ],
      "menuName": "OIL CHANGE MENU",
      "operationType": "SERVICEMENU",
      "dealerUuid": "29855ff5a66481efac200a67bf806c38f28e378b84e3dd46ec8578ca00ba31dd",
      "isCustomConcern": null,
      "taxonomyId": 0,
      "severityFlag": null,
      "isSeverityNormal": null,
      "isSeveritySevere": null,
      "notesSevere": null,
      "notesNormal": null,
      "motorsOperationName": null,
      "mileage": null,
      "motorsMake": null,
      "motorsMakeId": 0,
      "totalPriceForConversion": 37
    }
  ],
  "totalCount": 211,
  "mkAndDmsSimilarOpcodeCount": null,
  "pricingVisibleToCustomer": true
}
```
## Operation data model

Please refer to <a href="/our-products/admin/opcodes/opcodes-and-menus/operation-data-model">operation data model</a> to see all the parameters you will get when you get opcodes and factory menus from myKaarma APIs or events.

---

// File: our-products/admin/opcodes/opcodes-and-menus/how-to-save-opcodes-and-menus

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can save or update a new operation code or service-menu for a dealership.
To be able to do this, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

The endpoint mentioned below can be used to save or update a new operation code or service-menu for a dealership.

## Request
### HTTP request

```http
POST https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUUID}}/operations
```
### Parameters
| Parameter Name |  Value   | Description                                                                               |
  |----------------|:--------:|-------------------------------------------------------------------------------------------|
| `dealerUUID`   | `string` | Unique identifier (UUID) of the dealership for which you want to save the operation codes |

### Authorization
This request requires following scopes

| Scope                     |  Level   | Description                                                    |
|---------------------------|:--------:|----------------------------------------------------------------|
| `kopcode.operation.write` | `Dealer` | Authorizes client to save operation codes for given dealership |

### Request Body
| Parameter Name                                                       | Value Type     | Required | Description                                                                                                          |
|----------------------------------------------------------------------|----------------|:--------:|----------------------------------------------------------------------------------------------------------------------|
| `requesterUserUUID`                                                  | `string`       |    NO    | The unique identifier (UUID) of the user making the request.                                                         |
| `operationDTO.laborOpCode`                                           | `string`       |   Yes    | The laborOpcode (Unique Identifier) associated with the operation.                                                   |
| `operationDTO.opCodeName`                                            | `string`       |    No    | The name of the operation code.                                                                                      |
| `operationDTO.description`                                           | `string`       |    No    | A brief description of the operation.                                                                                |
| `operationDTO.totalPrice`                                            | `string`       |    No    | The total price of the operation.                                                                                    |
| `operationDTO.opCodeDurationInMinutes`                               | `string`       |    No    | The duration of the operation in minutes.                                                                            |
| `operationDTO.isValid`                                               | `boolean`      |    No    | A flag indicating whether the operation is valid.                                                                    |
| `operationDTO.uuid`                                                  | `string`       |    No    | The unique identifier (UUID) for the operation.                                                                      |
| `operationDTO.inMobileService`                                       | `boolean`      |    No    | Indicates if the operation is available in mobile service.                                                           |
| `operationDTO.inOnlineScheduler`                                     | `boolean`      |    No    | Indicates if the operation is available in the online scheduler.                                                     |
| `operationDTO.communicationCode`                                     | `string`       |    No    | The communication code associated with the operation.                                                                |
| `operationDTO.payType`                                               | `string`       |    No    | The type of payment associated with the operation.                                                                   |
| `operationDTO.inServiceCart`                                         | `boolean`      |    No    | Indicates if the operation is included in the service cart.                                                          |
| `operationDTO.inDealerAppScheduler`                                  | `boolean`      |    No    | Indicates if the operation is available in the dealer app scheduler.                                                 |
| `operationDTO.dmsDescription`                                        | `string`       |    No    | The DMS (Dealer Management System) description of the operation.                                                     |
| `operationDTO.laborPrice`                                            | `string`       |    No    | The labor price for the operation.                                                                                   |
| `operationDTO.dmsLaborPrice`                                         | `string`       |    No    | The DMS labor price for the operation.                                                                               |
| `operationDTO.partsPrice`                                            | `string`       |    No    | The parts price for the operation.                                                                                   |
| `operationDTO.dmsPartsPrice`                                         | `string`       |    No    | The DMS parts price for the operation.                                                                               |
| `operationDTO.taxAmount`                                             | `string`       |    No    | The tax amount associated with the operation.                                                                        |
| `operationDTO.dmsTaxAmount`                                          | `string`       |    No    | The DMS tax amount associated with the operation.                                                                    |
| `operationDTO.dmsTotalPrice`                                         | `string`       |    No    | The total price according to the DMS.                                                                                |
| `operationDTO.sortOrder`                                             | `number`       |    No    | The sort order of the operation.                                                                                     |
| `operationDTO.correction`                                            | `string`       |    No    | The correction information related to the operation.                                                                 |
| `operationDTO.cause`                                                 | `string`       |    No    | The cause information related to the operation.                                                                      |
| `operationDTO.soldHours`                                             | `number`       |    No    | The number of hours sold for the operation.                                                                          |
| `operationDTO.dispatchCode`                                          | `string`       |    No    | The dispatch code associated with the operation.                                                                     |
| `operationDTO.comebackFlag`                                          | `boolean`      |    No    | Indicates if the operation is a comeback.                                                                            |
| `operationDTO.usagePercentile`                                       | `number`       |    No    | The usage percentile of the operation.                                                                               |
| `operationDTO.position`                                              | `number`       |    No    | The position of the operation.                                                                                       |
| `operationDTO.leadTimeInMinutes`                                     | `number`       |    No    | The lead time in minutes for the operation.                                                                          |
| `operationDTO.isIndexed`                                             | `boolean`      |    No    | Indicates if the operation is indexed.                                                                               |
| `operationDTO.isDefault`                                             | `boolean`      |    No    | Indicates if the operation is set as default.                                                                        |
| `operationDTO.notes`                                                 | `string`       |    No    | Any additional notes related to the operation.                                                                       |
| `operationDTO.serviceType`                                           | `string`       |    No    | The type of service associated with the operation. Possible values are `MAINTENANCE`, `REPAIR`, `INSPECT`, `SERVICE` |
| `operationDTO.serviceTypeServiceCart`                                | `string`       |    No    | The service type for the service cart.                                                                               |
| `operationDTO.recallId`                                              | `string`       |    No    | The recall ID associated with the operation.                                                                         |
| `operationDTO.vehicleMileageConfigDTOList[].brandDTO.id`             | `number`       |    No    | The identifier for the brand in the mileage configuration.                                                           |
| `operationDTO.vehicleMileageConfigDTOList[].brandDTO.name`           | `string`       |    No    | The name of the brand in the mileage configuration.                                                                  |
| `operationDTO.vehicleMileageConfigDTOList[].brandDTO.motorsMakeId`   | `number`       |    No    | The identifier for the motors make in the mileage configuration.                                                     |
| `operationDTO.vehicleMileageConfigDTOList[].brandDTO.motorsMakeName` | `string`       |    No    | The name of the motors make in the mileage configuration.                                                            |
| `operationDTO.vehicleMileageConfigDTOList[].year`                    | `string`       |    No    | The year associated with the vehicle mileage configuration.                                                          |
| `operationDTO.vehicleMileageConfigDTOList[].model`                   | `string`       |    No    | The model associated with the vehicle mileage configuration.                                                         |
| `operationDTO.vehicleMileageConfigDTOList[].trim`                    | `string`       |    No    | The trim associated with the vehicle mileage configuration.                                                          |
| `operationDTO.vehicleMileageConfigDTOList[].engine`                  | `string`       |    No    | The engine type associated with the vehicle mileage configuration.                                                   |
| `operationDTO.vehicleMileageConfigDTOList[].mileageUuid`             | `string`       |    No    | The unique identifier (UUID) for the mileage configuration.                                                          |
| `operationDTO.vehicleMileageConfigDTOList[].uuid`                    | `string`       |    No    | The unique identifier (UUID) for the vehicle mileage configuration.                                                  |
| `operationDTO.vehicleMileageConfigDTOList[].motorsBaseVehicleId`     | `string`       |    No    | The base vehicle ID in the motors configuration.                                                                     |
| `operationDTO.vehicleMileageConfigDTOList[].motorsEngineId`          | `string`       |    No    | The engine ID in the motors configuration.                                                                           |
| `operationDTO.vehicleMileageConfigDTOList[].isValid`                 | `boolean`      |    No    | Indicates if the vehicle mileage configuration is valid.                                                             |
| `operationDTO.dailyLimitConfigDTOList[].dayNumber`                   | `number`       |    No    | The day number for the daily limit configuration.                                                                    |
| `operationDTO.dailyLimitConfigDTOList[].dayLimit`                    | `number`       |    No    | The limit for the specified day in the daily limit configuration.                                                    |
| `operationDTO.pullEstimateInSC`                                      | `boolean`      |    No    | Indicates if the estimate should be pulled into the service cart.                                                    |
| `operationDTO.miscPrice`                                             | `string`       |    No    | The miscellaneous price associated with the operation.                                                               |
| `operationDTO.useDmsPrice`                                           | `boolean`      |    No    | Indicates if the DMS price should be used for the operation.                                                         |
| `operationDTO.showDmsPriceMismatchWarning`                           | `boolean`      |    No    | Indicates if a warning should be shown when there is a price mismatch between the DMS and MyKaarma.                  |
| `operationDTO.noPartsNeeded`                                         | `boolean`      |    No    | Indicates if no parts are needed for the operation.                                                                  |
| `operationDTO.inCheckIn`                                             | `boolean`      |    No    | Indicates if the operation is available during check-in.                                                             |
| `operationDTO.quickOpLiteUuid`                                       | `string`       |    No    | The unique identifier (UUID) for the parent operation code. Only needed for service-menu.                            |
| `operationDTO.invoiceLineList[]`                                     | `list<string>` |    No    | A list of invoice lines (operations codes) associated with the service-menu.                                         |
| `operationDTO.menuName`                                              | `string`       |    No    | The name of the service-menu.                                                                                        |
| `operationDTO.operationType`                                         | `OPCODE`       |    No    | The type of operation, `OPCODE` or `SERVICEMENU`.                                                                    |
| `operationDTO.dealerUuid`                                            | `string`       |    No    | The unique identifier (UUID) of the dealer associated with the operation.                                            |
| `operationDTO.isCustomConcern`                                       | `boolean`      |    No    | Indicates if the operation is a custom concern.                                                                      |
| `operationDTO.taxonomyId`                                            | `number`       |    No    | The taxonomy identifier associated with the operation.                                                               |
| `operationDTO.severityFlag`                                          | `string`       |    No    | The severity flag associated with the operation.                                                                     |
| `operationDTO.isSeverityNormal`                                      | `boolean`      |    No    | Indicates if the severity of the operation is normal.                                                                |
| `operationDTO.isSeveritySevere`                                      | `boolean`      |    No    | Indicates if the severity of the operation is severe.                                                                |
| `operationDTO.notesSevere[]`                                         | `list<string>` |    No    | A list of notes related to severe operations.                                                                        |
| `operationDTO.notesNormal[]`                                         | `list<string>` |    No    | A list of notes related to normal operations.                                                                        |
| `operationDTO.motorsOperationName`                                   | `string`       |    No    | The name of the motors operation.                                                                                    |
| `operationDTO.mileage`                                               | `number`       |    No    | The mileage associated with the operation.                                                                           |
| `operationDTO.motorsMake`                                            | `string`       |    No    | The make of the motors associated with the operation.                                                                |
| `operationDTO.motorsMakeId`                                          | `number`       |    No    | The identifier for the motors make.                                                                                  |
| `operationDTO.totalPriceForConversion`                               | `number`       |    No    | The total price for conversion related to the operation.                                                             |
| `updateOnDuplicate`                                                  | `boolean`      |    No    | Indicates if the operation should be updated in case of a duplicate.                                                 |

### Curl
```shell
curl -X GET "https://api.mykaarma.com/opcodes/v1/dealers/{{dealerUuid}}/operations"
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
  "requesterUserUUID": {{requesterUserUUID}},
  "operationDTO": {
    "laborOpCode": {{laborOpCode}},
    "opCodeName": {{opCodeName}},
    "description": {{description}},
    "totalPrice": {{totalPrice}},
    "opCodeDurationInMinutes": {{opCodeDurationInMinutes}},
    "isValid": {{isValid}},
    "uuid": {{uuid}},
    "inMobileService": {{inMobileService}},
    "inOnlineScheduler": {{inOnlineScheduler}},
    "communicationCode": {{communicationCode}},
    "payType": {{payType}},
    "inServiceCart": {{inServiceCart}},
    "inDealerAppScheduler": {{inDealerAppScheduler}},
    "dmsDescription": {{dmsDescription}},
    "laborPrice": {{laborPrice}},
    "dmsLaborPrice": {{dmsLaborPrice}},
    "partsPrice": {{partsPrice}},
    "dmsPartsPrice": {{dmsPartsPrice}},
    "taxAmount": {{taxAmount}},
    "dmsTaxAmount": {{dmsTaxAmount}},
    "dmsTotalPrice": {{dmsTotalPrice}},
    "sortOrder": {{sortOrder}},
    "correction": {{correction}},
    "cause": {{cause}},
    "soldHours": {{soldHours}},
    "dispatchCode": {{dispatchCode}},
    "comebackFlag": {{comebackFlag}},
    "usagePercentile": {{usagePercentile}},
    "position": {{position}},
    "leadTimeInMinutes": {{leadTimeInMinutes}},
    "isIndexed": {{isIndexed}},
    "isDefault": {{isDefault}},
    "notes": {{notes}},
    "serviceType": {{serviceType}},
    "serviceTypeServiceCart": {{serviceTypeServiceCart}},
    "recallId": {{recallId}},
    "vehicleMileageConfigDTOList": [
      {
        "brandDTO": {
          "id": {{id}},
          "name": {{name}},
          "motorsMakeId": {{motorsMakeId}},
          "motorsMakeName": {{motorsMakeName}}
        },
        "year": {{year}},
        "model": {{model}},
        "trim": {{trim}},
        "engine": {{engine}},
        "mileageUuid": {{mileageUuid}},
        "uuid": {{uuid}},
        "motorsBaseVehicleId": {{motorsBaseVehicleId}},
        "motorsEngineId": {{motorsEngineId}},
        "isValid": {{isValid}}
      }
    ],
    "dailyLimitConfigDTOList": [
      {
        "dayNumber": {{dayNumber}},
        "dayLimit": {{dayLimit}}
      }
    ],
    "pullEstimateInSC": {{pullEstimateInSC}},
    "miscPrice": {{miscPrice}},
    "useDmsPrice": {{useDmsPrice}},
    "showDmsPriceMismatchWarning": {{showDmsPriceMismatchWarning}},
    "noPartsNeeded": {{noPartsNeeded}},
    "inCheckIn": {{inCheckIn}},
    "quickOpLiteUuid": {{quickOpLiteUuid}},
    "invoiceLineList": [
      {{invoiceLineList}}
    ],
    "menuName": {{menuName}},
    "operationType": {{operationType}},
    "dealerUuid": {{dealerUuid}},
    "isCustomConcern": {{isCustomConcern}},
    "taxonomyId": {{taxonomyId}},
    "severityFlag": {{severityFlag}},
    "isSeverityNormal": {{isSeverityNormal}},
    "isSeveritySevere": {{isSeveritySevere}},
    "notesSevere": [
      {{notesSevere}}
    ],
    "notesNormal": [
      {{notesNormal}}
    ],
    "motorsOperationName": {{motorsOperationName}},
    "mileage": {{mileage}},
    "motorsMake": {{motorsMake}},
    "motorsMakeId": {{motorsMakeId}},
    "totalPriceForConversion": {{totalPriceForConversion}}
  },
  "updateOnDuplicate": {{updateOnDuplicate}}
}'
```


### Response
```json
{
  "errors": [
    {
      "errorName": "string",
      "errorMessage": "string",
      "errorCode": 0
    }
  ],
  "warnings": [
    {
      "warningCode": "string",
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "statusCode": 0,
  "apiRequestId": "string",
  "uuid": "string",
  "operationType": "string"
}
```

### Sample Response 200
```json
{
  "errors" : [ ],
  "warnings" : [ ],
  "statusCode" : 200,
  "apiRequestId" : "b62f8795-ba1e-4be1-92e4-f9345321e448",
  "uuid" : "2x2jiTDAReyD8N729wMWV8K2jQrbuhpNsSiVowKnrZ0",
  "operationType" : "MAINTENANCE"
}
```

### Sample Response 403
```json
{
    "statusCode": 403,
    "errors": [
        {
            "errorCode": "403",
            "errorTitle": "FORBIDDEN_EXCEPTION",
            "errorMessage": "ApiScope does not exist for the provided serviceSubscriber at the required scope level - Authorization failed"
        }
    ],
    "warnings": [],
    "authenticationAndAuthorizationDTO": {
        "isAuthenticated": true,
        "isAuthorized": false,
        "unauthenticatedUuids": [
          "2x2jiTDAReyD8N729wMWV8K2jQrbuhpNsSiVowKnrZ0"
        ],
        "subscriberName": "dummy-ss"
    }
}
```

---

// File: our-products/communication/intro

The myKaarma communication module contains a set of RESTful APIs which are used in conjunction to handle everything related to communication at a dealership or dealer group.

---

// File: our-products/communication/API/how-to-send-text-to-customer

import AuthPageLink from '@site/src/components/AuthPageLink';


To send a text to a customer, you first need your credentials. If you don't already have one, please head over to the <AuthPageLink/> page to see how you can request for credentials from us.

## Request

### HTTP request

<pre>
POST  https://api.mykaarma.com/communications/department/<PathVariable variableName="departmentUUID"/>/user/<PathVariable variableName="userUuid"/>/customer/<PathVariable variableName="customerUuid"/>/message
</pre>

### Parameters

Required path parameters:

| Parameter Name  | Value | Description  |
| --- |  ---  | --- |
| `departmentUUID` | `string` | Unique identifier of dealer department |
| `userUuid` | `string` | Unique identifier of user  |
| `customerUuid` | `string` | Unique identifier of customer |

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `message.create` | `DealerDepartment` | Authorizes client to send text to customers for the provided user's dealer department |

### Request Body

| Property Name | Value | Description |
| --- | --- | --- |
| `messageAttributes` | `object` | Object having attributes of the message |
| `messageAttributes.body` | `string` | Message body of the text to be sent out |
| `messageAttributes.isManual` | `boolean` | Whether the message is being sent out manually by a user's action or automatically by a system |
| `messageAttributes.protocol` | `string` | Set its value to `TEXT` for sending the text message |
| `messageAttributes.type` | `string` | Set its value to `OUTGOING` |
| `messageSendingAttributes` | `object` | Object having attributes for sending of the message |
| `messageSendingAttributes.communicationValueOfCustomer` | `string` | `(Optional)` Phone number of the customer. <span style={{fontWeight : "bold", color : "#BB0000"}} > Note: </span> It should be a valid phone number of the customer for the respective dealer department in myKaarma records.<br/> If this value is not set in the request then a valid preferred phone number of the customer, if present in myKaarma records gets picked |
| `messageSendingAttributes.sendSynchronously` | `boolean` | `(Optional)` After performing preliminary validations if this is set to `true` then request is posted to the Text-sending service (Twilio) synchronously before sending back the response. If it is `false` then message sending is attempted asynchronously (with retries built-in to handle failures in posting to the third party Texting service) and then an update is posted to the below mentioned `callbackURL` if provided |
| `messageSendingAttributes.callbackURL` | `string` | `(Optional)` If sending text asynchronously then pass a callbackURL here to receive update when text sending is attempted |
| `messageSendingAttributes.callbackMetaData` | `object` | `(Optional)` Additional metadata you want us to post with the above status callback's payload |
| `messageSendingAttributes.addTCPAFooter` | `boolean` | `(Optional)` If set to `true` then `Text STOP to opt-out` (configurable per dealership) is appended to the text being sent. Default value: `true` |
| `messageSendingAttributes.addSignature` | `boolean` | `(Optional)` If set to `true` then `-- {User's name}` is appended. Default value: `false` |
| `messageSendingAttributes.addFooter` | `boolean` | `(Optional)` If set to `true` then `-- {Footer for the dealership configured in myKaarma records}` is appended. Default value: `false` |
| `messageSendingAttributes.addFooter` | `boolean` | `(Optional)` If set to `true` then sends vCard of the department's number with the text message. Default value: `false` |

### Sample Curl
```shell
curl --location --request POST 'https://api.mykaarma.com/communications/department/{{departmentUUID}}/user/{{userUuid}}/customer/{{customerUuid}}/message' \
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
    "messageAttributes": {
        "body": "string",
        "isManual": true,
        "protocol": "TEXT",
        "type": "OUTGOING"
    },
    "messageSendingAttributes": {
	    "communicationValueOfCustomer": "{{phoneNumber}}",
        "sendSynchronously": false,
        "callbackURL": "string",
        "callbackMetaData": {
            "additionalProp1": "string"
        },
	    "addTCPAFooter": true,
	    "addSignature": false,
	    "addFooter": false,
        "sendVCard": false
    }
}'
```

## Response
```json
{
    "customerUUID": "string",
    "errors": [
        {
            "errorCode": "string",
            "errorDescription": "string",
            "errorUID": "string"
        }
    ],
    "messageUUID": "string",
    "metaData": {
        "additionalProp1": "string"
    },
    "requestUUID": "string",
    "status": "SUCCESS",
    "warnings": [
        {
            "warningCode": "string",
            "warningDescription": "string"
        }
    ]
}
```

---

// File: our-products/communication/API/how-to-get-conversations-for-customer

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';
import AuthPageLink from '@site/src/components/AuthPageLink';

To get customer conversations, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

## Request 
### HTTP request
<pre>
POST  https://api.mykaarma.com/communications/department/<PathVariable variableName="departmentUUID"/>/user/<PathVariable variableName="userUuid"/>/customer/<PathVariable variableName="customerUuid"/>/message/list
</pre>


### Parameters

| Parameter Name | Value | Description |
| ---         |     :---:      |   --- |
| `departmentUUID`  |     `string`     |   Unique identifier of dealer department |
| `userUuid`  |     `string`     |   Unique identifier of user |
| `customerUuid`  |     `string`     |   Unique identifier of customer |
	
### Authorization

This request requires following scopes

| Scope |  Level | Description |
| ---         |     :---:      |   --- |
| `communications.message.get`  | `DealerDepartment`  | Authorizes client to get customer conversations for given dealer department |

### Request Body

| Property Name | Value | Description |
| ---         |     :---:      |   --- |
| `lastMessageReceivedOn`  |     `datetime`     |  `(Optional)` Conversations older than this date will be fetched. Format [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) `yyyy-MM-dd'T'HH:mm:ssZ`. Example `2025-01-01T00:00:00+0700`. If this is not sent, latest `maxResults` conversations will be returned |
| `protocolsSupported`  |     `list`     |  `(Optional)` Filters on communication mode of conversations to be fetched. Possible values `"TEXT", "EMAIL", "VOICE_CALL", "NONE"` (Internal note / System event/notification). If this is not sent, filter will not be applied and all protocols conversations will be returned |
| `messageUuidsReceivedAtSameTime`  |     `list`     |   `(Optional)` List of messageUUID's of all messages in last iteration having `ReceivedOn` date same as `lastMessageReceivedOn` . If this is not sent, the API call may return duplicate messages. |
| `maxResults`  |     `integer`     |  `(Optional)` Maximum number of customer conversations to be fetched in one API call. `Default Value: 20` |
| `maxDraftsToBeFetched`  |     `integer`     |  `(Optional)` Maximum number of conversation drafts to be fetched in one API call. `Default Value: 100` |
| `fetchDrafts`  |     `boolean`     |  `(Optional)` Boolean (`true/false`) indicating whether to fetch conversation drafts for customer or not. `Default Value: false` |
| `isManual`  |     `boolean`     |  `(Optional)` Boolean (`true/false`) indicating whether to fetch manually sent conversations or automatically sent conversation. If this field is null, both manually and automatically sent conversations will be fetched |

### Sample Curl
```shell
curl --location --request POST 'https://api.mykaarma.com/communications/department/{{departmentUUID}}/user/{{userUuid}}/customer/{{customerUuid}}/message/list' \
--header 'accept: application/json' \
-u "{{username}}:{{password}}" \
--header 'Content-Type: application/json' \
--data-raw '{
    "fetchDrafts": false,
    "isManual": null,
    "lastMessageReceivedOn": "{{lastMessageReceivedOn}}",
    "maxDraftsToBeFetched": 100,
    "maxResults": 20,
    "messageUuidsReceivedAtSameTime": [
        "string"
    ],
    "protocolsSupported": [
        "TEXT","EMAIL","VOICE_CALL","NONE"
    ]
}'
```
## Sample Response
```json
{
  "messagesMap": {
    "MESSAGES": [
      {
        "id": 1,
        "uuid": "messageUUID",
        "messageType": "S",
        "protocol": "X",
        "fromName": "Alice",
        "fromNumber": "1002876975",
        "toName": "Bob",
        "toNumber": "1005858588",
        "messageSize": 287,
        "sentOn": "2022-10-27T15:42:15.000+0000",
        "receivedOn": "2022-10-27T15:42:15.000+0000",
        "routedOn": "2022-10-27T15:42:15.000+0000",
        "tags": null,
        "emailMessageId": null,
        "communicationUid": "twilioCommUUID",
        "messagePurpose": "F",
        "deliveryStatus": "1",
        "dealerDepartmentUuid": "dealerDepartmentUuid",
        "twilioDeliveryFailureMessage": null,
        "numberofMessageAttachments": 0,
        "isManual": true,
        "customerUuid": "customerUuid",
        "customerName": "Bob",
        "dealerUuid": "dealerUuid",
        "dealerAssociateUuid": "dealerAssociateUuid",
        "isRead": false,
        "isArchive": false,
        "messageExtnDTO": {
          "messageUuid": "messageUUID",
          "messageBody": "Bob thank you for trusting me with your service needs. You should have received a short 5 question survey from Mercedes-Benz between   10/16 & 10/18  Please take a moment to fill out the survey for Me, my bonus is based on survey count !!      Thank you so much, greatly appreciated!\n--Alice Mercedes-Benz of Silver Lake",
          "subject": null
        },
        "draftMessageMetaDataDTO": {
          "messageUuid": "messageUUID",
          "status": "SENT",
          "scheduledOn": "2022-10-27T15:47:00.000+0000",
          "reasonForLastFailure": null,
          "addSignature": false
        },
        "messageMetaDataDTO": {
          "messageUuid": "messageUUID",
          "metaData": "{\"ADD_SIGNATURE\":\"TRUE\"}"
        },
        "docFiles": [],
        "messagePredictionDTOSet": null,
        "messageTags": null
      }
    ],
    "DRAFT": [
      {
        "id": 2,
        "uuid": "messageUUID",
        "messageType": "F",
        "protocol": "X",
        "fromName": "Service Dept",
        "fromNumber": null,
        "toName": "Bob",
        "toNumber": "1005858588",
        "messageSize": 180,
        "sentOn": null,
        "receivedOn": null,
        "routedOn": null,
        "tags": null,
        "emailMessageId": null,
        "communicationUid": null,
        "messagePurpose": "F",
        "deliveryStatus": "1",
        "dealerDepartmentUuid": "dealerDepartmentUuid",
        "twilioDeliveryFailureMessage": null,
        "numberofMessageAttachments": 0,
        "isManual": false,
        "customerUuid": "customerUuid",
        "customerName": "Bob",
        "dealerUuid": "dealerUuid",
        "dealerAssociateUuid": "dealerAssociateUuid",
        "isRead": false,
        "isArchive": false,
        "messageExtnDTO": {
          "messageUuid": "messageUUID",
          "messageBody": "\nBob,\n\nThank you for choosing MB of SL to service your vehicle. I wanted to follow up to see if you had any questions or concerns regarding your service.\n\nThank You,\nService\n \n",
          "subject": "After Service Check"
        },
        "draftMessageMetaDataDTO": {
          "messageUuid": "messageUUID",
          "status": "SCHEDULED",
          "scheduledOn": "2023-01-11T00:00:00.000+0000",
          "reasonForLastFailure": null,
          "addSignature": false
        },
        "messageMetaDataDTO": null,
        "docFiles": [],
        "messagePredictionDTOSet": null,
        "messageTags": null
      }
    ]
  },
  "requestUuid": "requestUuid",
  "errors": null,
  "warnings": null
}


```

---

// File: our-products/communication/API/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const CommunicationApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.communicationApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<CommunicationApiSwagger />

---

// File: our-products/communication/API/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to send text/email to dealership customer on behalf of dealership advisor using myKaarma Communication API's.

<DocCardList />

---

// File: our-products/communication/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/inspection/intro

The myKaarma inspection module contains a set of RESTful APIs which are used in conjunction to manage everything related to inspections in mykaarma.

---

// File: our-products/inspection/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/inspection/service-cart/how-to-get-multipoint-inspection

# How to get a MPI
This document is designed to help you understand how you can fetch a MPI.
To get a mpi, you first need your credentials.If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.
The endpoint mentioned below can help you with getting a mpi -

* **Parameters Used**:
1. `{{dealerDepartmentUuid}}` - UUID of the department you want to fetch MPI from
2. `{{orderUUID}}` - UUID of the order you want to fetch
3. `{{mpiUUID}}` - UUID of the multipoint inspection you want to fetch
4. `{{basic_auth_token}}` - Authorization: Basic "generate using username password"

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `multipoint.inspection.fetch`

* **Endpoint**
```curl
curl -X GET "https://api.mykaarma.com/scprocessor/mpi/v1/dealerDepartment/{{dealerDepartmentUuid}}/order/{{orderUUID}}/multiPointInspection/{{mpiUUID}}" 
-H "accept: application/json"
-H "authorization: {{basic_auth_token}}"
" 
```
* **Response**
```
{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "multiPointInsepction": MultiPointInsepction,
  "statusCode": integer,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}

```

* **Quick summary of how to get to details of recommendations**: 
1. The multiPointInsepction (please maintain the typo, apologies) object in the response has multiple sections such brakes, tires etc and the section can be identified using the property name under sections.
2. Each section has multiple checks associated with it such as alignment check, Tires condition check under the Tires section again identified by property name under section->check.
3. Each check may or may not have a recommendation association with it under the property name recommendations. 
4. The approvalState property of individual recommendations may be approved or declined which suggests the decision by the customer for the recommendation.

```
MultiPointInsepction  Object

{
  {
    "allowedRecommendationWorkStatuses": {
      "additionalProp1": "string",
      "additionalProp2": "string",
      "additionalProp3": "string"
    },
    "approvedTotal": 0,
    "assignees": [
      {
        "dealerAssociateName": "string",
        "dealerAssociateUUID": "string"
      }
    ],
    "attachments": [
      {
        "audioUrl": "string",
        "captionsUrl": "string",
        "createdOn": "date",
        "hasAudio": "string",
        "info": "string",
        "link": "string",
        "source": "string",
        "type": "string",
        "updatedOn": "date",
        "uuid": "string",
        "videoLength": 0,
        "visibility": "string"
      }
    ],
    "createdOn": "date",
    "customerIdentifiers": {
      "company": "string",
      "customerKey": "string",
      "customerName": "string",
      "customerUUID": "string",
      "isBuisness": true
    },
    "dealerAssociateIdentifiers": {
      "dealerAssociateName": "string",
      "dealerAssociateUUID": "string"
    },
    "dealerDepartmentUUID": "string",
    "dealerIdentifiers": {
      "dealerName": "string",
      "dealerPhoneNumber": "string",
      "dealerUUID": "string"
    },
    "fieldOptionsMapping": [
      {
        "fieldType": "string",
        "options": [
          {
            "sortOrder": 0,
            "state": "string",
            "value": "string"
          }
        ]
      }
    ],
    "inspectionTypeUuid": "string",
    "labels": [
      "string"
    ],
    "mpiCounts": {
      "approveCount": 0,
      "completeCount": 0,
      "declineCount": 0,
      "laborIncompleteCount": 0,
      "laborRequestedCount": 0,
      "notNeededCount": 0,
      "partsIncompleteCount": 0,
      "partsPendingSaleCount": 0,
      "partsRequestedCount": 0,
      "populatedByPartners": [
        "string"
      ],
      "requiredChecksUnfilledCount": 0,
      "totalManualImageCount": 0,
      "totalManualVideoCount": 0,
      "totalRecommendationCount": 0
    },
    "mpiFlags": {
      "autoSendFailureDescription": "string",
      "customerNotifiedByEmailOn": "date",
      "customerNotifiedByTextOn": "date",
      "isComplete": true,
      "isNotNeeded": true,
      "mode": "FULL_MPI",
      "sentMedium": "string",
      "sentStatus": "string",
      "sentToCustomerOn": "date",
      "sentToName": "string",
      "sentToNumber": "string",
      "uploadedMediaCount": 0,
      "version": 0
    },
    "mpiSecondaryFlags": {
      "captionsRequested": true,
      "customerLinkViewCount": 0,
      "customerSeenOn": "date",
      "estimateOverDue": true,
      "isRequestedFullMPI": true,
      "isfeedbackDone": true,
      "mediaUploadStatus": "string",
      "sendToCustomerOverDue": true,
      "statusOverDue": true,
      "videoOnlySendFailureDescription": "string",
      "videoOnlySentMedium": "string",
      "videoOnlySentStatus": "string",
      "videoOnlySentToCustomerOn": "date",
      "videoOnlySentToName": "string",
      "videoOnlySentToNumber": "string",
      "videoOnlyViewCount": 0
    },
    "mpiSections": [
      {
        "checks": [
          {
            "attachments": [
              {
                "audioUrl": "string",
                "captionsUrl": "string",
                "createdOn": "date",
                "hasAudio": "string",
                "info": "string",
                "link": "string",
                "source": "string",
                "type": "string",
                "updatedOn": "date",
                "uuid": "string",
                "videoLength": 0,
                "visibility": "string"
              }
            ],
            "createdOn": "date",
            "description": "string",
            "dmsLaborType": "string",
            "fieldList": [
              {
                "description": "string",
                "sortOrder": "string",
                "state": "string",
                "type": "string",
                "unit": "string",
                "value": "string"
              }
            ],
            "inspectionState": {
              "isEligibleToSkip": true,
              "isSkipped": true
            },
            "isCustom": true,
            "isEstimateRequired": true,
            "isRequired": true,
            "isSafetyQuestion": true,
            "isValid": true,
            "laborOpCode": "string",
            "laborType": "string",
            "laborTypeCustomerText": "string",
            "lastUpdatedBy": {
              "dealerAssociateName": "string",
              "dealerAssociateUUID": "string"
            },
            "name": "string",
            "notes": "string",
            "originalLaborCost": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "originalPartsCost": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "originalShopFees": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "originalTax": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "originalTotal": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "pdrUuid": "string",
            "populatedByPartner": "string",
            "recommendations": [
              {
                "amount": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "approvalReason": "string",
                "approvalState": "string",
                "attachments": [
                  {
                    "audioUrl": "string",
                    "captionsUrl": "string",
                    "createdOn": "date",
                    "hasAudio": "string",
                    "info": "string",
                    "link": "string",
                    "source": "string",
                    "type": "string",
                    "updatedOn": "date",
                    "uuid": "string",
                    "videoLength": 0,
                    "visibility": "string"
                  }
                ],
                "createdOn": "date",
                "defaultPartsPriceEtaStatus": "string",
                "description": "string",
                "discount": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "externalEstimator": {
                  "daUuid": "string",
                  "departmentUuid": "string",
                  "fName": "string",
                  "lName": "string",
                  "role": "string"
                },
                "hasShopFees": true,
                "hasTax": true,
                "isApprovedDeclinedByDealerAssociate": true,
                "isCustom": true,
                "isDefaultPartsPriceAvailable": true,
                "isEstimateHidden": true,
                "isEstimateRequired": true,
                "isPartsAddedToDms": true,
                "isPartsNeeded": true,
                "isRequested": true,
                "isValid": true,
                "laborHours": 0,
                "laborPricing": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "laborType": "string",
                "lastUpdatedBy": {
                  "dealerAssociateName": "string",
                  "dealerAssociateUUID": "string"
                },
                "miscAmount": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "note": "string",
                "opCodes": [
                  "string"
                ],
                "parts": [
                  {
                    "addedToServiceLine": true,
                    "binLocation": "string",
                    "corePrice": {
                      "amount": 0,
                      "createdOn": "date",
                      "unit": "string",
                      "updatedOn": "date"
                    },
                    "description": "string",
                    "eta": "date",
                    "etaStatus": "string",
                    "isAvailable": true,
                    "mfrCode": "string",
                    "name": "string",
                    "number": "string",
                    "onHoldQuantity": 0,
                    "price": {
                      "amount": 0,
                      "createdOn": "date",
                      "unit": "string",
                      "updatedOn": "date"
                    },
                    "quantity": 0,
                    "splStatusStr": "string",
                    "status": "string"
                  }
                ],
                "partsInfo": "string",
                "partsPricing": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "serviceType": "string",
                "shopFees": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "showZeroEstimateToCustomer": true,
                "status": "string",
                "tax": {
                  "amount": 0,
                  "createdOn": "date",
                  "unit": "string",
                  "updatedOn": "date"
                },
                "updatedOn": "date",
                "uuid": "string",
                "version": 0,
                "workStatus": "string"
              }
            ],
            "serviceLineDetails": {
              "comebackFlag": true,
              "completeErrorMessageFromDms": "string",
              "counterPerson": {
                "dealerAssociateName": "string",
                "dealerAssociateUUID": "string"
              },
              "dispatchCode": "string",
              "errorDescription": "string",
              "estimatedDuration": 0,
              "fortellisRequestId": "string",
              "fortellisSubscriptionId": "string",
              "isPricingFetchedFromOpcodeOnce": true,
              "jobIdentifier": "string",
              "jobNumber": "string",
              "opCode": "string",
              "opCodeDescription": "string",
              "opCodeFromMpiTemplate": "string",
              "originalJobNumber": "string",
              "pushStatus": "string",
              "pushStatusUpdateTs": "date",
              "retryAttempts": 0
            },
            "sortOrder": 0,
            "totalApproved": {
              "amount": 0,
              "createdOn": "date",
              "unit": "string",
              "updatedOn": "date"
            },
            "type": "string",
            "updatedOn": "date",
            "uuid": "string",
            "version": 0
          }
        ],
        "description": "string",
        "isValid": true,
        "name": "string",
        "sortOrder": 0,
        "type": "string",
        "uuid": "string",
        "version": 0
      }
    ],
    "ocrList": [
      "string"
    ],
    "orderDetails": {
      "promiseDate": "string",
      "promiseTime": "string"
    },
    "orderIdentifiers": {
      "dmsStatus": "string",
      "isWaiter": true,
      "orderDate": "string",
      "orderNumber": "string",
      "orderStatus": "string",
      "orderUUID": "string",
      "originalEstimate": "string",
      "tagNumber": "string"
    },
    "partsRepresentativeIdentifiers": {
      "dealerAssociateName": "string",
      "dealerAssociateUUID": "string"
    },
    "populatedByPartners": [
      "string"
    ],
    "recommendedTotal": 0,
    "shopFeesAndTaxSettings": {
      "applyTaxToShopFees": true,
      "maxShopFees": 0,
      "minShopFees": 0,
      "shopFeesLaborPercentage": 0,
      "shopFeesPartsPercentage": 0,
      "shopfeesAlias": "string",
      "taxLaborPercentage": 0,
      "taxPartsPercentage": 0
    },
    "status": "string",
    "statusUpdatedOn": "date",
    "technicianIdentifiers": [
      {
        "dealerAssociateName": "string",
        "dealerAssociateUUID": "string"
      }
    ],
    "totalPrices": {
      "approvedOriginalRecommendedTotal": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "approvedOtherRecommendedTotal": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "approvedTotal": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "originalTotal": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "shopFees": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "totalCost": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      },
      "totalTax": {
        "amount": 0,
        "createdOn": "date",
        "unit": "string",
        "updatedOn": "date"
      }
    },
    "type": "string",
    "updatedOn": "date",
    "uuid": "string",
    "vehicleIdentifiers": {
      "estimatedMileage": "string",
      "vehicleMake": "string",
      "vehicleModel": "string",
      "vehicleUUID": "string",
      "vehicleYear": "string",
      "vin": "string"
    },
    "version": 0,
    "workflowDetails": {
      "currentNodeUuid": "string",
      "executedEvents": [
        {
          "affectedDealerAssociateUuids": [
            "string"
          ],
          "checkUuid": "string",
          "eventName": "string"
        }
      ],
      "pendingEvents": [
        {
          "affectedDealerAssociateUuids": [
            "string"
          ],
          "checkUuid": "string",
          "eventName": "string"
        }
      ],
      "version": 0,
      "workflowUuid": "string"
    }
  }
}


```

---

// File: our-products/inspection/service-cart/how-to-filter-mpis

# How to filter MPIs
This document is designed to help you understand how you can fetch a list of filetered MPI's based on certain paramters.
To get filtered mpi list based on certain paramters, you first need your credentials. If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.

The endpoint mentioned below can help you with filetring out mpis -

* **Parameters Used**:
1. `{{dealerDepartmentUuid}}` - UUID of the dealer department you want to fetch mpi list from
2. `{{fromDate}}` - Starting date of mpi list you want to fetch
3. `{{toDate}}` - End date of mpi list you want to fetch
4. `orderStatusList` - List containing the order statuses of mpis. Possible Values are 'O', 'P', 'C'
5. `{{basic_auth_token}}` - Authorization: Basic "generate using username password"

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `multipoint.inspection.fetch`

* **Endpoint**
```curl
curl -X POST "http://api.mykaarma.com/scprocessor/mpi/v1/dealerDepartment/{{dealerDepartmentUuid}}/multiPointInspections" 
-H "accept: application/json" 
-H "authorization: {{basic_auth_token}}" 
-H "Content-Type: application/json"
-d "{
  "assignedToParts": true,
  "customerUUIDs": [],
  "fromDate": "{{fromDate}}",
  "hasMedia": true,
  "inspectionOverdue": true,
  "inspectionTypeList": [],
  "isIncomplete": true,
  "isInspectionTakerUnassigned": true,
  "isWaiter": true,
  "labelsList": [],
  "mediaUploadStatus": "string",
  "mpiStatusList": [],
  "offset": 0,
  "orderNumber": "string",
  "orderStatusList": [],
  "orderUUID": "string",
  "partStatusList": [],
  "partsPendingSale": true,
  "recommendationStatusList": [],
  "saList": [],
  "sentStatus": "string",
  "technicianList": [],
  "toDate": "{{toDate}}",
  "vin": "string",
  "workStatusList": []
}'
```
* **Response**
```
{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "mpisForOrdersMap": {},
  "ordersWithoutMpis" "[]
  "statusCode": integer,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}


{mpisForOrdersMap} - Hashmap where key is orderUuid and value if set of mpi's for that orderUuid
```

---

// File: our-products/inspection/service-cart/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage multi point inspections. A MPI or Multipoint Inspection is a form based inspection of a vehicle which provides an overall summary including inspection media,recommendations, estimates, approvals, declines etc and can be sent to the customer directly as a html page.

<DocCardList />

---

// File: our-products/inspection/video-walkaround/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const WalkaroundApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.walkaroundApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<WalkaroundApiSwagger />

---

// File: our-products/inspection/video-walkaround/index

import DocCardList from '@theme/DocCardList';

The myKaarma Inspection API is a RESTful API which provides access to walkaround/inspection related methods.

<DocCardList />

---

// File: our-products/integration/intro

The myKaarma base integration is the bridge between DMS and myKaarma. Integration works around making sure all data is synced accurately and timely between DMS and myKaarma. Following guides will help as a reference to make use of the data stored in mK. The data may be either which is imported from DMS via the backend integration OR is created directly in myKaarma.

---

// File: our-products/integration/customer-data-model

This is the data structure of Customer entity when you are trying to create or update Customer in myKaarma.


## Summary of the fields.
| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `customerKey`  |  Unique identifier used by DMS to uniquely identify each customer, used by mykaarma to lookup customers in DMS databases for various purposes like update, deletion, booking appointment etc.  | No  | 
|  `firstName`  |  Customer's first name.  | Yes ( no only if isBusiness is set to true  and company name is provided)  | 
|  `lastName`  |  Customer's last name. | Yes  ( no only if isBusiness is set to true  and company name is provided) | 
|  `company`  |  Name of the company if the customer is a business. | No  ( yes only if isBusiness is set to true ) | 
|  `isBusiness`  |  Boolean indicating if the customer is a business entity. Set true for company customers, fleet customers. | No | 
|  `preferredCommunication`  |  Refers to the customer's preferred method of communication. Allowed values are `text`, `phone` , `email` | No |
|  `addresses`  |  List of addresses associated with the customer. | No | 
|  `preferredLocale`  |  Customer's preferred language or locale. ( use `en-us` for English or `fr-ca` for French) | No | 
|  `emails`  |  List of email addresses associated with the customer. | No | 
|  `phoneNumbers`  |  List of phone numbers associated with the customer. | No | 
|  `vehicles`  | List of vehicles owned by the customer. | No | 
|  `validateVin`  | Boolean indicating if the vehicle's VIN should be validated. If set to `true` , invalid VIN vehicles would be rejected. | No | 
|  `searchForDuplicate`  |  Boolean indicating if the system should check for duplicate customers before creation. API Partners are expected to pass this parameter as false | No | 
|  `addresses.type`  | An enumeration with possible values: `COMMON, PRIMARY, BILLING` which tells type of address. `COMMON`: Used when the primary and billing addresses are the same. `PRIMARY`: Represents the customer's home address. `BILLING`: Represents the customer's business address. Recommended: `PRIMARY`. | Yes ( only if addresses is not empty ) | 
|  `addresses.addressType` |  Indicates the type of address: use `P` for PRIMARY/COMMON type and `B` for BILLING type. Recommended: `P`. |  Yes ( only if addresses is not empty ) | 
|  `addresses.line1`  |  The first line of the customer's address.  | Yes ( only if addresses is not empty ) | 
|  `addresses.line2`  |  The second line of the customer's address, often used for apartment or suite numbers. | No | 
|  `addresses.zip`  |  The postal code for the customer's address. | No | 
|  `addresses.country`  |  The country of the customer's address. | Yes ( only if addresses is not empty ) | 
|  `addresses.isValid`  |  Boolean indicating if the address is valid.  Default value `true`. | No | 
|  `addresses.isPreferred`  |  Boolean indicating if this is the customer's preferred address. Default value : `false`. | No | 
|  `addresses.state`  |  The state or region of the customer's address. | Yes ( only if addresses is not empty ) | 
|  `emails.emailAddress`  |  The customer's email address. | Yes ( only if emails is not empty ) | 
|  `emails.label`  | Describes the type of email. Allowed values are `personal,home,work,other`. | Yes ( only if emails is not empty ) | 
|  `emails.okToEmail`  |  Boolean indicating if it's permissible to send emails to this address. Allowed values `true/false`. | Yes | 
|  `emails.isPreferred`  |  Boolean indicating if this is the customer's preferred email address. Allowed values `true/false`. | Yes | 
|  `phoneNumbers.phoneNumber`  | The customer's phone number, prefixed with +1 for the country code. example `+11234567890` |  Yes ( only if phones is not empty) | 
|  `phoneNumbers.label`  | Describes the type of phone. Allowed values are `cell,business,home,work,other`. If you have a primary phone number on your side, always send it with cell because cell is used for auto communication within myKaarma |  Yes ( only if phones is not empty) | 
|  `phoneNumbers.okToCall`  |  Boolean indicating if it's permissible to call this number. Allowed values `true/false`. | Yes | 
|  `phoneNumbers.okToText`  |  Boolean indicating if it's permissible to send text messages to this number. Allowed values `true/false`. | Yes | 
|  `phoneNumbers.isPreferred`  |  Boolean indicating if this is the customer's preferred phone number. Allowed values `true/false`. | Yes |

---

// File: our-products/integration/vehicle-data-model

This is the data structure of Vehicle entity when you are trying to create or update Vehicle in myKaarma.


## Summary of the fields.
| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `vehicles.vin`  | The Vehicle Identification Number, a unique code for the vehicle. | Yes ( only if vehicles is not empty and make, model & year are empty) |
|  `vehicles.vehicleYear`  | The year the vehicle was manufactured.|  No ( yes only  vehicles is not empty and vin is empty) | 
|  `vehicles.vehicleMake`  |  The manufacturer or brand of the vehicle.|  No ( yes only  vehicles is not empty and vin is empty) |
|  `vehicles.vehicleModel`  | The specific model of the vehicle.| No ( yes only  vehicles is not empty and vin is empty) |
|  `vehicles.vehicleEngine`  | The type or specification of the vehicle's engine.| No | 
|  `vehicles.isValid`  | Boolean indicating if the vehicle is owned by customer or not presently.| No | 
|  `vehicles.licensePlate`  | The vehicle's license plate number.| No | 
|  `vehicles.color`  | The color of the vehicle.| No |  
|  `vehicles.estimatedMileage`  |  The estimated mileage the vehicle has traveled.| No | 
|  `vehicles.vehicleTrim`  |  The trim of the vehicle.| No |

---

// File: our-products/integration/customer-matching-logic

import ImageZoom from '@site/src/components/ImageZoom';

This is the Customer matching logic that myKaarma backend follows to make sure we do not create duplicates while saving customers.


## Logic
<ImageZoom src="/img/customer-matching-logic.png" alt="Example Image"/>

---

// File: our-products/integration/customer/how-to-get-a-list-of-customers

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can fetch a list of Customers with search parameters customizations. The endpoint enables user to get a list of customers that contains a particular string `({{searchTerm}})` in multiple fields`({{fieldsToBeSearched}})` like ```ID, firstName, communications etc.``` and one can control to combine the results from the searchTerm being present in different fieldsToBeSearched by ```AND or OR```.
The list contains an array of objects which contains a sub-object named ```customer``` which contains all the customer information and a sub-object named ```vehicles``` which contains all the vehicles owned by the customer.   
To get a customer list, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.
The endpoint mentioned below can help you with getting a customer list and customize the search parameters :-

## Parameters Used

###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes|


###  Request parameters

| Parameter Name | Description | Required | Default Value |
| ---         |   --- | --- | --- |
|  `{{fieldsToBeSearched}}`  |  Fields in which `{{searchTerm}}` will be searched for and matching customers will be fetched . set of fields are  ```fname, lname, company, customerKey, communications.commValue,vehicles.vin  .```Multiple values must be passed as comma separated  example : fname,lname,vehicles.vin . It is recommended to search by  `customerKey` or `vehicles.vin`. |  No  |  ---  |
|  `{{maxResults}}`  |  Size of customer list that will be returned. Could be any number from 1 to 100  |  No  |  ```100```  |
|  `{{searchTerm}}`  |  Term to search within `{{fieldsToBeSearched}}`. Use spaces to separate different terms. Maximum length of this search term is 30.  |  Yes  |  ---  |
|  `{{queryOperator}}`  |  Logical operator used to combine space-separated search term within `{{fieldsToBeSearched}}`. Options are `AND` or `OR`. For example, if the search term is "john 1F093622" and the fields to search are `fname, vehicles.vin`, using `AND` will return customers with the name "john" and the VIN "1F093622", while `OR` will return customers with the name "john" or customers with the VIN "1F093622". |  No  |  AND  |



### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope
This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `customer.search` | `DealerDepartment` | Authorises client to fetch customers provided dealer department |



## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/customer/v2/department/{{departmentUUID}}/customer/listMinimal?fieldsToBeSearched={{fieldsToBeSearched}}&maxResults={{maxResults}}&searchTerm={{searchTerm}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "errors": [
    {
      "errorCode": 0,
      "errorTitle": "string",
      "errorMessage": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "matchingCustomers": [
    {
      "id": 0,
      "fname": "string",
      "lname": "string",
      "customerKey": "string",
      "uuid": "string",
      "company": "string",
      "dealerId": 0,
      "communications": [
        {
          "commValue": "string",
          "commType": "string",
          "commLabel": "string",
          "preferred": true,
          "id": 0
        }
      ],
      "vehicles": [
        {
          "model": "string",
          "year": "string",
          "make": "string",
          "engine": "string",
          "bodyStyle": "string",
          "trim": "string",
          "vin": "string",
          "id": 0,
          "isValid": true,
          "uuid": "string",
          "vehicleKey": "string",
          "imageUrl": "string"
        }
      ],
      "secondaryCustomerData": [
        {
          "fname": "string",
          "lname": "string",
          "customerKey": "string",
          "guid": "string",
          "customerId": 0
        }
      ]
    }
  ]
}

```

## Quick summary of getCustomer response fields

| Parameter Name | Description |
| ---         |   --- |
|  `id`  |  Unique identifier used by mykaarma to uniquely identify each customer in mykaarma databases. This value should not be used by vendor and in near future would always be null |
|  `fname`  | First Name of the customer |
|  `lname`  |  Last Name of the customer |
|  `customerKey`  |  Unique identifier used by DMS to uniquely identify each customer, used by mykaarma to lookup customers in DMS databases for various purposes like update, delete, book appointment  |
|  `uuid`  |  Unique identifier used by mykaarma used for uniquely identifying customers over API calls(for read, write, update, delete purposes)  |
|  `company`  |  Company name of the customer provided if the customer is a BUSINESS customer  |
|  `dealerId`  | Unique identifier used by mykaarma to uniquely identify each dealer in mykaarma databases  This value should not be used by and vendor and in near future would always be null  |
|  `communications.commValue`  | The value of customer communication can be a phone number or an email address |
|  `communications.commLabel`  |  It tells the type of phone or email example `cell, home, work` etc.  |
|  `communications.preferred`  |  It is a boolean value which tells which phone and which email is preferred for use by a customer, only one phone and one email can have isPreferred true for a customer  |
|  `communications.id`  |   Unique identifier used by mykaarma to uniquely identify each customer communication in mykaarma databases. This value should not be used by and vendor and in near future would always be null  |
|  `communications.commType`  |   describes the type of communication `P` for Phone and `E` for email   |
|  `vehicles.id`  |  Unique identifier used by mykaarma to uniquely identify each vehicle in mykaarma databases. This value should not be used by and vendor and in near future would always be null   |
|  `vehicles.vehicleKey`  |  Unique identifier used by DMS to uniquely identify each vehicle, used by mykaarma to lookup vehicles in DMS databases for various purposes like update, deletion, booking appointment etc.  |     
|  `vehicles.vehicleUuid`  |  Unique identifier used by mykaarma  used for uniquely identifying vehicles over API calls(for read, write, update, delete purposes)  |
|  `vehicles.year`  |  the year when the vehicle was manufactured  |
|  `vehicles.make`  |  the brand of the vehicle  |
|  `vehicles.engine`  |  engine description of the vehicle  |
|  `vehicles.trim`  |  trim description of the vehicle  |
|  `vehicles.model`  |  model  of the vehicle  |
|  `vehicles.vin`  |  VIN  of the vehicle  |
|  `vehicles.isValid`  | Indicates whether the customer currently owns the vehicle.  |
|  `secondaryCustomerData`  | Field used internally by mykaarma .` Not to be used by any vendor`.  |

---

// File: our-products/integration/customer/how-to-create-a-customer

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can create a customer along with communications, vehicles and addresses with a given request body. 
To create a customer , you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.
The following endpoint allows you to create a customer and customize the request body as needed. :-

## Parameters

###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `customer.update` | `DealerDepartment` | Authorizes client to create customer for provided user's dealer department |


## Endpoint
```shell
curl -X POST "https://api.mykaarma.com/customer/v2/department/{{departmentUUID}}/customer"
-H "Authorization: {{basic_auth_token}}"
-H "Content-Type: application/json"
-d '{
  "customer": {
    "customerKey": "string",
    "firstName": "string",
    "lastName": "string",
    "company": "string",
    "isBusiness": true,
    "addresses": [
      {
        "line1": "string",
        "line2": "string",
        "city": "string",
        "zip": "string",
        "addressType": "string",
        "type": "Enum",
        "country": "string",
        "isValid": true,
        "isPreferred": true,
        "state": "string"
      }
    ],
    "preferredLocale": "string",
    "customerUuid": "string",
    "emails": [
      {
        "emailAddress": "string",
        "label": "string",
        "okToEmail": true,
        "isPreferred": true
      }
    ],
    "phoneNumbers": [
      {
        "phoneNumber": "string",
        "label": "string",
        "okToCall": true,
        "okToText": true,
        "isPreferred": true
      }
    ]
  },
  "vehicles": [
    {
      "vin": "string",
      "vehicleYear": "string",
      "vehicleMake": "string",
      "vehicleModel": "string",
      "estimatedMileage": "string",
      "vehicleKey": "string",
      "vehicleTrim": "string",
      "licensePlate": "string",
      "color": "string",
      "vehicleUuid": "string",
      "vehicleEngine": "string",
      "isValid": true
    }
  ],
  "validateVin": true,
  "searchForDuplicate": true
}'
```

## Response
```json

{
  "errors": [
    {
      "errorCode": 0,
      "errorTitle": "string",
      "errorMessage": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "customerUuid": "string",
  "customerId": "string"
}


```

### Request Body

This payload consists of myKaarma Customer object with Vehicles associated with it. You can find the field references for <a href="/our-products/integration/customer-data-model">Customer</a> and <a href="/our-products/integration/vehicle-data-model">Vehicle</a> in respective links.


**Note**

If a customer key passed in the request body already exists in myKaarma system for the given department , then the customer create process will fail.


### Response Object Explanation 

`{{customerUuid}}`  uuid of the customer which was created/updated .

`{{errors}}`   An array of error objects detailing issues encountered during customer creation or update.

`{{warnings}}` An array of warning objects providing non-critical alerts encountered during customer creation or update.

`{{errors.errorCode}}`   Code indicating the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible error codes.

`{{errors.errorTitle}}`   Title describing the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for detailed descriptions.

`{{errors.errorMessage}}`  Detailed message describing the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for more information.

---

// File: our-products/integration/customer/how-to-update-a-customer

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can update an existing customer, along with their communications, vehicles and addresses, using a given request body and customer UUID. 
To update a customer, you first need your credentials. If you don't already have them, head over to the <AuthPageLink/> page to see how you can request credentials from us.
The endpoint mentioned below can assist you in updating a customer by customizing the request body for the specified customer UUID:

### Parameters

###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |
| `customerUUID` | `String` |  Unique identifier used by mykaarma used for uniquely identifying customers over API calls | Yes |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `customer.update` | `DealerDepartment` | Authorizes client to update customer for provided user's dealer department |


## Endpoint
```shell
curl -X PUT "https://api.mykaarma.com/customer/v2/department/{{departmentUUID}}/customer/{{customerUUID}}"
-H "Authorization: {{basic_auth_token}}"
-H "Content-Type: application/json"
-d '{
  "customer": {
    "customerKey": "string",
    "firstName": "string",
    "lastName": "string",
    "company": "string",
    "isBusiness": true,
    "addresses": [
      {
        "line1": "string",
        "line2": "string",
        "city": "string",
        "zip": "string",
        "addressType": "string",
        "type": "Enum",
        "country": "string",
        "isValid": true,
        "isPreferred": true,
        "state": "string"
      }
    ],
    "preferredLocale": "string",
    "customerUuid": "string",
    "emails": [
      {
        "emailAddress": "string",
        "label": "string",
        "okToEmail": true,
        "isPreferred": true
      }
    ],
    "phoneNumbers": [
      {
        "phoneNumber": "string",
        "label": "string",
        "okToCall": true,
        "okToText": true,
        "isPreferred": true
      }
    ]
  },
  "vehicles": [
    {
      "vin": "string",
      "vehicleYear": "string",
      "vehicleMake": "string",
      "vehicleModel": "string",
      "estimatedMileage": "string",
      "vehicleKey": "string",
      "vehicleTrim": "string",
      "licensePlate": "string",
      "color": "string",
      "vehicleUuid": "string",
      "vehicleEngine": "string",
      "isValid": true
    }
  ],
  "validateVin": true
}'
```

## Response
```json

{
  "errors": [
    {
      "errorCode": 0,
      "errorTitle": "string",
      "errorMessage": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ]
}


```

### Request Body

This payload consists of myKaarma Customer object with Vehicles associated with it. You can find the field references for <a href="/our-products/integration/customer-data-model">Customer</a> and <a href="/our-products/integration/vehicle-data-model">Vehicle</a> in respective links.


**Note**

If a customer key passed in the request body already exists in myKaarma system for the given department for a different customer  , then the customer update process will fail.

### Response Object Explanation 

`{{errors}}`   An array of error objects detailing issues encountered during customer creation or update.

`{{warnings}}` An array of warning objects providing non-critical alerts encountered during customer creation or update.

`{{errors.errorCode}}`   Code indicating the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible error codes.

`{{errors.errorTitle}}`   Title describing the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for detailed descriptions.

`{{errors.errorMessage}}`  Detailed message describing the specific error encountered during customer creation or update; refer to the [API reference](./api-reference.mdx) for more information.

---

// File: our-products/integration/customer/how-to-read-a-customer

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can read a particular customer. The endpoint enables user to get details of a speicifc  customer.
To read a customer , you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

## Parameters Used

###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes|
| `customerUUID` | `String` | Unique identifier of customer | Yes|


###  Request parameters

| Parameter Name | Description | Required | Default Value |
| ---         |   --- | --- | --- |
|  `{{excludeVehicles}}`  |  Boolean operator to indicate whether to include the list of vehicles in the response. Use `true` to exclude vehicles and `false` to include them.  |  No  |  false  |



### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope
This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `customer.search` | `DealerDepartment` | Authorises client to fetch customers provided dealer department |



## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/customer/v2/department/{{departmentUUID}}/customer/{{customerUUID}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "errors": [
    {
      "errorCode": 0,
      "errorTitle": "string",
      "errorMessage": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningTitle": "string",
      "warningMessage": "string"
    }
  ],
  "customerWithVehicles": {
    "customer": {
      "id": 0,
      "customerKey": "string",
      "firstName": "string",
      "middleName": "string",
      "lastName": "string",
      "company": "string",
      "preferredLocale": "string",
      "emails": [
        {
          "emailAddress": "string",
          "label": "string",
          "okToEmail": true,
          "isPreferred": true,
          "comments": "string"
        }
      ],
      "phoneNumbers": [
        {
          "phoneNumber": "string",
          "label": "string",
          "okToCall": true,
          "okToText": true,
          "isPreferred": true,
          "comments": "string"
        }
      ],
      "preferredCommunication": "string",
      "bestTimeToContact": {
        "startTime": "string",
        "endTime": "string"
      },
      "addresses": [
        {
          "line1": "string",
          "line2": "string",
          "city": "string",
          "zip": "string",
          "addressType": "string",
          "type": "COMMON",
          "country": "string",
          "updateTS": "2025-02-07T06:15:11.849Z",
          "uuid": "string",
          "isValid": true,
          "isPreferred": true,
          "state": "string"
        }
      ],
      "availability": 0,
      "isBusiness": true,
      "customerUuid": "string",
      "customerId": "string"
    },
    "vehicles": [
      {
        "id": 0,
        "vin": "string",
        "vehicleKey": "string",
        "isValid": true,
        "imageUrl": "string",
        "brandId": 0,
        "licensePlate": "string",
        "color": "string",
        "vehicleModel": "string",
        "vehicleYear": "string",
        "vehicleTrim": "string",
        "vehicleUuid": "string",
        "vehicleEngine": "string",
        "estimatedMileage": "string",
        "vehicleMake": "string"
      }
    ]
  }
}

```

## Quick summary of getCustomer response fields

| Parameter Name | Description |
| ---         |   --- |
|  `id`  |  Unique identifier used by mykaarma to uniquely identify each customer in mykaarma databases. This value should not be used by vendor and in near future would always be null |
|  `firstName`  |  fisr name of the customer |
|  `middleName`  |  middle name  of the customer |
|  `lastName`  |  last name of the customer |
|  `preferredLocale`  |  Customer's preferred language or locale. |
|  `isBusiness`  |  boolean indicating whether the cusotmer is business customer or not. |
|  `customerKey`  |  Unique identifier used by DMS to uniquely identify each customer, used by mykaarma to lookup customers in DMS databases for various purposes like update, delete, book appointment  |
|  `customerUuid`  |  Unique identifier used by mykaarma used for uniquely identifying customers over API calls(for read, write, update, delete purposes)  |
|  `company`  |  company name of the customer provided if the customer is a BUSINESS customer  |
|  `dealerId`  | Unique identifier used by mykaarma to uniquely identify each dealer in mykaarma databases  This value should not be used by and vendor and in near future would always be null  |
|  `addresses.type`  | Enum with possible values `COMMON, PRIMARY, BILLING` which tells type of address. `COMMON`: Used when the primary and billing addresses are the same. `PRIMARY`: Represents the customer's home address. `BILLING`: Represents the customer's business address. Recommended: `PRIMARY`. |
|  `addresses.addressType` |  Indicates the type of address: use `P` for PRIMARY/COMMON type and `B` for BILLING type. | 
|  `addresses.line1`  |  The first line of the customer's address.  | 
|  `addresses.line2`  |  The second line of the customer's address, often used for apartment or suite numbers. |
|  `addresses.zip`  |  The postal code for the customer's address. | 
|  `addresses.country`  |  The country of the customer's address. | 
|  `addresses.isValid`  |  Boolean indicating if the address is valid. | 
|  `addresses.isPreferred`  |  Boolean indicating if this is the customer's preferred address. |
|  `addresses.state`  |  The state or region of the customer's address. | 
|  `emails.emailAddress`  |  The customer's email address. | 
|  `emails.label`  | Describes the type of email (e.g., personal, work). |
|  `emails.okToEmail`  |  Boolean indicating if it's permissible to send emails to this address. Allowed values true/false. |
|  `emails.isPreferred`  |  Boolean indicating if this is the customer's preferred email address. Allowed values true/false. | 
|  `phoneNumbers.phoneNumber`  | The customer's phone number, prefixed with +1 for the country code. |  
|  `phoneNumbers.label`  | Describes the type of phone (e.g., cell,home,work ). |  
|  `phoneNumbers.okToCall`  |  Boolean indicating if it's permissible to call this number. Allowed values true/false. | 
|  `phoneNumbers.okToText`  |  Boolean indicating if it's permissible to send text messages to this number. Allowed values true/false. | 
|  `vehicles.id`  |  Unique identifier used by mykaarma to uniquely identify each vehicle in mykaarma databases. This value should not be used by and vendor and in near future would always be null   |
|  `vehicles.vehicleKey`  |  Unique identifier used by DMS to uniquely identify each vehicle, used by mykaarma to lookup vehicles in DMS databases for various purposes like updation, deletion, booking appointment etc.  |     
|  `vehicles.vehicleUuid`  |  Unique identifier used by mykaarma in addition to `vehicles.id`, used for uniquely identifying vehicles over API calls(for read, write, update, delete purposes) without revealing their database id that is `vehicles.id`  |
|  `vehicles.vehicleYear`  |  the year when the vehicle was manufactured  |
|  `vehicles.vehicleMake`  |  the brand of the vehicle  |
|  `vehicles.estimatedMileage`  |  the esitmated mileage of the  vehicle  |
|  `vehicles.vehicleEngine`  |  engine description of the vehicle  |
|  `vehicles.vehicleTrim`  |  trim description of the vehicle  |
|  `vehicles.vehicleModel`  |  model  of the vehicle  |
|  `vehicles.vin`  |  VIN  of the vehicle  |
|  `vehicles.isValid`  | Indicates whether the customer currently owns the vehicle.  |
|  `errors.errorCode`  | Numeric code representing the specific error.  |
|  `errors.errorTitle`  | Short title describing the error.  |
|  `errors.errorMessage`  | Detailed message explaining the error.  |
|  `warnings.warningCode`  | Numeric code representing the specific warning. |
|  `warnings.errorTitle`  | Short title describing the warning. |
|  `warnings.warningMessage`  | Detailed message explaining the warning. |

---

// File: our-products/integration/customer/search-then-create-customer

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can first search for existing customers in myKaarma to avoid duplicates, and then create a new customer (along with vehicles and addresses) using a given request body. 

To perform these actions, you first need your credentials. If you don't already have them, head over to the <AuthPageLink/> page to see how you can request credentials from us.
The process of searching for existing customers and, if none are found, creating a new customer is listed below.

### Parameters

Required path parameters for process : 

| Parameter Name  | Type | Description  |
| --- |  ---  | --- |
| `departmentUUID` | `string` | Unique identifier of dealer's department |
| `customerUUID` | `string` | Unique identifier of the customer |


## Scope

This process requires the following authorization scopes : 

| Scope | Level | Description |
| --- | --- | --- |
| `customer.search` | `DealerDepartment` | Authorizes client to search for customers for provided user's dealer department |
| `customer.update` | `DealerDepartment` | Authorizes client to create customer for provided user's dealer department |

## Process

To efficiently manage customer data and prevent duplicates in myKaarma, API partners should follow these steps:

*Search for Customers* : 

Use the endpoint provided in the [search customer](./how-to-get-a-list-of-customers.md) documentation to search for existing customers.

## Customer Search Guidelines for API Partners

![Decision Tree](./customer-decision-tree-v2.png)

- To effectively search for customers in the myKaarma system using the provided parameters (CustomerKey, VIN, PhoneNumber, or Email), follow these structured steps:

1. **Construct the Search Term** :

    Use one of the following formats for your searchTerm: 

    - complete CustomerKey
    - last 8 characters of  VIN
    - 10-digit PhoneNumber
    - Email Address (if phone is not available)
    
    Example search term: 
    
                         DOM123 6C650709 9891361006 
    
                         DOM123 6C650709 john.doe@gmail.com

2. **Execute the Search API Call** :
   Use the following curl command to search for customers:

    example : 
   
        curl -X GET "https://api.mykaarma.com/customer/v2/department/{{serviceSubscriberDealerDepartmentToken}}/customer/listMinimal?fieldsToBeSearched=vehicles.vin,communications.commValue,customerKey&maxResults={{maxResults}}&searchTerm={{searchterm}}&queryOperator=OR" 
        -H "accept: application/json" 
        -H "authorization: {{basic_auth_token}}"

3. **Analyze API Response** : 

   - If you receive results:
        - If only one customer matches the customerKey, **use that customer's UUID to update their information** . Endpoint details at [update customer](./how-to-update-a-customer.md)
        - If multiple results are returned, proceed to the next step.
   - If no results are found, **create a new customer using the create customer API** Endpoint details at [create customer](./how-to-create-a-customer.md) .

4. **Handling Multiple Results** : 
   
      If multiple customers are found in the response:

    -  Check for Matching CustomerKey:
        -  If a customer with the same customerKey is found, use their UUID for updates.
    -  Check by Last Name and Contact Info:
        -  Look for customers with the same last name and either phone number or email from your search term. 
           Use any matching customer. *Note only consider customers having `null` customerKey from the list* .
    -  Check by Last Name and VIN:
       -   If no matches are found in the previous step, check for customers with the same last name and VIN. 
           Optionally consider first names as well.  *Note only consider customers having `null` customerKey from the list* .

By following this process, we ensure that customer duplicate entries are minimized in myKaarma system.

---

// File: our-products/integration/customer/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const CustomerApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.customerApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<CustomerApiSwagger />

---

// File: our-products/integration/customer/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage customer in myKaarma. Customer is a central entity upon which every other aspect is built like Appointments, Orders, Inspections etc. This guide can be referred as help in following operations:

<DocCardList />

---

// File: our-products/integration/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/integration/leads/how-to-save-a-lead-in-mykaarma

import AuthPageLink from '@site/src/components/AuthPageLink';
import ImageZoom from '@site/src/components/ImageZoom';

This document is designed to help you understand how you can save a lead in myKaarma. To use this endpoint, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request credentials from us.


## Parameters Used


###  Path parameters

| Parameter Name  | Description  | Required
| --- |  ---  | --- |
|  `{{dealerUuid}}`  | Unique token issues by the myKaarma for the dealership for which leads is being saved.  |  True  |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

| Scope Name | Scope Level |
| ---         |   --- |
|  ```lead.write```  |  ```Dealer Level```  |



## Request Body

### Request Body object
```json
{
  "customer": {
    "uuid": "",
    "customerKey": "",  
    "firstName": "",  
    "lastName": "",  
    "company": "",  
    "isBusiness": false,  
    "addresses": [  
      {  
        "line1": "",  
        "line2": "",  
        "city": "",  
        "zip": "",  
        "addressType": "P",  
        "type": "Enum[COMMON, PRIMARY, BILLING]",  
        "country": "",  
        "isValid": true,  
        "isPreferred": true,  
        "state": ""  
      }  
    ],  
    "preferredLocale": "en-us",  
    "emails": [  
      {  
        "emailAddress": "",  
        "label": "",  
        "okToEmail": true,  
        "isPreferred": true  
      }  
    ],  
    "phoneNumbers": [  
      {  
        "phoneNumber": "",  
        "label": "",  
        "okToCall": true,  
        "okToText": true,  
        "isPreferred": true  
      } 
    ]
  },
  "vehicle": {
    "uuid": "",
    "trackingId": "",
    "topic": "",
    "description": "",
    "vin": "",  
    "vehicleYear": "",  
    "vehicleMake": "",  
    "vehicleModel": "",  
    "estimatedMileage": "",  
    "vehicleKey": "",  
    "vehicleTrim": "",  
    "licensePlate": "",  
    "color": "",  
    "vehicleEngine": ""
  },
  "dealerDetails": {
    "name": "",
    "code": "",
    "source": "MMC"
  },
  "services": [
    {
      "name": "",
      "code": "",
      "type": "",
      "dueDate": ""
    }
  ],
  "status": "NEW",
  "lastContactDate": "",
  "leadId": "",
  "leadType": "RECALL"
}
```

### Quick summary of request body object fields

This payload consists of myKaarma Customer object with Vehicles associated with it. You can find the field references for <a href="/our-products/integration/customer-data-model">Customer</a> and <a href="/our-products/integration/vehicle-data-model">Vehicle</a> in respective links. Rest of the fields are explained below:

| Parameter Name | Description | Required | Default Value |
| ---         |   --- | --- | --- |
|  `dealerDetails.name`  | Name of the dealership for which lead is associated  |  No  |  ---  |
|  `dealerDetails.code`  | Code issued by the OEM  |  No  |  ---  |
|  `dealerDetails.source`  | The source of the lead, which can be either `MMC` or `BMW_SPARC` |  Yes  |  ---  |
|  `customer.uuid`  |  UUID of customer(issued by myKaarma) which is associated with the lead  |  No  |  ---  |
|  `vehicle.uuid`  |  UUID of vehicle(issued by myKaarma) of vehicle associated with the lead  |  No  |  ---  |
|  `vehicle.trackingId`  |  Tracking ID of the Vehicle  |  No  |  ---  |
|  `vehicle.topic`  |  Topic associated with the Vehicle  |  No  |  ---  |
|  `vehicle.description`  |  Service description  |  No  |  ---  |
|  `services`  |  List of communication codes/opcodes associated with the lead  |  Yes  |  ---  |
|  `services.code`  |  The specific code or opcode for the service  |  Yes  |  ---  |
|  `services.name`  |  The name associated with the service code |  Yes  |  ---  |
|  `services.type`  |  The type of service being provided |  No  |  ---  |
|  `services.dueDate`  | The due date for the service, formatted as `yyyy-MM-dd`  |  No  |  ---  |
|  `status`  |  Should be set to NEW  |  Yes  |  New  |
|  `lastContactDate`  |  Last contacted date for the lead in UTC format ```yyyy-MM-dd HH:mm:ssZ```. Pass in current date if the caller is not sure about the field  |  Yes  |  ---  |
|  `leadId`  |  The unique ID associated with the lead present in the third-party system (vendor) |  No  |  ---  |
|  `leadType`  | The type of lead being saved in myKaarma, currently supporting `RECALL` or `SERVICE_DEMAND` |  Yes  |  ---  |





## Endpoint
```shell
curl -X POST "https://api.mykaarma.com/leads/v3/dealers/{{dealerUuid}}/leads" 
-H "accept: application/json" 
-H "authorization: Basic {{basic_auth_token}}" 
-H "Content-Type: application/json" 
--d '{
    "customer": {
        "uuid": "{{test_customer_uuid}}",
        "customerKey": "{{test_customer_key}}",  
        "firstName": "{{test_customer_first_name}}",  
        "lastName": "{{test_customer_last_name}}",  
        "company": "",  
        "isBusiness": true,  
        "addresses": [  
          {  
            "line1": "{{test_address_line1}}",  
            "line2": "",  
            "city": "{{test_address_city}}",  
            "zip": "{{test_address_zip}}",  
            "addressType": "P",  
            "type": "PRIMARY",  
            "country": "{{test_address_country}}",  
            "isValid": true,  
            "isPreferred": true,  
            "state": "{{test_address_state}}"  
          }  
        ],  
        "preferredLocale": "en-us",    
        "emails": [  
          {  
            "emailAddress": "{{test_customer_email}}",  
            "label": "{{test_email_label}}",  
            "okToEmail": true,  
            "isPreferred": true  
          }  
        ],  
        "phoneNumbers": [  
          {  
            "phoneNumber": "{{test_customer_phone_number}}",  
            "label": "{{test_phone_label}}",  
            "okToCall": true,  
            "okToText": true,  
            "isPreferred": true  
          }  
        ]
    },
    "vehicle": {
        "uuid": "{{test_vehicle_uuid}}",
        "trackingId": "2-I509U2C",
        "topic": "WITH_CONTRACT",
        "description": "Maintenance management with accepted user agreements",
        "vin": "{{test_vehicle_vin}}",  
        "vehicleYear": "{{test_vehicle_year}}",  
        "vehicleMake": "{{test_vehicle_make}}",  
        "vehicleModel": "{{test_vehicle_model}}",  
        "estimatedMileage": "{{test_vehicle_mileage}}",  
        "vehicleKey": "{{test_vehicle_key}}",  
        "vehicleTrim": "{{test_vehicle_trim}}",  
        "licensePlate": "{{test_vehicle_license}}",  
        "color": "{{test_vehicle_color}}",  
        "vehicleEngine": "{{test_vehicle_engine}}"
    },
    "dealerDetails": {
        "name": "Test Imports LLC",
        "code": "{{test_dealer_code}}",
        "source": "MMC"
    },
    "services": [
        {
            "name": "MBVANS - AS - CC - Maintenance - Service A",
            "code": "MBVANS - AS - CC - Maintenance - Service A",
            "type": "business",
            "dueDate": "2025-06-01"
        }
    ],
    "status": "NEW",
    "lastContactDate": "2024-06-08 11:00:00Z",
    "leadId": "US000000111199002",
    "leadType": "RECALL"
}'
```

## Response

### Response Object (http status code other than 4XX)
```json
{
  "error": 
    {
      "errorCode": "",
      "errorDescription": "",
      "errorUID": ""
    }
  ,
  "requestId": "",
  "message": "QUEUED",
  "status": "Success",
  "statusCode": 0,
  "warnings": [
    {
      "warningCode": "",
      "warningDescription": ""
    }
  ]
}
```

### Response Object (http status code 4XX)
```json
{
    "timestamp": "yyyy-MM-ddTHH:mm:ss.SSSZ",
    "status": 400,
    "error": "Bad Request",
    "message": "",
    "path": ""
}
```

### Response Object Explanation 

`{{requestId}}`  request id of the lead which is going to be created or updated; this is not the actual lead's pointer in myKaarma - this is just the pointer to the request that was sent - lead will be saved asynchronously in myKaarma's backend.

`{{message}}` which tells whether the lead is QUEUED or UNPROCESSED

`{{status}}` which tells whether the lead was successfully received by myKaarma or not 


## Decision tree 


`Lead Creation Logic`
<ImageZoom src="/img/leads-decision-tree.png" alt="Example Image"/>

`Customer Matching Logic`
Find <a href="/our-products/integration/customer-matching-logic">Here</a>.

---

// File: our-products/integration/leads/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const LeadsApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.leadsApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<LeadsApiSwagger />

---

// File: our-products/integration/leads/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage leads in myKaarma. Leads can have various source types like MMC, SPARC, RECALLS.

Leads are the prospective customers which have not serviced their cars in recent past or customers which have RECALLS associated with them.

This guide can be referred as help in following operations :
<DocCardList />

---

// File: our-products/integration/order/how-to-get-a-list-of-orders

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can fetch a list of Orders with search parameters customizations. The endpoint enables users to search for a list of orders on the basis of various parameters like ```orderDate, closeDate, orderNumber etc.```. The list returned contains an array of orders which contains all the order related information.
To use this endpoint, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request credentials from us.
The endpoint mentioned below can help you with getting an order list and customize the search parameters :-

## Parameters Used


###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  |


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `order.specific.search` | `DealerDepartment` | Authorizes client to search for orders for provided user's dealer department |


## Request Body

### Request Body object
```json
{
  "customerUuid": "string",
  "dateFilterType": "ORDER_DATE",
  "fromOrderDate": "string",
  "orderNumberPrefix": "string",
  "orderStatus": "string",
  "orderType": "string",
  "orderUuid": "string",
  "pageNo": "string",
  "size": "string",
  "tagNumber": "string",
  "toOrderDate": "string",
  "userUuid": "string",
  "vin": "string"
}
```

### Quick summary of request body object fields

| Parameter Name | Description | Required | Default Value |
| ---         |   --- | --- | --- |
|  `{{customerUuid}}`  |  UUID of customer for which order was created. If provided, `vin` should not be passed.  |  No  |  ---  |
|  `{{dateFilterType}}`  |  Which date type to filter orders upon like ```ORDER_DATE, CLOSE_DATE, CREATED_DATE, UPDATED_DATE```  |  Yes(if orders need to be filtered by dates)  |  ---  |
|  `{{fromOrderDate}}`  |  Start date, all orders for which `{{dateFilterType}}` is before this date will be filtered out. ```yyyy-MM-dd```  |  No  |  ---  |
|  `{{orderNumberPrefix}}`  |  Prefix of order number, minimum length 3 is required if passed non-empty  |  No  |  ---  |
|  `{{orderStatus}}`  |  Status of order example Allowed values are ```O/P/C```  |  No  |  ---  |
|  `{{orderType}}`  |  ```RO(Repair Order) or PO(Parts Order)```  |  No  |  ---  |
|  `{{orderUuid}}`  |  UUID of order to be searched  |  No  |  ---  |
|  `{{pageNo}}`  |  Number of pages to be skipped i.e. orders from those first pages will not be fetched and returned  |  No  |  0  |
|  `{{size}}`  |  Maximum number of orders that will be returned i.e. size of the array in response  |  No  |  150  |
|  `{{toOrderDate}}`  |  End date, all orders for which `{{dateFilterType}}` is after this date will be filtered out. ```yyyy-MM-dd```  |  No  |  ---  |
|  `{{userUuid}}`  |  Used to fetch dealer associate ID  |  No  |  ---  |
|  `{{vin}}`  |  VIN of vehicle for which order was created. If provided, `customerUuid` should not be passed.  |  No  |  ---  |



## Endpoint
```shell
curl -X POST "https://api.mykaarma.com/order/v2/department/{{departmentUUID}}/order/specificSearch" 
-H "accept: application/json" 
-H "authorization: Basic {{basic_auth_token}}" 
-H "Content-Type: application/json" 
-d "
{
  "orderNumberPrefix": "",
  "toOrderDate": "",
  "fromOrderDate": "",
  "tagNumber": "",
  "orderUuid": "",
  "userUuid": "",
  "pageNo": "",
  "size": "",
  "orderType": "",
  "orderStatus": "",
  "vin": "",
  "customerUuid": "",
  "dateFilterType": ""
}
"
```

## Response

### Response Object
```json
{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "orders": [
    {
      "advisorUuid": "string",
      "amount": "string",
      "customer": {
        "company": "string",
        "firstName": "string",
        "lastName": "string",
        "uuid": "string"
      },
      "orderDate": "string",
      "orderNumber": "string",
      "orderStatus": "string",
      "orderType": "string",
      "orderUuid": "string",
      "originalEstimate": "string",
      "tagNumber": "string",
      "technicianUuids": [
        "string"
      ],
      "updatedDate": "string",
      "vin": "string"
    }
  ],
  "statusCode": 0,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

### Response Object Explanation 

Array named `{{orders}}` which contains all order related information like ```amount, orderNumber, orderStatus, orderType etc.```, sub-object named `{{customer}}` which contains basic information of the customer like ```name, companyName``` and ```vin``` of the vehicle for which order was created.

---

// File: our-products/integration/order/how-to-create-a-service-order

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can create a Repair Order for the Service Department. The endpoint enables users to submit a new Repair order with various parameters like `orderDate, advisorNumber, orderNumber, etc.`
The created order will contain all the relevant order information.
To use this endpoint, you first need your credentials. If you don't already have them, head over to the <AuthPageLink/> page to see how you can request credentials from us.
The endpoint mentioned below can assist you in creating a Repair Order with customized parameters :-



## Parameters Used


###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `order.create` | `DealerDepartment` | Authorizes client to create  service order for provided user's dealer department |


## Endpoint

```shell
curl -X PUT "https://api.mykaarma.com/order/v2/department/{{departmentUUID}}/order"
-H "Authorization: {{basic_auth_token}}"
-H "Content-Type: application/json"
-d '{
    "order":{
      "type":"RO",
      "header":{
         "orderNumber":"string",
         "serviceAccount":"string",
         "accountingAccount":"string",
         "status":"string",
         "deptType":"string",
         "advisorNumber":"string",
         "advisorName":"string",
         "assignedUserUuid":"string",
         "creatorUserUuid":"string",
         "appointmentNumber":"string",
         "tagNumber":"string",
         "mileageIn":"string",
         "mileageOut":"string",
         "createDate":"string",
         "createTime":"string",
         "promisedDate":"string",
         "promisedTime":"string",
         "voidDate":"string",
         "closeDate":"string",
         "closeTime":"string",
         "waiter":"string",
         "rental":"string",
         "soldHours":"string",
         "actualHours":"string",
         "laborCost":"string",
         "laborSale":"string",
         "laborSaleCustomer":"string",
         "laborSaleInternal":"string",
         "laborSaleWarranty":"string",
         "partsCost":"string",
         "partsCostCustomer":"string",
         "partsCostInternal":"string",
         "partsCostWarranty":"string",
         "partsSale":"string",
         "partsSaleCustomer":"string",
         "partsSaleInternal":"string",
         "partsSaleWarranty":"string",
         "lubeSale":"string",
         "lubeSaleCustomer":"string",
         "lubeSaleInternal":"string",
         "lubeSaleWarranty":"string",
         "miscSale":"string",
         "miscSaleCustomer":"string",
         "miscSaleInternal":"string",
         "miscSaleWarranty":"string",
         "subletSale":"string",
         "subletSaleCustomer":"string",
         "subletSaleInternal":"string",
         "subletSaleWarranty":"string",
         "customerPayAmount":"string",
         "customerPayStateTax":"string",
         "internalPayAmount":"string",
         "warrantyPayAmount":"string",
         "description":"string"
      },
      "vehicle":{
         "uuid":"string"
      },
      "customer":{
         "uuid":"string"
      },
      "jobs":[
         {
            "jobIdentifier":"string",
            "jobNumberString":"string",
            "lopSeqNumber":"string",
            "laborOpCode":"string",
            "laborOpCodeDesc":"string",
            "laborType":"string",
            "laborSale":"string",
            "soldHours":"string",
            "actualHours":"string",
            "partsSale":"string",
            "miscSale":"string",
            "bookerNo":"string",string
            "dispatchLineStatus":"string",
            "techNo":"string",
            "campaignCode":"string",
            "parts":[
              {
                   
                  "partNumber":"string",
                  "description":"string",
                  "seqNo":"string",
                  "quantityOrdered":"string",
                  "quantitySold":"string",
                  "cost":"string",
                  "salePrice":"string",
                  "saleTotal":"string",
                  "laborType":"string"
              }
            ],
            "gog":[
               {
                  "itemType":"string",
                  "itemDescription":"string",
                  "jobNumber":"string",
                  "quantity":"string",
                  "saleTotal":"string",
                  "salePrice":"string",
                  "laborType":"string"
               }
            ],
            "techHours":[
               {
                  "techNo":"string",
                  "partSeqNo":"string",
                  "laborCost":"string",
                  "laborSale":"string",
                  "soldHours":"string",
                  "otherHours":"string",
                  "laborType":"string"
               }
            ],
            "comments":[
               {
                  "comment":"string",
                  "lastUpdatedBy":"string",
                  "updateDate":string"",
                  "updateTime":"string"
               }
            ],
            "ccc":{
               "complaint":"string",
               "complaintCode":"string",
               "cause":"string",
               "correction":"string"
            }
         }
              
      ],
      "mls" :[
        {
          "laborType": "string",
          "opCode" : "string",
          "opCodeDesc" : "string",
          "failureCode" : "string",
          "salePrice" : "string",
          "costPrice" : "string",
          "saleCompany" : "string",
          "sourceCompany" : "string",
          "lineCode" : "string",
          "poNumber" : "string",
          "poCreateDate" :"string",
          "poLineID" : "string",
          "mlsType" : "string"
        }
      ]
    }
}'
```

## Response
```json

{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "orderUUID": "string",
  "statusCode": "Integer"
}

```

## Request Body

### Order Details

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `type`  |  "RO" for service/repair order |  Yes  | 
|  `orderNumber`  | Unique identifier for the order. Ordernumber should match regex ^[a-zA-Z0-9-#_\s]*$ | Yes  | 
|  `serviceAccount`  |  Account associated with the service in the DMS. | No |
|  `accountingAccount`  |  Account used for accounting purposes in the DMS. | No | 
|  `status`  |  Current status of the order . | Yes ( allowed values are `OPENED`, `PRE-INVOICED`, `CLOSED` ) | 
|  `deptType`  |  Type of department handling the order. | No | 
|  `advisorNumber`  |  Identifier for the service advisor in the DMS to which RO is being assigned. | No( only required if `assignedUserUuid` is blank) | 
|  `advisorName`  |  Name of the service advisor. | No | 
|  `assignedUserUuid`  | Unique token issued by mykaarma of the dealer associate to which RO is being assigned | No( Required Only if `advisorNumber` is blank ) | 
|  `creatorUserUuid`  |  Unique token issued by mykaarma of the dealer associate which is creating the RO. | No  | 
|  `appointmentNumber`  |  Appointment Number (generated in the DMS) associated with RO. | No | 
|  `tagNumber`  |  Identifier for the vehicle tag. | No | 
|  `mileageIn`  |  Mileage of the vehicle when it arrived.| No | 
|  `mileageOut `  |   Mileage of the vehicle when it left. | No | 
|  `createDate`  |  Date when the order was created. yyyy-MM-dd format in UTC timezone  | Yes | 
|  `createTime`  | Time when the order was created. HH:mm:ss in UTC timezone | Yes  | 
|  `promisedDate`  |  Date by which the service is promised to be completed. yyyy-MM-dd format in UTC timezone.  | No | 
|  `promisedTime`  |  Time by which the service is promised to be completed. HH:mm:ss format in UTC timezone. | No | 
|  `voidDate`  |  Date when the order was voided. yyyy-MM-dd HH:mm:ss format in UTC timezone. | No | 
|  `closeDate`  | Date when the order was closed. yyyy-MM-dd format in UTC timezone | No | 
|  `closeTime`  |  Time when the order was closed. HH:mm:ss format  | No | 
|  `waiter`  |  Indicates if the customer is waiting for the service. "Y" /"N" | No | 
|  `rental`  |  Indicates if a rental vehicle is provided. "Y"/"N" | No | 
|  `soldHours`  | Number of hours sold for the service. | No | 
|  `actualHours`  |  Actual hours spent on the service. | No | 
|  `laborCost`  |  Cost of labor for the service. (Only numerics alowed upto 2 decimal places like "12.56" ) | No | 
|  `laborSale`  | Sale amount for labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleCustomer`  | Sale amount for labor charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleInternal`  | Sale amount for internal labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleWarranty`  | Sale amount for labor under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCost`  | Cost of parts used in the service. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostCustomer`  | Cost of parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostInternal`  | Cost of parts for internal use. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostWarranty`  | Cost of parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSale`  | Sale amount for parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleCustomer`  | Sale amount for parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleInternal`  | Sale amount for internal parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleWarranty`  | Sale amount for parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSale`  | Sale amount for lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleCustomer`  | Sale amount for lubricants charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleInternal`  | Sale amount for internal lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleWarranty`  | Sale amount for lubricants under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSale`  | Sale amount for miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleCustomer`  | Sale amount for miscellaneous items charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleInternal`  | Sale amount for internal miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleWarranty`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSale`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleCustomer`  | Sale amount for sublet services charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleInternal`  | Sale amount for internal sublet services. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleWarranty`  | Sale amount for sublet services under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayAmount`  | Total amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayStateTax`  | State tax amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `internalPayAmount`  | Total internal charges. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `warrantyPayAmount`  | Total amount covered by warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `description`  | Description of the order. |  No | 

### Vehicle Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `vehicle.uuid`  | Unique identifier issued by mykaarma for the vehicle for which the order is being created. |  No <br/> *Not sending `vehicle.uuid` will create an order without a vehicle in mykaarma. Please contact your API support representative at mykaarma before making any decision on this.* | 


### Customer Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `customer.uuid`  |  Unique identifier issued by mykaarma for the customer for which the order is being created.  |  Yes | 


### Job details

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `job.jobIdentifier`  |   Unique identifier for the line + labor operation. Example "A-1","B-2"  |  No | 
|  `job.jobNumberString`  |   Unique identifier for the line. Example  "A","B","C" |  Yes | 
|  `job.lopSeqNumber`  |   Sequence number for the labor operation. Example  "1","2" ,"3" |  No | 
|  `job.laborOpCode`  |   Code for the labor operation. Example  "OIL"|  Yes | 
|  `job.laborOpCodeDesc`  |  Description of the labor operation. |  No |
|  `job.laborType`  |   Type of labor performed. Perferred allowed values are "C"/"W"/"I" |  No |
|  `job.laborSale`  |  Sale amount for the labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.soldHours`  |  Number of hours sold for the job. |  No |
|  `job.actualHours`  |  Actual hours spent on the job. |  No |
|  `job.partsSale`  |  Sale amount for parts used in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.miscSale`  |  Sale amount for miscellaneous items in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.bookerNo`  | Booker number for the job.   |  No |
|  `job.dispatchLineStatus`  | Status of the dispatch line.  |  No |
|  `job.techNo`  | Identifier for the technician in the DMS who performed the job.   |  No |
|  `job.campaignCode`  | Code for any applicable campaign.   |  No |

### Parts Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `part.partNumber`  |   Number identifying the part.  |  Yes( Required only if one is sending parts along with job ) | 
|  `part.description`  |   Description of the part. |  No | 
|  `part.seqNo`  |   Sequence number for the part. |  No | 
|  `part.quantityOrdered`  |   Quantity of the part ordered. |  No | 
|  `part.quantitySold`  |   Quantity of the part sold. |  No |
|  `part.cost`  |   Cost of the part. |  No |
|  `part.salePrice`  | Sale price of the part. |  No |
|  `part.saleTotal`  |  Total sale amount for the part. |  No |
|  `part.laborType`  |  Type of labor associated with the part. |  No |

### GOG Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `gog.itemType`  |   Type of item in the GOG.  |  No | 
|  `gog.itemDescription`  |   Description of the item. |  No | 
|  `gog.jobNumber`  |  Job number associated with the item. |  No | 
|  `gog.quantity`  |   Quantity of the item. |  No | 
|  `gog.saleTotal`  |   Total sale amount for the item. |  No |
|  `gog.salePrice`  |   Sale price of the item. |  No |
|  `gog.salePrice`  | Sale price of the item. |  No |
|  `gog.laborType`  | Type of labor associated with the item. |  No |


### Tech Hours

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `tech.techNo`  |  Identifier for the technician in the DMS who performed the job.   |  No | 
|  `tech.partSeqNo`  |  Sequence number for the part. |  No | 
|  `tech.laborCost`  | Cost of labor for the technician. |  No | 
|  `tech.laborSale`  |  Sale amount for the labor. |  No | 
|  `tech.soldHours`  |  Number of hours sold for the technician's work. |  No | 
|  `tech.otherHours`  |   Additional hours associated with the technician's work. |  No |
|  `tech.laborType`  |   Type of labor performed by the technician. |  No |

### Comments

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `comments.comment`  |  Text of the comment.  |  No | 
|  `comments.lastUpdatedBy`  |  Identifier for the person who last updated the comment. |  No | 
|  `comments.updateDate`  |  Date when the comment was last updated. yyyy-MM-dd format in  UTC timezone |  No | 
|  `comments.updateTime`  |  Time when the comment was last updated. HH:mm:ss format in  UTC timezone |  No | 

### Complaint cause correction

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `ccc.complaint`  |  Description of the customer's complaint.  |  No | 
|  `ccc.complaintCode`  | Code for the complaint. |  No | 
|  `ccc.cause`  |  Cause of the job. |  No | 
|  `ccc.correction`  |  Correction made to address the complaint. |  No | 

### MLS Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `mls.laborType`  |   Type of labor in the MLS.  |  No | 
|  `mls.opCode`  | Operation code in the MLS. |  No | 
|  `mls.opCodeDesc`  |  Description of the operation code. |  No | 
|  `mls.failureCode`  |  Code for any failure. |  No | 
|  `mls.salePrice`  |  Sale price in the MLS..  |  No | 
|  `mls.costPrice`  | Cost price in the MLS. |  No | 
|  `mls.saleCompany`  |  Company responsible for the sale. |  No | 
|  `mls.sourceCompany`  |   Company that sourced the item. |  No | 
|  `mls.lineCode`  |  Code for the line item. |  No | 
|  `mls.poNumber`  |  Purchase order number. |  No | 
|  `mls.poCreateDate`  |  Date when the purchase order was created in UTC timezone. |  No | 
|  `mls.poLineID`  |  Line ID for the purchase order. |  No | 
|  `mls.mlsType`  |  Type of MLS entry. |  No | 


## Response Object Explanation 

`{{orderUUID}}`  uuid of the order which was created/updated .

`{{errors}}`   An array of error objects detailing issues encountered during order creation or update.

`{{warnings}}` An array of warning objects providing non-critical alerts encountered during order creation or update.

`{{errors.errorCode}}`   Code indicating the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible error codes.

`{{errors.errorTitle}}`   Title describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for detailed descriptions.

`{{errors.errorDescription}}`  Detailed message describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.

`{{warnings.warningCode}}`  Code indicating the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible warning codes.

`{{warnings.warningDescription}}`  Detailed message describing the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.




## Uniqueness criteria

At myKaarma, we have a unique approach to handling order numbers and their associated creation timestamps. In our system, an order is uniquely identified by both its order number and its creation date-time. This means that the same order number created at different timestamps is treated as distinct orders. However, we have implemented a threshold to manage this uniqueness effectively.
If an incoming order has the same order number as an existing one in our system, and its creation date-time falls within a ±30-day window of the existing order's creation date-time, we consider it the same order and **throw an error with the closest matching order uuid in the error description and ask the vendors to use the update API endpoint to update the existing order.**  This approach helps in managing updates and avoiding duplicate entries for orders that are essentially 
the same but might have slight variations in their creation timestamps.


Examples:

`Different Order`:  

Suppose an order with the number RO-1234 and a creation date-time of 2024-02-01 exists in myKaarma. If a vendor attempts to create an order with the same order number RO-1234 but with a creation date-time of 2025-02-01, it will be treated as a different order. This is because the creation date-time is outside the ±30-day threshold.

`Same Order`: 

 Consider the same existing order RO-1234 with a creation date-time of 2024-02-01. If a vendor tries to create an order with the same order number RO-1234 but with a creation date-time of 2024-02-10, it will be treated as the same order. This is because the new creation date-time falls within the ±30-day threshold of the existing order's creation date-time, prompting an error with the existing order uuid to update the existing order in our system.
This system ensures that orders are managed efficiently, reducing redundancy while allowing for necessary updates within a reasonable timeframe.



![Decision Tree](./order-decision-tree.png)

---

// File: our-products/integration/order/how-to-update-a-service-order

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can update a Repair Order for the Service Department. The endpoint enables users to submit an existing Repair order with various parameters like `orderDate, closeDate, orderNumber, etc.`. 
The endpoint mentioned below can assist you in updating a Repair Order with customized parameters :-

**Note:** 

Before updating a Repair Order, it is essential to first read the RO using the endpoint described in [Read Service Order](./how-to-read-a-service-order.md). Retrieve the orderReadChecksum from the response and include it as the required `orderReadorderReadChecksum` header value in your update request. 
This ensures data integrity and consistency during the update process.



![Decision Tree](./update-order-process.png)



## Parameters Used


###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |
| `orderUUID` | `String` | Unique identifier of dealer order | Yes |

### Header

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  |
|  `{{orderReadChecksum}}`  | orderReadChecksum is a required header value that must be included in update requests. It should be the same value that the vendor received from the previous read order response, ensuring data integrity and consistency during the update process.  |  Yes  | 



### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `order.update` | `DealerDepartment` | Authorizes client to update service order for provided user's dealer department |


## Endpoint

```shell
curl -X POST "https://api.mykaarma.com/order/v2/department/{{departmentUUID}}/order/{{orderUUID}}"
-H "Authorization: {{basic_auth_token}}"
-H "Content-Type: application/json"
-H "orderReadorderReadChecksum : {{orderReadorderReadChecksum}}"
-d '{
    "order":{
      "type":"RO",
      "header":{
         "orderNumber":"string",
         "serviceAccount":"string",
         "accountingAccount":"string",
         "status":"string",
         "deptType":"string",
         "advisorNumber":"string",
         "advisorName":"string",
         "assignedUserUuid":"string",
         "creatorUserUuid":"string",
         "appointmentNumber":"string",
         "tagNumber":"string",
         "mileageIn":"string",
         "mileageOut":"string",
         "createDate":"string",
         "createTime":"string",
         "promisedDate":"string",
         "promisedTime":"string",
         "voidDate":"string",
         "closeDate":"string",
         "closeTime":"string",
         "waiter":"string",
         "rental":"string",
         "soldHours":"string",
         "actualHours":"string",
         "laborCost":"string",
         "laborSale":"string",
         "laborSaleCustomer":"string",
         "laborSaleInternal":"string",
         "laborSaleWarranty":"string",
         "partsCost":"string",
         "partsCostCustomer":"string",
         "partsCostInternal":"string",
         "partsCostWarranty":"string",
         "partsSale":"string",
         "partsSaleCustomer":"string",
         "partsSaleInternal":"string",
         "partsSaleWarranty":"string",
         "lubeSale":"string",
         "lubeSaleCustomer":"string",
         "lubeSaleInternal":"string",
         "lubeSaleWarranty":"string",
         "miscSale":"string",
         "miscSaleCustomer":"string",
         "miscSaleInternal":"string",
         "miscSaleWarranty":"string",
         "subletSale":"string",
         "subletSaleCustomer":"string",
         "subletSaleInternal":"string",
         "subletSaleWarranty":"string",
         "customerPayAmount":"string",
         "customerPayStateTax":"string",
         "internalPayAmount":"string",
         "warrantyPayAmount":"string",
         "description":"string"
      },
      "vehicle":{
         "uuid":"string"
      },
      "customer":{
         "uuid":"string",
      },
      "jobs":[
         {
            "jobIdentifier":"string",
            "jobNumberString":"string",
            "lopSeqNumber":"string",
            "laborOpCode":"string",
            "laborOpCodeDesc":"string",
            "laborType":"string",
            "laborSale":"string",
            "soldHours":"string",
            "actualHours":"string",
            "partsSale":"string",
            "miscSale":"string",
            "bookerNo":"string",string
            "dispatchLineStatus":"string",
            "techNo":"string",
            "campaignCode":"string",
            "parts":[
              {
                   
                  "partNumber":"string",
                  "description":"string",
                  "seqNo":"string",
                  "quantityOrdered":"string",
                  "quantitySold":"string",
                  "cost":"string",
                  "salePrice":"string",
                  "saleTotal":"string",
                  "laborType":"string"
              }
            ],
            "gog":[
               {
                  "itemType":"string",
                  "itemDescription":"string",
                  "jobNumber":"string",
                  "quantity":"string",
                  "saleTotal":"string",
                  "salePrice":"string",
                  "laborType":"string"
               }
            ],
            "techHours":[
               {
                  "techNo":"string",
                  "partSeqNo":"string",
                  "laborCost":"string",
                  "laborSale":"string",
                  "soldHours":"string",
                  "otherHours":"string",
                  "laborType":"string"
               }
            ],
            "comments":[
               {
                  "comment":"string",
                  "lastUpdatedBy":"string",
                  "updateDate":string"",
                  "updateTime":"string"
               }
            ],
            "ccc":{
               "complaint":"string",
               "complaintCode":"string",
               "cause":"string",
               "correction":"string"
            }
         }
              
      ],
      "mls" :[
        {
          "laborType": "string",
          "opCode" : "string",
          "opCodeDesc" : "string",
          "failureCode" : "string",
          "salePrice" : "string",
          "costPrice" : "string",
          "saleCompany" : "string",
          "sourceCompany" : "string",
          "lineCode" : "string",
          "poNumber" : "string",
          "poCreateDate" :"string",
          "poLineID" : "string",
          "mlsType" : "string"
        }
      ]
    }
}'
```

## Response
```json

{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "orderUUID": "string",
  "statusCode": "Integer"
}

```

## Request Body

### Order Details

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `type`  |  "RO" for service/repair order |  Yes  | 
|  `orderNumber`  | Unique identifier for the order. Ordernumber should match regex ^[a-zA-Z0-9-#_\s]*$ | Yes  | 
|  `serviceAccount`  |  Account associated with the service. | No |
|  `accountingAccount`  |  Account used for accounting purposes. | No | 
|  `status`  |  Current status of the order . | Yes ( allowed values are `OPENED`, `PRE-INVOICED`, `CLOSED` )  | 
|  `deptType`  |  Type of department handling the order. | No | 
|  `advisorNumber`  |  Identifier for the service advisor in the DMS to which RO is being assigned . | No ( only required if `assignedUserUuid` is blank) | 
|  `advisorName`  |  Name of the service advisor. | No | 
|  `assignedUserUuid`  | Unique token issued by mykaarma of the dealer associate to which RO is being assigned | No ( Required Only if `advisorNumber` is blank ) | 
|  `creatorUserUuid`  |  Unique token issued by mykaarma of the dealer associate which is creating the RO. | No | 
|  `appointmentNumber`  |  Appointment Number (generated in the DMS) associated with RO . | No | 
|  `tagNumber`  |  Identifier for the vehicle tag. | No | 
|  `mileageIn`  |  Mileage of the vehicle when it arrived.| No | 
|  `mileageOut `  |   Mileage of the vehicle when it left. | No | 
|  `createDate`  |  Date when the order was created. yyyy-MM-dd format in UTC timezone  | Yes | 
|  `createTime`  | Time when the order was created. HH:mm:ss in UTC timezone | Yes  | 
|  `promisedDate`  |  Date by which the service is promised to be completed. yyyy-MM-dd format in UTC timezone  | No | 
|  `promisedTime`  |  Time by which the service is promised to be completed. HH:mm:ss format in UTC timezone | No | 
|  `voidDate`  |  Date when the order was voided. yyyy-MM-dd HH:mm:ss format in UTC timezone | No | 
|  `closeDate`  | Date when the order was closed. yyyy-MM-dd format in UTC timezone | No | 
|  `closeTime`  |  Time when the order was closed. HH:mm:ss format  | No | 
|  `waiter`  |  Indicates if the customer is waiting for the service. "Y"/"N" | No | 
|  `rental`  |  Indicates if a rental vehicle is provided. "Y"/"N" | No | 
|  `soldHours`  | Number of hours sold for the service. | No | 
|  `actualHours`  |  Actual hours spent on the service. | No | 
|  `laborCost`  |  Cost of labor for the service. (Only numerics alowed upto 2 decimal places like "12.56" ) | No | 
|  `laborSale`  | Sale amount for labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleCustomer`  | Sale amount for labor charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleInternal`  | Sale amount for internal labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleWarranty`  | Sale amount for labor under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCost`  | Cost of parts used in the service. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostCustomer`  | Cost of parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostInternal`  | Cost of parts for internal use. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostWarranty`  | Cost of parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSale`  | Sale amount for parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleCustomer`  | Sale amount for parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleInternal`  | Sale amount for internal parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleWarranty`  | Sale amount for parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSale`  | Sale amount for lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleCustomer`  | Sale amount for lubricants charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleInternal`  | Sale amount for internal lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleWarranty`  | Sale amount for lubricants under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSale`  | Sale amount for miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleCustomer`  | Sale amount for miscellaneous items charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleInternal`  | Sale amount for internal miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleWarranty`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSale`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleCustomer`  | Sale amount for sublet services charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleInternal`  | Sale amount for internal sublet services. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleWarranty`  | Sale amount for sublet services under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayAmount`  | Total amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayStateTax`  | State tax amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `internalPayAmount`  | Total internal charges. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `warrantyPayAmount`  | Total amount covered by warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `description`  | Description of the order. |  No | 

### Vehicle Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `vehicle.uuid`  | Unique identifier issued by mykaarma for the vehicle for which the order is being created. |  No <br/> *Not sending `vehicle.uuid` will update the order without a vehicle in mykaarma. Please contact your API support representative at mykaarma before making any decision on this.* | 

### Customer Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `customer.uuid`  |  Unique identifier issued by mykaarma for the customer for which the order is being created.  |  Yes | 


### Job details

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `job.jobIdentifier`  |   Unique identifier for the line + labor operation. Example "A-1","B-2"  |  No | 
|  `job.jobNumberString`  |   Unique identifier for the line. Example  "A","B","C" |  Yes | 
|  `job.lopSeqNumber`  |   Sequence number for the labor operation. Example  "1","2" ,"3" |  No | 
|  `job.laborOpCode`  |   Code for the labor operation. Example  "OIL"|  Yes | 
|  `job.laborOpCodeDesc`  |  Description of the labor operation. |  No |
|  `job.laborType`  |   Type of labor performed. Perferred allowed values are C/W/I |  No |
|  `job.laborSale`  |  Sale amount for the labor.(Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.soldHours`  |  Number of hours sold for the job. |  No |
|  `job.actualHours`  |  Actual hours spent on the job. |  No |
|  `job.partsSale`  |  Sale amount for parts used in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.miscSale`  |  Sale amount for miscellaneous items in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No |
|  `job.bookerNo`  | Booker number for the job.   |  No |
|  `job.dispatchLineStatus`  | Status of the dispatch line.  |  No |
|  `job.techNo`  | Identifier for the technician in the DMS who performed the job.   |  No |
|  `job.campaignCode`  | Code for any applicable campaign.   |  No |

### Parts Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `part.partNumber`  |   Number identifying the part.  |  Yes( Required only if one is sending parts along with job ) | 
|  `part.description`  |   Description of the part. |  No | 
|  `part.seqNo`  |   Sequence number for the part. |  No | 
|  `part.quantityOrdered`  |   Quantity of the part ordered. |  No | 
|  `part.quantitySold`  |   Quantity of the part sold. |  No |
|  `part.cost`  |   Cost of the part. |  No |
|  `part.salePrice`  | Sale price of the part. |  No |
|  `part.saleTotal`  |  Total sale amount for the part. |  No |
|  `part.laborType`  |  Type of labor associated with the part. |  No |

### GOG Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `gog.itemType`  |   Type of item in the GOG.  |  No | 
|  `gog.itemDescription`  |   Description of the item. |  No | 
|  `gog.jobNumber`  |  Job number associated with the item. |  No | 
|  `gog.quantity`  |   Quantity of the item. |  No | 
|  `gog.saleTotal`  |   Total sale amount for the item. |  No |
|  `gog.salePrice`  |   Sale price of the item. |  No |
|  `gog.salePrice`  | Sale price of the item. |  No |
|  `gog.laborType`  | Type of labor associated with the item. |  No |


### Tech Hours

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `tech.techNo`  |  Identifier for the technician in the DMS who performed the job.   |  No | 
|  `tech.partSeqNo`  |  Sequence number for the part. |  No | 
|  `tech.laborCost`  | Cost of labor for the technician. |  No | 
|  `tech.laborSale`  |  Sale amount for the labor. |  No | 
|  `tech.soldHours`  |  Number of hours sold for the technician's work. |  No | 
|  `tech.otherHours`  |   Additional hours associated with the technician's work. |  No |
|  `tech.laborType`  |   Type of labor performed by the technician. |  No |

### Comments

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `comments.comment`  |  Text of the comment.  |  No | 
|  `comments.lastUpdatedBy`  |  Identifier for the person who last updated the comment. |  No | 
|  `comments.updateDate`  |  Date when the comment was last updated. yyyy-MM-dd format UTC timezone |  No | 
|  `comments.updateTime`  |  Time when the comment was last updated. HH:mm:ss format UTC timezone |  No | 

### Complaint cause correction

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `ccc.complaint`  |  Description of the customer's complaint.  |  No | 
|  `ccc.complaintCode`  | Code for the complaint. |  No | 
|  `ccc.cause`  |  Cause of the job. |  No | 
|  `ccc.correction`  |  Correction made to address the complaint. |  No | 

### MLS Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `mls.laborType`  |   Type of labor in the MLS.  |  No | 
|  `mls.opCode`  | Operation code in the MLS. |  No | 
|  `mls.opCodeDesc`  |  Description of the operation code. |  No | 
|  `mls.failureCode`  |  Code for any failure. |  No | 
|  `mls.salePrice`  |  Sale price in the MLS..  |  No | 
|  `mls.costPrice`  | Cost price in the MLS. |  No | 
|  `mls.saleCompany`  |  Company responsible for the sale. |  No | 
|  `mls.sourceCompany`  |   Company that sourced the item. |  No | 
|  `mls.lineCode`  |  Code for the line item. |  No | 
|  `mls.poNumber`  |  Purchase order number. |  No | 
|  `mls.poCreateDate`  |  Date when the purchase order was created in UTC timezone |  No | 
|  `mls.poLineID`  |  Line ID for the purchase order. |  No | 
|  `mls.mlsType`  |  Type of MLS entry. |  No | 


## Response Object Explanation 

`{{orderUUID}}`  uuid of the order which was created/updated .

`{{errors}}`   An array of error objects detailing issues encountered during order creation or update.

`{{warnings}}` An array of warning objects providing non-critical alerts encountered during order creation or update.

`{{errors.errorCode}}`   Code indicating the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible error codes.

`{{errors.errorTitle}}`   Title describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for detailed descriptions.

`{{errors.errorDescription}}`  Detailed message describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.

`{{warnings.warningCode}}`  Code indicating the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible warning codes.

`{{warnings.warningDescription}}`  Detailed message describing the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.




## Ownership change

In myKaarma, we provide the flexibility to change the ownership of a Repair Order (RO) for existing orders. This means that if you pass a different customer UUID in the update order request, the ownership of the order will switch from the existing customer to the incoming one. This feature allows for seamless transitions and updates in customer information, ensuring that the correct customer is associated with each order. By enabling this functionality, we help maintain accurate and up-to-date records, reflecting any changes in customer relationships or order management.


## Order updates for DMS Orders

Presently we don't allow any updates to be made on Orders originated from the (dealer's DMS)(unless they are created via myKaarma in the first place)

In case any vendor(non DMS) wants to update the order, they are requested to propagate that change in the DMS itself and which will eventually be synced with myKaarma.

---

// File: our-products/integration/order/how-to-read-a-service-order

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can read a Repair Order for the Service Department. The returned  order will contain all the relevant order information.
To use this endpoint, you first need your credentials. If you don't already have them, head over to the <AuthPageLink/> page to see how you can request credentials from us.



## Parameters Used


###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |
| `orderUUID` | `String` | Unique identifier of dealer order | Yes |



### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `order.fetch` | `DealerDepartment` | Authorizes client to read service order for provided user's dealer department |


## Endpoint

```shell
curl -X GET "https://api.mykaarma.com/order/v2/department/{{departmentUUID}}/global_order/{{orderUUID}}"
-H "authorization: {{basic_auth_token}}"

```

## Response
```json

{
   "statusCode":"string",
   "orderReadChecksum":"string",
   "errors":[
      
   ],
   "warnings":[
      
   ],
   "order":{
      "uuid":"string",
      "order":{
         "type":"RO",
         "header":{
            "orderNumber":"string",
            "serviceAccount":"string",
            "accountingAccount":"string",
            "dmsStatus":"string",
            "status":"string",
            "deptType":"string",
            "advisorNumber":"string",
            "advisorName":"string",
            "dealerAssociateUuid":"string",
            "originalAssociateUUID":"string",
            "appointmentNumber":"string",
            "tagNumber":"string",
            "mileageIn":"string",
            "mileageOut":"string",
            "orderDate":"string",
            "orderTime":"string",
            "promisedDate":"string",
            "promisedTime":"string",
            "voidDate":"string",
            "closeDate":"string",
            "closeTime":"string",
            "waiter":"string",
            "rental":"string",
            "soldHours":"string",
            "actualHours":"string",
            "laborCost":"string",
            "laborSale":"string",
            "laborSaleCustomer":"string",
            "laborSaleInternal":"string",
            "laborSaleWarranty":"string",
            "partsCost":"string",
            "partsCostCustomer":"string",
            "partsCostInternal":"string",
            "partsCostWarranty":"string",
            "partsSale":"string",
            "partsSaleCustomer":"string",
            "partsSaleInternal":"string",
            "partsSaleWarranty":"string",
            "lubeSale":"string",
            "lubeSaleCustomer":"string",
            "lubeSaleInternal":"string",
            "lubeSaleWarranty":"string",
            "miscSale":"string",
            "miscSaleCustomer":"string",
            "miscSaleInternal":"string",
            "miscSaleWarranty":"string",
            "subletSale":"string",
            "subletSaleCustomer":"string",
            "subletSaleInternal":"string",
            "subletSaleWarranty":"string",
            "customerPayAmount":"string",
            "customerPayStateTax":"string",
            "warrantyPayStateTax":"string",
            "internalPayStateTax":"string",
            "internalPayAmount":"string",
            "warrantyPayAmount":"string",
            "invoiceURL":"string",
            "payTypes":"string",
            "description":"string",
            "printDate":"string",
            "printTime":"string",
            "deliveryAmount":"string",
            "estimate":"string",
            "localTaxAmountCustomer":"string",
            "localTaxAmountWarranty":"string",
            "localTaxAmountInternal":"string",
            "stockNumber":"string",
            "isInternal":"string",
            "isVoided":"string",
            "invoiceTotal":"string",
            "mykCreatedDate":"string"
         },
         "vehicle":{
            "uuid":"string",
            "vin":"string",
            "make":"string",
            "key":"string",
            "model":"string",
            "color":"string",
            "licensePlate":"string"
         },
         "customer":{
            "uuid":"string",
            "key":"string",
            "firstName":"string",
            "lastName":"string"
         },
         "jobs":[
            {
               "jobIdentifier":"string",
               "jobNumberString":"string",
               "lopSeqNumber":"string",
               "laborOpCode":"string",
               "laborOpCodeDesc":"string",
               "laborType":"string",
               "laborSale":"string",
               "soldHours":"string",
               "actualHours":"string",
               "partsSale":"string",
               "miscSale":"string",
               "bookerNo":"string",
               "dispatchLineStatus":"string",
               "techNo":"string",
               "campaignCode":"string",
               "estimates":{
                  "laborEstimate":"string",
                  "partsEstimate":"string",
                  "serviceEstimate":"string",
                  "taxEstimate":"string",
                  "lubeEstimate":"string",
                  "miscEstimate":"string",
                  "subletEstimate":"string"
               },
               "parts":[
                  {
                     "partNumber":"string",
                     "description":"string",
                     "seqNo":"string",
                     "quantityOrdered":"string",
                     "quantitySold":"string",
                     "cost":"string",
                     "salePrice":"string",
                     "saleTotal":"string",
                     "laborType":"string"
                  }
               ],
               "gog":[
                  {
                     "itemType":"string",
                     "itemDescription":"string",
                     "jobNumber":"string",
                     "quantity":"string",
                     "saleTotal":"string",
                     "salePrice":"string",
                     "laborType":"string"
                  }
               ],
               "techHours":[
                  {
                     "techNo":"string",
                     "partSeqNo":"string",
                     "laborCost":"string",
                     "laborSale":"string",
                     "soldHours":"string",
                     "otherHours":"string",
                     "laborType":"string"
                  }
               ],
               "comments":[
                  {
                     "comment":"string",
                     "lastUpdatedBy":"string",
                     "updateDate":"string",
                     "updateTime":"string"
                  }
               ],
               "ccc":{
                  "complaint":"string",
                  "complaintCode":"string",
                  "cause":"string",
                  "correction":"string"
               }
            }
         ],
         "mls":[
            {
               "laborType":"string",
               "opCode":"string",
               "opCodeDesc":"string",
               "failureCode":"string",
               "salePrice":"string",
               "costPrice":"string",
               "saleCompany":"string",
               "sourceCompany":"string",
               "lineCode":"string",
               "poNumber":"string",
               "poCreateDate":"string",
               "poLineID":"string",
               "mlsType":"string"
            }
         ]
      }
   }
}


```

## Response Object Explanation 


### 



| Parameter Name | Description | 
| ---         |   --- |    --- | 
|  `orderReadChecksum`  |  The orderReadChecksum is a unique identifier used to verify the integrity and consistency of the order data retrieved from myKaarma. It should be included in follow-up update requests to ensure that the order data being modified is current and has not been altered since it was last read. |  


### 

| Parameter Name | Description | 
| ---         |   --- |    --- | 
|  `uuid`  |  unique identifier of Order in mykaarma. |  


### Order Details

| Parameter Name | Description | 
| ---         |   --- |
|  `uuid`  |  unique identifier of Order in mykaarma. |  
|  `type`  |  "RO" for service/repair order |  
|  `orderNumber`  | Unique identifier for the order. Ordernumber should match regex ^[a-zA-Z0-9-#_\s]*$ | 
|  `serviceAccount`  |  Account associated with the service. | No |
|  `accountingAccount`  |  Account used for accounting purposes. |
|  `status`  |  Current status of the order in myKaarma. Possible values O/P/C signifying OPENED , PRE-INVOICED, CLOSED  |
| `dmsStatus` | Current status of the order in the DMS. Possible values O/P/C signifying OPENED , PRE-INVOICED, CLOSED. Check the documentation [here](https://docs.mykaarma.com/our-products/integration/order/how-to-read-a-service-order#order-status---dms-status-information) for difference between this field and the status field above |
|  `deptType`  |  Type of department handling the order. |
|  `advisorNumber`  |  Identifier for the service advisor in the DMS to which RO is being assigned . |
|  `advisorName`  |  Name of the service advisor. |
|  `dealerAssociateUuid`  | Unique token issued by mykaarma of the dealer associate to which RO is being assigned | No ( Required Only if advisorNumber is blank ) | 
|  `originalAssociateUUID`  |  Unique token issued by mykaarma of the dealer associate which is creating the RO. | No ( Required Only if advisorNumber is blank ) | 
|  `appointmentNumber`  |  Appointment Number (generated in the DMS) associated with RO . |
|  `tagNumber`  |  Identifier for the vehicle tag. |
|  `mileageIn`  |  Mileage of the vehicle when it arrived.|
|  `mileageOut `  |   Mileage of the vehicle when it left. |
|  `orderDate`  |  Date when the order was created. yyyy-MM-dd format in PST timezone  |
|  `orderTime`  | Time when the order was created. HH:mm:ss in PST timezone | 
|  `printDate`  |  The date when the repair order was printed, formatted as yyyy-MM-dd in the PST timezone  |
|  `printTime`  | The time when the repair order was printed, formatted as HH:mm:ss in the PST timezone. | 
|  `promisedDate`  |  Date by which the service is promised to be completed. yyyy-MM-dd format in PST timezone  |
|  `promisedTime`  |  Time by which the service is promised to be completed. HH:mm:ss format in PST timezone |
|  `voidDate`  |  Date when the order was voided. yyyy-MM-dd HH:mm:ss format in PST timezone |
|  `closeDate`  | Date when the order was closed. yyyy-MM-dd format in PST timezone |
|  `closeTime`  |  Time when the order was closed. HH:mm:ss format  |
|  `waiter`  |  Indicates if the customer is waiting for the service. "Y/N" |
|  `rental`  |  Indicates if a rental vehicle is provided. "Y/N" |
|  `soldHours`  | Number of hours sold for the service. |
|  `actualHours`  |  Actual hours spent on the service. |
|  `laborCost`  |  Cost of labor for the service. (Only numerics alowed upto 2 decimal places like "12.56" ) |
|  `laborSale`  | Sale amount for labor. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `laborSaleCustomer`  | Sale amount for labor charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `laborSaleInternal`  | Sale amount for internal labor. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `laborSaleWarranty`  | Sale amount for labor under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsCost`  | Cost of parts used in the service. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsCostCustomer`  | Cost of parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsCostInternal`  | Cost of parts for internal use. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsCostWarranty`  | Cost of parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsSale`  | Sale amount for parts. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsSaleCustomer`  | Sale amount for parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsSaleInternal`  | Sale amount for internal parts. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `partsSaleWarranty`  | Sale amount for parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `lubeSale`  | Sale amount for lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `lubeSaleCustomer`  | Sale amount for lubricants charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `lubeSaleInternal`  | Sale amount for internal lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `lubeSaleWarranty`  | Sale amount for lubricants under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `miscSale`  | Sale amount for miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `miscSaleCustomer`  | Sale amount for miscellaneous items charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `miscSaleInternal`  | Sale amount for internal miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `miscSaleWarranty`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `subletSale`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `subletSaleCustomer`  | Sale amount for sublet services charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `subletSaleInternal`  | Sale amount for internal sublet services. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `subletSaleWarranty`  | Sale amount for sublet services under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `customerPayAmount`  | Total amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `customerPayStateTax`  | The state tax amount payable by the customer, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `warrantyPayStateTax`  | The state tax amount covered by the warranty, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `internalPayStateTax`  | The state tax amount covered by internal charges, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `localTaxAmountCustomer`  | The local tax amount payable by the customer, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `localTaxAmountWarranty`  | The local tax amount covered by the warranty, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `localTaxAmountInternal`  |The local tax amount covered by internal charges, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `isInternal`  | Indicates whether the repair order is for internal purposes, typically represented as a boolean value (e.g., "true" or "false"). |
|  `isVoided`  | Indicates whether the repair order has been voided,  typically represented as a boolean value (e.g., "true" or "false"). |
|  `invoiceTotal`  | The total amount of the invoice, formatted as a numeric value up to two decimal places (e.g., "12.56"). |
|  `mykCreatedDate`  | The date when the order was created in myKaarma, formatted as yyyy-MM-dd. PST timezone |
|  `stockNumber`  | The identifier for the vehicle's stock, typically used for inventory management. |
|  `invoiceURL`  | The URL link to access the invoice associated with the repair order. |   
|  `payTypes`  | The different methods or categories of payment applicable to the repair order.  |  
|  `estimate`  | Estimate of the order |          
|  `internalPayAmount`  | Total internal charges, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `warrantyPayAmount`  | Total amount covered by the warranty, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `description`  | Description of the order. | 



### Vehicle Information

| Parameter Name | Description | 
| ---         |   --- |    
|  `vehicle.uuid`  | Unique identifier issued by mykaarma for the vehicle for which the order is being created. | 
|  `vehicle.vin`  | Vehicle Identification Number for the vehicle for which the order is being created .  | 
|  `vehicle.make`  | Manufacturer of the vehicle the order is being created.  | 
|  `vehicle.model`  |  Model of the vehicle.  | 
|  `vehicle.key`  |  Model of the vehicle.  |
|  `vehicle.color`  |  Model of the vehicle.  |
|  `vehicle.licensePlate`  |  Model of the vehicle.  |  


### Customer Information

| Parameter Name | Description | 
| ---         |   --- |    
|  `customer.uuid`  |  Unique identifier issued by mykaarma for the customer for which the order is being created.  |
|  `customer.firstName`  |  First name of the customer.  | 
|  `customer.lastName`  |  Last name of the customer.  | 
|  `customer.key`  |  Unique identifier issued by mykaarma for the customer for which the order is being created.  |


### Job details

| Parameter Name | Description | 
| ---         |   --- |    
|  `job.jobIdentifier`  |   Unique identifier for the line + labor operation. Example "A-1","B-2"  | 
|  `job.jobNumberString`  |   Unique identifier for the line. Example  "A","B","C" |
|  `job.lopSeqNumber`  |   Sequence number for the labor operation. Example  "1","2" ,"3" |  
|  `job.laborOpCode`  |   Code for the labor operation. Example  "OIL"|  
|  `job.laborOpCodeDesc`  |  Description of the labor operation. |  
|  `job.laborType`  |   Type of labor performed. Perferred allowed values are C/W/I |  
|  `job.dmsLaborType`  |   The type of labor performed as recorded in the Dealer Management System (DMS) | 
|  `job.serviceType`  |   The type of service performed |  
|  `job.jobTotal`  |   The total cost associated with a specific job, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `job.shopCharge`  |   The charge associated with shop supplies or services, formatted as a numeric value up to two decimal places (e.g., "12.56"). |  
|  `job.complaintCode`  |  A code representing the type or category of the customer's complaint. |   
|  `job.addOnLine`  |  Indicates additional labor or services added to the repair order, with preferred allowed values being Y/N | 
|  `job.partsFlag`  |  |  
|  `job.dispatchEstimatedDuration`  |   Type of labor performed. Perferred allowed values are C/W/I |  
|  `job.comeBackFlag`  |    Indicates whether the repair order is a comeback, typically represented as a boolean value (e.g., "true" or "false")./ ("Y" , "N") |    
|  `job.laborSale`  |  Sale amount for the labor.(Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `job.soldHours`  |  Number of hours sold for the job. | 
|  `job.actualHours`  |  Actual hours spent on the job. | 
|  `job.partsSale`  |  Sale amount for parts used in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) | 
|  `job.miscSale`  |  Sale amount for miscellaneous items in the job. (Only numerics alowed upto 2 decimal places like "12.56" ) |  
|  `job.bookerNo`  | Booker number for the job.   | 
|  `job.dispatchLineStatus`  | Status of the dispatch line.  |  
|  `job.techNo`  | Identifier for the technician in the DMS who performed the job.   |  
|  `job.campaignCode`  | Code for any applicable campaign.   |  


### Estimate Information

| Parameter Name | Description | 
| ---         |   --- |    
|  `estimate.laborEstimate`  | The estimated cost of labor for the job , formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `estimate.partsEstimate`  | The estimated cost of parts for the repair order, formatted as a numeric value up to two decimal places.  | 
|  `estimate.serviceEstimate`  | The estimated cost of services for the repair order, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `estimate.taxEstimate`  |  The estimated tax amount for the repair order, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `estimate.lubeEstimate`  |  The estimated cost of lubricants for the repair order, formatted as a numeric value up to two decimal places (e.g., "12.56").  |
|  `estimate.miscEstimate`  |  The estimated cost of miscellaneous items for the repair order, formatted as a numeric value up to two decimal places (e.g., "12.56").  |
|  `estimate.subletEstimate`  |  The estimated cost of sublet services for the repair order, formatted as a numeric value up to two decimal places (e.g., "12.56").  |  


### Parts Information

| Parameter Name | Description | 
| ---         |   --- |    
|  `part.partNumber`  |   Number identifying the part.  | 
|  `part.description`  |   Description of the part. | 
|  `part.seqNo`  |   Sequence number for the part. |  
|  `part.quantityOrdered`  |   Quantity of the part ordered. | 
|  `part.quantitySold`  |   Quantity of the part sold. | 
|  `part.quantityShipped`  |   Quantity of the part shipped. | 
|  `part.quantityAvailable`  |   Quantity of the part available. | 
|  `part.listPrice`  |    The manufacturer's suggested retail price (MSRP) for the part, formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `part.extendedSalePrice`  |   The total sale amount for the part, calculated by multiplying the sale price by the quantity sold, formatted as a numeric value up to two decimal places. | 
|  `part.source`  |   The origin or supplier of the part, indicating where it was obtained or purchased from. | 
|  `part.partSaleJournal`  |  A record of the sales transactions for the part, typically used for tracking and accounting purposes.  | 
|  `part.partSaleCompany`  |    The company responsible for the sale of the part, typically used for accounting and inventory management purposes. | 
|  `part.specStatus`      | The status indicating the specifications or condition of the part, typically used for inventory management and tracking. |
|  `part.partCoreAccount`  |    An account used to track the core charge associated with the part, typically related to the return of a used part for credit. | 
|  `part.partSaleAccount`  |   An account used to record the sales transactions of the part, typically for accounting and inventory management purposes. | 
|  `part.mcdPartsPercentage`  |  The percentage of the part's cost that is covered under the manufacturer's core deposit program, typically represented as a numeric value. | 
|  `part.binNumber`  |   The location identifier for the part within the inventory storage system, used for efficient tracking and retrieval. | 
|  `part.unitServiceCharge`  |  The charge associated with the service provided for the part, typically formatted as a numeric value up to two decimal places (e.g., "12.56"). | 
|  `part.mfrCode`  |   The manufacturer's code associated with the part, used for identification and tracking purposes. |
|  `part.includesCoreFlag`  |   Indicates whether the part includes a core charge, typically represented as a boolean value (e.g., "true" or "false"). |
|  `part.cost`  |   Cost of the part. |  
|  `part.salePrice`  | Sale price of the part. |  
|  `part.saleTotal`  |  Total sale amount for the part. |  
|  `part.laborType`  |  Type of labor associated with the part. |  


### GOG Information

| Parameter Name | Description | 
| ---         |   --- |   
|  `gog.itemType`  |   Type of item in the GOG.  | 
|  `gog.itemDescription`  |   Description of the item. | 
|  `gog.jobNumber`  |  Job number associated with the item. | 
|  `gog.quantity`  |   Quantity of the item. | 
|  `gog.saleTotal`  |   Total sale amount for the item. | 
|  `gog.salePrice`  |   Sale price of the item. | 
|  `gog.salePrice`  | Sale price of the item. | 
|  `gog.laborType`  | Type of labor associated with the item. | 


### Tech Hours

| Parameter Name | Description | 
| ---         |   --- |    
|  `tech.techNo`  |  Identifier for the technician in the DMS who performed the job.   | 
|  `tech.techUuid`  |  Identifier for the technician in the myKaarma who performed the job.   |
|  `tech.mcdLaborPercentage`  | The percentage of labor costs covered under the manufacturer's core deposit program, typically represented as a numeric value.   |
|  `tech.timeCardHours`  |  The total hours recorded for the technician's work on the job, typically represented as a numeric value.   |
|  `tech.partSeqNo`  |  Sequence number for the part, used to identify the order of parts in the repair order. | 
|  `tech.laborCost`  | Cost of labor for the technician. | 
|  `tech.laborSale`  |  Sale amount for the labor. | 
|  `tech.soldHours`  |  Number of hours sold for the technician's work. | 
|  `tech.otherHours`  |   Additional hours associated with the technician's work. | 
|  `tech.laborType`  |   Type of labor performed by the technician. |  

### Comments

| Parameter Name | Description | 
| ---         |   --- |   
|  `comments.comment`  |  Text of the comment.  | 
|  `comments.lastUpdatedBy`  |  Identifier for the person who last updated the comment. | 
|  `comments.updateDate`  |  Date when the comment was last updated. yyyy-MM-dd format UTC timezone | 
|  `comments.updateTime`  |  Time when the comment was last updated. HH:mm:ss format UTC timezone | 

### Complaint cause correction

| Parameter Name | Description | 
| ---         |   --- |   
|  `ccc.complaint`  |  Description of the customer's complaint.  | 
|  `ccc.complaintCode`  | Code for the complaint. | 
|  `ccc.cause`  |  Cause of the job. | 
|  `ccc.correction`  |  Correction made to address the complaint. | 

### MLS Information

| Parameter Name | Description | 
| ---         |   --- |    
|  `mls.laborType`  |   Type of labor in the MLS.  | 
|  `mls.opCode`  | Operation code in the MLS. | 
|  `mls.opCodeDesc`  |  Description of the operation code. | 
|  `mls.failureCode`  |  Code for any failure. | 
|  `mls.salePrice`  |  Sale price in the MLS..  | 
|  `mls.costPrice`  | Cost price in the MLS. | 
|  `mls.saleCompany`  |  Company responsible for the sale. | 
|  `mls.sourceCompany`  |   Company that sourced the item. | 
|  `mls.lineCode`  |  Code for the line item. | 
|  `mls.poNumber`  |  Purchase order number. | 
|  `mls.poCreateDate`  |  Date when the purchase order was created. | 
|  `mls.poLineID`  |  Line ID for the purchase order. | 
|  `mls.mlsType`  |  Type of MLS entry. | 
|  `mls.debitAccount`  |   The account used to record debits associated with the transaction, typically for accounting purposes. | 
|  `mls.debitCompany`  |  The company associated with the debit transaction, typically used for accounting and financial tracking. | 
|  `mls.debitControl`  |  The type of control associated with the debit transaction, typically used for accounting purposes. | 
|  `mls.feeID`  |  A unique identifier for the fee associated with the transaction, used for tracking and accounting purposes. | 
|  `mls.saleAccount`  |  An account used to record the sales transactions associated with the repair order, typically for accounting and inventory management purposes. | 
|  `mls.saleControl`  |  The type of control associated with the sale transaction, typically used for accounting purposes. | 



### Order Status &  DMS Status Information


| Status Name | Description | 
| ---         |   --- |    
|  `O`  | OPEN - The repair order is currently active and work is ongoing.  |
| `P` | PRE_INVOICED - The repair order is in the final review stage before billing. |
| `C` | CLOSED - The repair order is completed and all services have been finalized. |

### Important Note

Order status and dmsStatus can have different values over the complete lifecycle of a Service order.

---

// File: our-products/integration/order/how-to-create-a-parts-order

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can create a Parts Order for the Parts Department. The endpoint enables users to submit a new repair order with various parameters like `orderDate, closeDate, orderNumber, etc.`. The created order will contain all the relevant order information.
To use this endpoint, you first need your credentials. If you don't already have them, head over to the <AuthPageLink/> page to see how you can request credentials from us.
The endpoint mentioned below can assist you in creating a Repair Order with customized parameters :-


## Parameters Used


###  Path parameters

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes |

### Authorization

| Parameter Name  |  Description  | Required
| --- |  --- | ---|
|  `{{basic_auth_token}}`  |  Authorization: Base64 encoded string using Service Subscriber Username and password  |  Yes  | 


### Scope

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `order.create` | `DealerDepartment` | Authorizes client to create  parts order for provided user's dealer department |



## Endpoint

```shell
curl -X PUT "https://api.mykaarma.com/order/v2/department/{{departmentUUID}}/order/"
-H "authorization: {{basic_auth_token}}"
-d '{
    "order":{
      "type":"RO",
      "header":{
         "orderNumber":"string",
         "serviceAccount":"string",
         "accountingAccount":"string",
         "status":"string",
         "deptType":"string",
         "advisorNumber":"string",
         "advisorName":"string",
         "assignedUserUuid":"string",
         "creatorUserUuid":"string",
         "appointmentNumber":"string",
         "tagNumber":"string",
         "mileageIn":"string",
         "mileageOut":"string",
         "createDate":"string",
         "createTime":"string",
         "promisedDate":"string",
         "promisedTime":"string",
         "voidDate":"string",
         "closeDate":"string",
         "closeTime":"string",
         "waiter":"string",
         "rental":"string",
         "soldHours":"string",
         "actualHours":"string",
         "laborCost":"string",
         "laborSale":"string",
         "laborSaleCustomer":"string",
         "laborSaleInternal":"string",
         "laborSaleWarranty":"string",
         "partsCost":"string",
         "partsCostCustomer":"string",
         "partsCostInternal":"string",
         "partsCostWarranty":"string",
         "partsSale":"string",
         "partsSaleCustomer":"string",
         "partsSaleInternal":"string",
         "partsSaleWarranty":"string",
         "lubeSale":"string",
         "lubeSaleCustomer":"string",
         "lubeSaleInternal":"string",
         "lubeSaleWarranty":"string",
         "miscSale":"string",
         "miscSaleCustomer":"string",
         "miscSaleInternal":"string",
         "miscSaleWarranty":"string",
         "subletSale":"string",
         "subletSaleCustomer":"string",
         "subletSaleInternal":"string",
         "subletSaleWarranty":"string",
         "customerPayAmount":"string",
         "customerPayStateTax":"string",
         "internalPayAmount":"string",
         "warrantyPayAmount":"string",
         "description":"string"
      },
      "vehicle":{
         "uuid":"string",
         "vin":"string",
         "make":"string",
         "model":"string",
      },
      "customer":{
         "uuid":"string",
         "firstName":"string",
         "lastName":"string"
      },
      "parts" :[
        {
            "partNumber": "string",
            "description": "string",
            "seqNo": "string",
            "quantityOrdered": "string",
            "quantitySold": "string",
            "cost": "string",
            "salePrice": "string",
            "saleTotal": "string",
            "laborType": "string"
        }
      ]
    }
}'
```

## Response
```json

{
  "errors": [
    {
      "errorCode": "string",
      "errorDescription": "string",
      "errorUID": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "orderUUID": "string",
  "statusCode": "Integer"
}

```

## Request Body

### Order Details

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `type`  |  "RO" for service/repair order |  Yes  | 
|  `orderNumber`  | Unique identifier for the order.  | Yes  | 
|  `serviceAccount`  |  Account associated with the service. | No |
|  `accountingAccount`  |  Account used for accounting purposes. | No | 
|  `status`  |  Current status of the order . | Yes ( allowed values are "OPENED" , "PRE-INVOICED", "CLOSED" ) | 
|  `deptType`  |  Type of department handling the order. | No | 
|  `advisorNumber`  |  Identifier for the service advisor in the DMS to which RO is being assigned . | Yes | 
|  `advisorName`  |  Name of the service advisor. | No | 
|  `assignedUserUuid`  | Unique token issued by mykaarma of the dealer associate to which RO is being assigned | No ( Required Only if advisorNumber is blank ) | 
|  `creatorUserUuid`  |  Unique token issued by mykaarma of the dealer associate which is creating the RO. | No ( Required Only if advisorNumber is blank ) | 
|  `appointmentNumber`  |  Appointment Number (generated in the DMS) associated with RO . | No | 
|  `tagNumber`  |  Identifier for the vehicle tag. | No | 
|  `mileageIn`  |  Mileage of the vehicle when it arrived.| No | 
|  `mileageOut `  |   Mileage of the vehicle when it left. | No | 
|  `createDate`  |  Date when the order was created. yyyy-MM-dd format in UTC timezone  | Yes | 
|  `orderTime`  | Time when the order was created. HH:mm:ss in UTC timezone | Yes  | 
|  `promisedDate`  |  Date by which the service is promised to be completed. yyyy-MM-dd format in UTC timezone  | No | 
|  `promisedTime`  |  Time by which the service is promised to be completed. HH:mm:ss format in UTC timezone | No | 
|  `voidDate`  |  Date when the order was voided. yyyy-MM-dd HH:mm:ss format | No | 
|  `closeDate`  | Date when the order was closed. yyyy-MM-dd format in UTC timezone | No | 
|  `closeTime`  |  Time when the order was closed. HH:mm:ss format  | No | 
|  `waiter`  |  Indicates if the customer is waiting for the service. "Y/N" | No | 
|  `rental`  |  Indicates if a rental vehicle is provided. "Y/N" | No | 
|  `soldHours`  | Number of hours sold for the service. | No | 
|  `actualHours`  |  Actual hours spent on the service. | No | 
|  `laborCost`  |  Cost of labor for the service. (Only numerics alowed upto 2 decimal places like "12.56" ) | No | 
|  `laborSale`  | Sale amount for labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleCustomer`  | Sale amount for labor charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleInternal`  | Sale amount for internal labor. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `laborSaleWarranty`  | Sale amount for labor under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCost`  | Cost of parts used in the service. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostCustomer`  | Cost of parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostInternal`  | Cost of parts for internal use. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsCostWarranty`  | Cost of parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSale`  | Sale amount for parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleCustomer`  | Sale amount for parts charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleInternal`  | Sale amount for internal parts. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `partsSaleWarranty`  | Sale amount for parts under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSale`  | Sale amount for lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleCustomer`  | Sale amount for lubricants charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleInternal`  | Sale amount for internal lubricants. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `lubeSaleWarranty`  | Sale amount for lubricants under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSale`  | Sale amount for miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleCustomer`  | Sale amount for miscellaneous items charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleInternal`  | Sale amount for internal miscellaneous items. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `miscSaleWarranty`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSale`  | Sale amount for miscellaneous items under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleCustomer`  | Sale amount for sublet services charged to the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleInternal`  | Sale amount for internal sublet services. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `subletSaleWarranty`  | Sale amount for sublet services under warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayAmount`  | Total amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `customerPayStateTax`  | State tax amount payable by the customer. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `internalPayAmount`  | Total internal charges. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `warrantyPayAmount`  | Total amount covered by warranty. (Only numerics alowed upto 2 decimal places like "12.56" ) |  No | 
|  `description`  | Description of the order. |  No | 

### Vehicle Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `vehicle.uuid`  | Unique identifier issued by mykaarma for the vehicle for which the order is being created. |  No | 
|  `vehicle.vin`  | Vehicle Identification Number for the vehicle for which the order is being created .  |  No | 
|  `vehicle.make`  | Manufacturer of the vehicle the order is being created.  |  No | 
|  `vehicle.model`  |  Model of the vehicle.  |  No | 

### Customer Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `customer.uuid`  |  Unique identifier issued by mykaarma for the customer for which the order is being created.  |  Yes | 
|  `customer.firstName`  |  First name of the customer.  |  No | 
|  `customer.lastName`  |  Last name of the customer.  |  No | 


### Parts Information

| Parameter Name | Description | Required |
| ---         |   --- |    --- | 
|  `part.partNumber`  |   Number identifying the part.  |  Yes | 
|  `part.description`  |   Description of the part. |  No | 
|  `part.seqNo`  |   Sequence number for the part. |  No | 
|  `part.quantityOrdered`  |   Quantity of the part ordered. |  No | 
|  `part.quantitySold`  |   Quantity of the part sold. |  No |
|  `part.cost`  |   Cost of the part. |  No |
|  `part.salePrice`  | Sale price of the part. |  No |
|  `part.saleTotal`  |  Total sale amount for the part. |  No |
|  `part.laborType`  |  Type of labor associated with the part. |  No |



## Response Object Explanation 

`{{orderUUID}}`  uuid of the order which was created/updated .

`{{errors}}`   An array of error objects detailing issues encountered during order creation or update.

`{{warnings}}` An array of warning objects providing non-critical alerts encountered during customer creation or update.

`{{errors.errorCode}}`   Code indicating the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible error codes.

`{{errors.errorTitle}}`   Title describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for detailed descriptions.

`{{errors.errorDescription}}`  Detailed message describing the specific error encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.

`{{warnings.warningCode}}`  Code indicating the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for a list of possible warning codes.

`{{warnings.warningDescription}}`  Detailed message describing the specific warning encountered during order creation or update; refer to the [API reference](./api-reference.mdx) for more information.

---

// File: our-products/integration/order/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const OrderApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.orderApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<OrderApiSwagger />

---

// File: our-products/integration/order/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage orders in myKaarma. Order can be of many types: Service, Parts, Sales, Finance etc. Order is the collection of multiple lines which can be collectively associated to a Vehicle or a Customer. This guide can be referred as help in following operations:
<DocCardList />

---

// File: our-products/payments/intro

The myKaarma payments module contains a set of RESTful APIs which are used to handle payments at a dealership or dealer group. These are public APIs that any third party application can use to integrate payments into their software.

---

// File: our-products/payments/API/online-payment-url

# Online Payment URL
myKaarma enables dealers to take online payments from customers using PayIsland. In order use payIsland, you need to generate a Payment URL and sent it to the customer. 
The generated payment URL is public and will not require any authentication. 

Use the following endpoint to generate and send a Payment URL to the customer: 

```
POST /v3/department/{serviceSubscriberDepartmentToken}/url
```

### Authentication
Basic authentication is used to authenticate the request. 

### Resource Path Parameters
This endpoint has only one parameter in the URL, `serviceSubscriberDepartmentToken`. This is the department UUID of the dealership for which you are taking the payment.

### Request
<table>
<tr>
  <th>Variable Name</th>
  <th>Description</th>
</tr>
<tr>
  <td>clientSideRedirectUrl</td>
  <td>URL to which the user will be redirected once the transaction is complete.</td> 
</tr>
<tr>
  <td>cssRef</td>
  <td>Link of the myKaarma skin which will be applied to the online payment page.</td> 
</tr>
<tr>
  <td>customerIdentifiers</td>
  <td>It contains details about the customer such as name, phone numbers, emails, customerID, etc.</td> 
</tr>
<tr>
  <td>dealerAssociateIdentifier</td>
  <td>It cointains details about the dealer associate such as name, email and dealerAssociate ID.</td> 
</tr>
<tr>
  <td>paymentDetails</td>
  <td>It contains details about the payment such as amount, invoice URL, payment type (auth or sale), payment description, etc.</td> 
</tr>
<tr>
  <td>saveCard</td>
  <td>Set this to true in order to tokenize and save the card.</td> 
</tr>
<tr>
  <td>ttl (Time-to-live)</td>
  <td>Life of the payment URL in milliseconds.</td> 
</tr>
<tr>
  <td>webHookUrl</td>
  <td>Webhook URL to hit after the payment is complete.</td> 
</tr>
</table>

### Response
<table>
<tr>
  <th>Variable Name</th>
  <th>Description</th>
</tr>
<tr>
  <td>customerId</td>
  <td>Customer ID for which the payment URL was generated.</td> 
</tr>
<tr>
  <td>invoiceId</td>
  <td>Invoice ID of the payment.</td> 
</tr>
<tr>
  <td>paymentUrl</td>
  <td>The Payisland URL which was sent to the customer.</td> 
</tr>
</table>


### Request Object
```
{
  "address": {
    "zipCode": "string"
  },
  "clientSideRedirectUrl": "string",
  "cssRef": "string",
  "customerIdentifiers": {
    "bestTimeToContact": {
      "endTime": "string",
      "startTime": "string"
    },
    "campaignId": "string",
    "customerId": "string",
    "customerKey": "string",
    "emails": [
      {
        "emailAddress": "string",
        "isPreferred": true,
        "label": "string",
        "okToEmail": true
      }
    ],
    "firstName": "string",
    "lastName": "string",
    "phoneNumbers": [
      {
        "isPreferred": true,
        "label": "string",
        "okToCall": true,
        "okToText": true,
        "phoneNumber": "string"
      }
    ],
    "preferredCommunication": "string"
  },
  "dealerAssociateIdentifier": {
    "dealerAssociateEmail": "string",
    "dealerAssociateFirstName": "string",
    "dealerAssociateId": "string",
    "dealerAssociateLastName": "string"
  },
  "flags": {
    "footerToAdd": true,
    "useMyKaarmaEmailPaymentRequest": true,
    "useMyKaarmaEmailReceipt": true,
    "useMyKaarmaTextPaymentReceipt": true,
    "useMyKaarmaTextPaymentRequest": true
  },
  "language": "string",
  "orderRef": "string",
  "paymentDetails": {
    "additionalCharges": [
      {
        "additionalChargeAmount": 0,
        "additionalChargeDescription": "string"
      }
    ],
    "amount": 0,
    "currency": "string",
    "invoiceUrl": "string",
    "paymentDescription": "string",
    "paymentReceiptFormat": "string",
    "paymentType": "string",
    "preAuth": "string",
    "processedFor": "string",
    "requireSignature": "string",
    "retryCount": 0,
    "signatureCoordinates": {
      "height": 0,
      "pageNumber": 0,
      "width": 0,
      "x": 0,
      "y": 0
    },
    "verifyAVS": true,
    "verifyZipCode": true
  },
  "saveCard": true,
  "ttl": 0,
  "webHookUrl": "string"
}
```

### Response Object
```
{
  "customerId": "string",
  "error": {
    "errorCode": "string",
    "errorDescription": "string"
  },
  "invoiceId": "string",
  "paymentUrl": "string",
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}

```

---

// File: our-products/payments/API/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const PaymentApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.paymentApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<PaymentApiSwagger />

---

// File: our-products/payments/API/index

import DocCardList from '@theme/DocCardList';

# Payment API
  
Payment API hosts core payment endpoints. Using this API you can do following things: 

* Void, Capture and Refund transactions
* Make payment using a tokenized card
* Search Invoice
* Get signed invoice URLs And vehicle details
* Get payment status
* Generate online payment request URL 
* Get esigned invoices
* Manage provision status

BASE URL
```
https://api.mykaarma.com/payment
```

<DocCardList />

---

// File: our-products/payments/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/reporting/intro

The myKaarma reporting module contains a set of RESTful APIs which are used to view reporting data for a dealership or dealer group.

---

// File: our-products/reporting/drilldown

This guide describes how you can get drilldown data for our products. (This is the raw data that is used for calculating the metrics that appear in the Dealer Stats API)

### Common fields in the Drilldown APIs
* startDate:
  * Start date of the data. (`MM/dd/yyyy`)

* endDate:
  * End date of the data. (`MM/dd/yyyy`)

* dealerUUIDs:
  * List of dealer UUIDs for which data is needed.

* daUUID (optional):
  * UUID of dealer associate, if you want the drilldown data for a specific user.

* departmentFilter:
  * List of departments for which data is needed. If you do not want to filter by department, provide ALL.  
  * **Possible values:** ALL, NA, Service, Parts, Body Shop, Sales, Loaner, Management, Rental Cars, F&I, Admin, Finance.

* orderTypeFilter:
  * List of order types for which data is needed. If you do not want to filter by order type, provide ALL.  
  * **Possible values:** ALL, NA, RO, SO, BO, LO, PO, FO.

* brandNameFilter:
  * List of brand names for which data is needed. If you do not want to filter by brand name, provide ALL.  
  * **Possible values:** ALL, NA, UNKNOWNBRAND, Brand names (Audi, BMW, etc.).

* cpValueFilter:
  * List of CP values for which data is needed. If you do not want to filter by CP value, provide ALL.  
  * **Possible values:** ALL, NA, 0, 1-1000, 1001-2000, 2001-3000, 3001-4000, 4001-5000, 5001-6000, 6001-7000, 7000+

* payTypeFilter:
  * List of pay types for which data is needed. If you do not want to filter by pay type, provide ALL.  
  * **Possible values:** ALL, NA, Customer, Warranty, Internal

Let us now look at the individual drilldown APIs for our products:

### Get appointment drill down data

Apart from the common fields mentioned above, there are some specific fields you need to mention for getting appointment drilldown data.

* tableView
  * Use this option to decide whether to use createdDate or ScheduledDate for fetching the data.
  * **Possible values:** byScheduledDate, byCreatedDate

* apptCreateCategory (optional)
  * Use this option to filter appointments created from a specific source. This is only applicable when fetching appointments data for a dealer associate.
  * **Possible values:** NA, DealerApp, Online Scheduler, DMS

#### Example cURL:
```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/appointmentDrillDown?startDate={{startDate}}&endDate={{endDate}}&dealerUUIDs={{dealerUUIDs}}&tableView=byScheduledDate&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: REDACTED"
```


### Get communication drill down data

#### Example cURL:

```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/communicationDrillDown?startDate={{startDate}}&endDate={{endDate}}&dealerUUIDs={{dealerUUIDs}}&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: REDACTED"
```

### Get inspection drill down data

Apart from the common fields mentioned above, there are some specific fields you need to mention for getting inspection drilldown data.

* view
  * The drill down view type.
  * **Possible values:** orderCreatorView, technicianView

* videoInspectionType
  * **Possible values:**
    * tv: Only video walkarounds data
    * sc: Only Service cart inspections data
    * tvsc: Both service cart and video walkarounds inspections data

* isOpCodeDrillDown
  * Setting this parameter true will return orders that have been excluded via op codes in dealer level, otherwise will return all other orders.
  * **Possible values:** true, false

#### Example cURL:

```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/inspectionDrillDown?view=orderCreatorView&videoInspectionType=tvsc&startDate={{startDate}}&endDate={{endDate}}&isOpCodeDrillDown=false&dealerUUIDs={{dealerUUIDs}}&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: Basic REDACTED"
```

### Get payments drill down data

#### Example cURL:

```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/paymentsDrillDown?startDate={{startDate}}&endDate={{endDate}}&dealerUUIDs={{dealerUUIDs}}&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: REDACTED"
```

### Get Pickup and Delivery drill down data
Apart from the common fields mentioned above, there are some specific fields you need to mention for getting Pickup and Delivery drilldown data.

* view
  * The drill down view type.
  * **Possible values:** orderCreatorView, tripCreatorView, driverView

#### Example cURL:

```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/pickupDeliveryDrillDown?view=driverView&startDate={{startDate}}&endDate={{endDate}}&dealerUUIDs={{dealerUUIDs}}&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: REDACTED"
```

### Get Service Cart drill down data
Apart from the common fields mentioned above, there are some specific fields you need to mention for getting Service Cart drilldown data.

* view
  * The drill down view type.
  * **Possible values:** orderCreatorView, technicianView

* isOpCodeDrillDown
  * Setting this parameter true will return orders that have been excluded via op codes in dealer level, otherwise will return all other orders.
  * **Possible values:** true, false

#### Example cURL:

```curl
curl -X \
 POST "https://api.mykaarma.com/reporting/v2/serviceCartDrillDown?view=orderCreatorView&startDate={{startDate}}&endDate={{endDate}}&isOpCodeDrillDown=false&dealerUUIDs={{dealerUUIDs}}&departmentFilter=ALL&orderTypeFilter=ALL&brandNameFilter=ALL&cpValueFilter=ALL&payTypeFilter=ALL" -H \
 "accept: application/json" -H \
 "Authorization: REDACTED"
```

---

// File: our-products/reporting/dealer-stats/categories-and-filters

# Categories and Filters
Before using our Dealer Stats API it is important to understand that we process dealership data at the end of every day. For each product that myKaarma offers we aggregate the data to calculate sums, averages, percentages, time durations, and other metrics for several different categories. The categories can then be used to select and or filter metrics on multiple dimensions with our API endpoints. Those main catergories are:

* Date
* DealerUUID
* DealerAssociateUUID
* Department
* OrderType
* Brand
* PayType
* CPAmountRange

### Date
Date is one of the most important categories. Obviously, all data is categorized by a date and this allows us to filter it by a date range. What is not so obivous is that in most cases this date value is based on the **Closed Date** of an **Order**. For some products that may not have an order context this value may be based on another value. For example, with **Appointment** data before an RO is created, this can be either the **Appointment Created Date** or the **Scheduled Date**. Or in cases such as **Pickup and Delivery** this can be the **Trip Date**. The format for this date will always be `MM/dd/yyyy`.

### DealerUUID
All data is categorized by the dealership the data belongs to. This is the dealership's universally unique identifier. When you sign up to use our APIs you will be given the UUID for each dealer you are associated with.

### DealerAssocaiteUUID
All data is categorized by individual dealer associates/employees that are properly configured in myKaarma. This allows us to select or filter data for specific associates based on their universally unique identifier. For example, to fetch the total number of orders closed by a specific service advisor, at a specific dealership, in a given date range.

### Department
All data is categorized by the department as well. This, for example, allows us to filter out metrics from the parts department when we are only interested in service department metrics. Here are the accepted values:

* NA
* Service
* Parts
* Body Shop
* Sales
* Loaner
* Management
* Rental Cars
* F&I
* Admin
* Finance

### OrderType
If the data you seek has an order context it will be categorized by the order type. If there is no order context then it is still categorized by order type but with the value of NA. Here are the accepted values:

* NA *(Not Applicable)*
* RO *(Repair Order)*
* PO *(Parts Order)*
* BO *(Body Shop Order)*
* SO *(Sales Order)*
* LO *(Loaner Order)*
* FO *(Finance Order)*

### Brand
If the data has an order context, and the order has a vehicle context, the data will be categorized by the brand of the vehicle. This covers almost every brand in the world. There are too many values to list here.

### PayType
If the data has an order context, the data will be categorized by the pay type of the order. The accepted values are:

* NA
* Customer
* Warranty
* Internal

### CPAmountRange
If the data has an order context, the data will be categorized by the *Customer Pay* dollar amount. This category is divided into several ranges. For example, if a repair order has a customer pay amount of $2,500 then it will fall into the `2001-3000` range. This category can have the following values:

* NA
* 0
* 1-1000
* 1001-2000
* 2001-3000
* 3001-4000
* 4001-5000
* 5001-6000
* 6001-7000
* 7000+

In the next section of this guide you will see how these categories can be used with our metrics and calculated columns to filter and extract the reporting data you need from our APIs.

---

// File: our-products/reporting/dealer-stats/index

import DocCardList from '@theme/DocCardList';

This guide describes how we store aggregate data for each dealership in our data warehouse, and how you can access that data with our Dealer Stats API endpoints.
<DocCardList />

---

// File: our-products/reporting/dealer-stats/product-metrics-and-columns

# Product Metrics and Columns
For each of the myKaarma products we have a collection of metrics and calculated columns that you can request from our API. We are always adding new metrics and columns along with new products, and we are open to suggestions if you would like us to add more. You can see a list of many metrics within our Insights -> Advanced Search tool as well. 

Now that you are familiar with the categories mentioned in the previous section, here is a simple example to help visualize them along with product metrics. Below you will see data from date `01/01/2023` for `Dealer1` that only has two service advisors, `User1` and `User2`. On the right side you can see we requested two metrics, `ROCount` and `TotalTexts`.

<table id="candf_example_table">
    <tr>
        <th colspan="8">Categories</th>
        <th colspan="2">Product Metrics</th>
    </tr>
    <tr>
        <th>Date</th>
        <th>DealerUUID</th>
        <th>DealerAssociateUUID</th>
        <th>Department</th>
        <th>OrderType</th>
        <th>Brand</th>
        <th>PayType</th>
        <th>CPAmountRange</th>
        <th>ROCount</th>
        <th>TotalTexts</th>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer</td>
        <td>1001-2000</td>
        <td>2</td>
        <td>5</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>MINI</td>
        <td>Customer</td>
        <td>1-1000</td>
        <td>1</td>
        <td>4</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User2</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer,Warranty</td>
        <td>2001-3000</td>
        <td>1</td>
        <td>6</td>
    </tr>
</table>

 In the data above you can see that `User1` has a total `ROCount` of `3`. You can also see that `2` of the ROs from `User1` were for a `BMW` brand vehicle and both had a final `CPAmountRange` value between `1001-2000`. You can also see that `User1` had `1` RO for a `MINI` brand vehicle on the same date. `User1` made a total of `9` text messages. Currently we have to calculate the totals manually because we didn't request a `GroupBy` which you will read about in the next section.

With this example you can imagine what would happen if we requested a `CPAmountRange` filter with `1-1000`. We would get only a single record from `User1` and it would be a single RO with a vehicle brand `MINI`. 

### Calculated Columns
You can also request calculated columns, for example percentages and averages. They are metrics which are precalculated on the server side. Here is an example request result for the calculated column `OnlinePaymentIndex`. I also added `PaidROs` and `OnlinePayments` which are the two metrics used to calculate `OnlinePaymentIndex`. They are not needed and only added here for clarity. 

<table id="candf_example_table">
    <tr>
        <th colspan="8">Categories</th>
        <th colspan="3">Product Metrics</th>
    </tr>
    <tr>
        <th>Date</th>
        <th>DealerUUID</th>
        <th>DealerAssociateUUID</th>
        <th>Department</th>
        <th>OrderType</th>
        <th>Brand</th>
        <th>PayType</th>
        <th>CPAmountRange</th>
        <th>OnlinePaymentIndex</th>
        <th>OnlinePayments</th>
        <th>PaidROs</th>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer</td>
        <td>1001-2000</td>
        <td>50</td>
        <td>5</td>
        <td>10</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>MINI</td>
        <td>Customer</td>
        <td>1-1000</td>
        <td>100</td>
        <td>1</td>
        <td>1</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User2</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer,Warranty</td>
        <td>2001-3000</td>
        <td>0</td>
        <td>0</td>
        <td>1</td>
    </tr>
</table>

###### *NOTE: In a real-world API result we only return the metrics and columns that are requested. We don't always return the *Categories* as shown in the table examples above, that is just for visualization purposes.*

The calculated column `OnlinePaymentIndex` is a percentage equal to `ROUND((SUM(OnlinePayments)/SUM(PaidROs))*100,0)` in SQL that we run on the database. You can see for `User1` and all `BMW` vehicles with ROs in the `1001-2000` CP range the result is `50%` because `OnlinePaymets` is `5` and total `PaidROs` is `10`. This means `50%` were paid online.

What if you want to see the `OnlinePaymentIndex` for all of `User1`? This is where **GroupBys** come into play. You can read about them in the next section.

---

// File: our-products/reporting/dealer-stats/using-groupbys

# Using GroupBys
Now that you are familiar with product metrics and calculated columns and how they are divided into categories, we can discuss how `GroupBys` are used to group data together. In our Insights dashboards almost all of the table views are grouped by `DealerAssociateUUID`. This combines all the metrics in every category for each associate. We can also group by `DealerUUID` which will combine all the metrics in every category for each dealer (if you have access to multiple dealers). We do that in our Insights Group View. Here is a list of all the currently possible `GroupBy` values that you can pass to our Dealer Stats API:

* DealerUUID
* Dealer
* DealerName
* DealerAssociate
* DealerAssociateUUID
* UserName
* RoleName
* Department
* OrderType
* Monthyear_Date
* Date
* ApptCreateCategory
* Brand
* RoVolume
* AssociateDMSID

In our previous example we saw the following API result for `OnlinePaymentsIndex`, `OnlinePayments`, and `PaidROs` metrics:

<table id="candf_example_table">
    <tr>
        <th colspan="8">Categories</th>
        <th colspan="3">Product Metrics</th>
    </tr>
    <tr>
        <th>Date</th>
        <th>DealerUUID</th>
        <th>DealerAssociateUUID</th>
        <th>Department</th>
        <th>OrderType</th>
        <th>Brand</th>
        <th>PayType</th>
        <th>CPAmountRange</th>
        <th>OnlinePaymentIndex</th>
        <th>OnlinePayments</th>
        <th>PaidROs</th>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer</td>
        <td>1001-2000</td>
        <td>50</td>
        <td>5</td>
        <td>10</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>Service</td>
        <td>RO</td>
        <td>MINI</td>
        <td>Customer</td>
        <td>1-1000</td>
        <td>100</td>
        <td>1</td>
        <td>1</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User2</td>
        <td>Service</td>
        <td>RO</td>
        <td>BMW</td>
        <td>Customer,Warranty</td>
        <td>2001-3000</td>
        <td>0</td>
        <td>0</td>
        <td>1</td>
    </tr>
</table>

Since our data is divided by many categories it is almost always necessary to group by at least one category or column. In this case if we wanted the total `OnlinePaymentsIndex` for `User1` we could simply `GroupBy` the `DealerAssociateUUID` category. You will get a result like this:

<table id="candf_example_table">
    <tr>
        <th colspan="3">Categories</th>
        <th colspan="3">Product Metrics</th>
    </tr>
    <tr>
        <th>Date</th>
        <th>DealerUUID</th>
        <th>DealerAssociateUUID</th>
        <th>OnlinePaymentIndex</th>
        <th>OnlinePayments</th>
        <th>PaidROs</th>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User1</td>
        <td>55</td>
        <td>6</td>
        <td>11</td>
    </tr>
    <tr>
        <td>01/01/2023</td>
        <td>Dealer1</td>
        <td>User2</td>
        <td>0</td>
        <td>0</td>
        <td>1</td>
    </tr>
</table>

You can see that the two records for `User1` were grouped together which gave them `11` total `PaidROs`, `6` total `OnlinePayments`, which equals to rounded `OnlinePaymentIndex` total of `55%`. This would be the total for all departments, all order types, all brands, and all pay types and CP values because we didn't provide any filters in our example. If we were to provide a `Brand` filter for `BMW` in this example, and include our `DealerAssociateUUID` group by value, we would get `50%` for the `OnlinePaymentIndex`.

In our next section we will cover how to make the Dealer Stats API request.

---

// File: our-products/reporting/dealer-stats/how-to-get-dealer-stats

# How To Get Dealer Stats
In this section you will learn how to make an request to our Dealer Stats API with our `/data` endpoint. 

* **Parameters Used**:
1. `{{startDate}}` - Start date of data. (MM/dd/yyy)
2. `{{endDate}}` - End date of data. (MM/dd/yyy)
3. `{{dealerUUIDs}}` - List of DealerUUIDs to fetch data for, comma separated.
4. `{{columns}}` - List of columns/metrics to fetch, comma separated.
5. `{{groupbys}}` - List of groupby values to use, comma separated. Use with SUM columns which have a name that starts with sum_. Leave blank if you are not sure.
6. `{{orderbys}}` - List of orderbys to use, comma separated.
7. `{{columnFilters}}` - List of predefined data filters to use, comma separated.
8. `{{departmentFilter}}` - List of department categories to filter, comma separated. 
9. `{{orderTypeFilter}}` - List of order type categories to filter, comma separated.
10. `{{brandNameFilter}}` - List of brand categories to filter, comma separated.
11. `{{cpValueFilter}}` - List of customer pay range categories to filter, comma separated.
12. `{{payTypeFilter}}` - List of pay type categories to filter, comma separated.
13. `{{apptCreateCategory}}` - This is used to filter appointments data by their created source, comma separated.
14. `{{userFilter}}` - This is used to filter out predefined dealerAssocaites/users that shouldn't show up in the data.
15. `{{basic_auth_token}}` - Authorization: Basic "generate using username password".

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `report.api.query`

* **Endpoint**
```
curl --request POST 'https://api.mykaarma.com/reporting/v2/data' \
--header 'Authorization: Basic {{basic_auth_token}}' \
--form 'startDate=""' \
--form 'endDate=""' \
--form 'dealerUUIDs=""' \
--form 'columns=""' \
--form 'groupbys=""' \
--form 'columnFilters=""' \
--form 'departmentFilter=""' \
--form 'orderTypeFilter=""' \
--form 'brandNameFilter=""' \
--form 'payTypeFilter=""' \
--form 'cpValueFilter=""' \
--form 'userFilter=""' \
--form 'apptCreateCategory=""'
```

* **Response**
```
{
  "data": [
    {
      "column1": {},
      "column2": {},
      "column3": {}
    }
  ],
  "errorCode": "string",
  "errorDescription": "string"
}
```

---

// File: our-products/reporting/dealer-stats/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const ReportingApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.reportingApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<ReportingApiSwagger />

---

// File: our-products/reporting/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/scheduler/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/scheduler/intro

The myKaarma Scheduler module contains a set of RESTful APIs which are used in conjunction to manage everything related to scheduling appointments in mykaarma.

---

// File: our-products/scheduler/API/appointment-data-model

This is the data structure that you will receive every time you are trying to get appointments from our APIs or listening to our events.


## Summary of the fields.

| Parameter Name | Description |
| ---         |   --- |
|  `uuid`  |  Unique identifier used by mykaarma to uniquely identify each appointment |
|  `customerInformation.firstName`  |  FirstName of the customer of the appointment|
|  `customerInformation.lastName`  |  lastName of the customer of the appointment|
|  `customerInformation.company`  |  company name of the customer provided if the customer is a BUSINESS customer |
|  `customerInformation.isBusiness`  |  True if the customer is a business customer (by business customer, we mean the customer is a company or any business and not an individual) |
|  `customerInformation.customerKey`  |  Key or identifier of the customer in DMS  |
|  `customerInformation.confirmationPhone`  | Phone number of the customer where confirmation text to be sent |
|  `customerInformation.confirmationEmail`  | The email of the customer where confirmation email to be sent |
|  `customerInformation.custLocale`  |  The preferred language of the customer ex. 'en-us'|
|  `customerInformation.uuid`  |  Unique identifier of the customer in myKaarma |
|  `vehicleInformation.vehicleKey`  |  Unique identifier used by DMS to uniquely identify each vehicle, used by mykaarma to lookup vehicles in DMS databases for various purposes like updation, deletion, booking appointment etc.  |     
|  `vehicleInformation.uuid`  |  Unique identifier used by mykaarma in addition to `vehicles.id`, used for uniquely identifying vehicles over API calls(for read, write, update, delete purposes) without revealing their database id that is `vehicles.id`  |
|  `vehicleInformation.year`  |  the year when the vehicle was manufactured  |
|  `vehicleInformation.make`  |  the brand of the vehicle  |
|  `vehicleInformation.engine`  |  engine description of the vehicle  |
|  `vehicleInformation.trim`  |  trim description of the vehicle  |
|  `vehicleInformation.model`  |  model  of the vehicle  |
|  `vehicleInformation.vin`  |  VIN  of the vehicle  |
|  `vehicleInformation.isValid`  | Indicates whether the customer currently owns the vehicle.  |
|  `orderInformation.uuid`  |  UUID (unique identifier in myKaarma) of the repair order associated with this appointment  |
|  `orderInformation.orderNumber`  |  Number of the repair order associated with this appointment  |
|  `orderInformation.orderDate`  |  Date of the repair order associated with this appointment  |
|  `orderInformation.orderType`  | Type of the repair order associated with this appointment  |
|  `dealerUuid`  |  UUID (unique identifier in myKaarma) of the dealer  |
|  `assignedAdvisorUuid`  |  UUID (unique identifier in myKaarma) of the advisor to which appointment is assigned  |
|  `creatorAdvisorUuid`  |  UUID (unique identifier in myKaarma) of the advisor who created the appointment  |
|  `assignedAdvisorDmsDepartmentCode`  | Dispatch code in DMS of the advisor to whom appointment is assigned.  |
|  `date`  |  time stamp when appointment was created in YYYY-MM-DD HH:MM:SS format in PST timezone|
|  `preferredDate`  |  date of the appointment in YYYY-MM-DD format |
|  `startTime`  |  Start time of the appointment in YYYY-MM-DD HH:MM:SS format. This is dealership timezone. |
|  `endTime`  |  End time of the appointment in YYYY-MM-DD HH:MM:SS format. This is dealership timezone. |
|  `transportOption.uuid`  |  UUID (unique identifier in myKaarma) of the transport option associated to appointment|
|  `transportOption.altTransportation`  |  custom name of the transport option associated to appointment|
|  `transportOption.bookingId`  |  ID from third party if the loaner is booked in third party like TSD,etc.|
|  `transportOption.bookInThirdParty`  |  This would be true if loaner is booked in third party like TSD,etc.|
|  `transportOption.bookingStartDate`  |  Start date of the booking in third party like TSD, etc.|
|  `transportOption.bookingEndDate`  |  End date of the booking in third party like TSD, etc.|
|  `transportOption.bookingIsManual`  |  Is booking done manually in third party|
|  `transportOption.bookingIsValid`  |  Is booking in the third party valid?|
|  `transportOption.loanerSmartLink`  |  A link provided by third party to access loaner.|
|  `transportOption.transportation`  | name of the transport option associated to appointment|
|  `transportOption.subTransportOptionUuid`  |  UUID of the subtransport option associated to appointment like Loaner in PnD.|
|  `appointmentKey`  |  Key or identifier in DMS of the appointment|
|  `mileageText`  |  custom name of the transport option associated to appointment|
|  `recall`  |  recall associated to appointment|
|  `platform`  |  Platform from which appointment was created like dealer app, web scheduler, DMS, etc.|
|  `appointmentSource`  |  Source from which appointment was created like dealer, DMS, API ,etc.|
|  `status`  |  status (old and less details) of the appointment at this moment. Check bottom of this page for explanation|
|  `newStatus`  |  status (new and more detailed) of the appointment at this moment. Check bottom of this page for explanation|
|  `comments`  |  Notes from customer for this appointment|
|  `internalNotes`  |  Notes from dealership personel for this appointment|
|  `isCancelled`  | Is the appointment cancelled?|
|  `reminderCount`  |  Number of times the reminder has been sent for this appointment|
|  `serviceList` | A list of line items associated with the appointment|
|  `serviceList.uuid` | UUID of the opcode/service in this line item|
|  `serviceList.opCode` | Name of the opcode/service in this line item|
|  `serviceList.laborOpCode` | Unique code of the opcode/service in this line item|
|  `serviceList.description` | Description of the line item|
|  `serviceList.operationType` | What is the type of service. The default is OPCODE. It can be OPCODE, SERVICEMENU, SERVICEMOTORSMAINTENANCEMENU, SERVICEMOTORSLINEITEM, SERVICEMOTORSINDICATOR. |
|  `serviceList.laborTotal` | Total labor price of the opcode/service in this line item|
|  `serviceList.partsTotal` | Total parts price of the opcode/service in this line item|
|  `serviceList.shopFees` | Price of the shop of the opcode/service in this line item|
|  `serviceList.taxes` | Taxes to be applied for the opcode/service in this line item|
|  `serviceList.price` | Price of the line item|
|  `serviceList.isValid` | Whether the line item is valid or has been canceled|
|  `serviceList.payType` | What is the pay type of the line item, ex. Customer, Warranty, Internal, etc. |
|  `serviceList.sortOrder` | Defines at what place in the list will the line item show |
|  `serviceList.parentOpcodeUuid` | `String` | This is valid only for menus and not opcodes. The UUID of the opcode associated with the menu |
|  `serviceList.menuUuid` | This is valid only for menus and not opcodes. Unique identifier of the menu |
|  `serviceList.recallID` | ID of the recall associated with the line item |
|  `serviceList.durationInMins` | `String | The time opcode/service takes in mins |
|  `serviceList.isCustomConcern` | This tells whether the opcode/service is present at dealership or there is a custom request from customer |
|  `serviceList.isDealerAddedLine` | `String` | Is the line item added by dealership? |
|  `skillList` | A list of skills needed for the appointment|
|  `skillList.uuid` | UUID of the skill|
|  `skillList.name` | Name of the skill|
|  `skillList.dealerUuid` | UUID of the dealership associated with the skill|
|  `skillList.departmentUuid` | UUID of the department associated with the skill|
|  `skillList.operationList` | List of opcodes/services associated with the skill|
|  `skillList.isValid` | Whether skill is valid or not|
|  `appointmentCommunicationPreferences` | Preferences for communication like confirmation and reminder for the appointment|
|  `appointmentCommunicationPreferences.emailConfirmation` | Whether to send appointment confirmation email or not|
|  `appointmentCommunicationPreferences.textConfirmation` | Whether to send appointment confirmation text or not|
|  `appointmentCommunicationPreferences.emailReminder` | Whether to send appointment reminder email or not|
|  `appointmentCommunicationPreferences.textReminder` | Whether to send appointment reminder text or not|
|  `appointmentCommunicationPreferences.confirmationEmail` | Email to which confirmation has to be sent for the appointment|
|  `appointmentCommunicationPreferences.textConfirmation` | Phone number to which confirmation has to be sent for the appointment|
|  `appointmentCommunicationPreferences.sendCommunicationToDA` | Whether to send appointment communication copies to dealer associate|
|  `teamUuid`  |  UUID of the team associated with appointment|
|  `dispatchCode`  |  Dispatch code associated to appointment|
|  `customerVehicleInspectionId`  | ID of the vehicle inspection|
|  `sarmetaData.dmsMetaData.type`  |  Type of DMS event associated with this metaData - PUSH or PULL|
|  `sarmetaData.dmsMetaData.title`  |  What happened for this DMS event - SUCCESS or FAILURE|
|  `sarmetaData.dmsMetaData.description`  |  Detail of the DMS event|
|  `sarmetaData.dmsMetaData.vehicleUuid`  |  UUID of the vehicle|
|  `sarmetaData.dmsMetaData.dealerAssociateId`  |  UUID of the dealer associate|
|  `sarmetaData.appointmentData` | Key value pair map to store appointment metadata|

## Status and NewStatus explanation

**newStatus**

This table explains the different appointment statuses (values 'newStatus' field takes) used in myKaarma UI.

| Status Value                  | Description                                                                                          |
|--------------------------|------------------------------------------------------------------------------------------------------|
| **Cancelled**            | The appointment has been cancelled.                                                                 |
| **Failed**               | The appointment failed to push to DMS.                                                              |
| **Updated**              | Some parameter (other than time or date) of the appointment has been updated.                       |
| **Cancellation Requested** | On asking for confirmation through a reminder, the customer has requested to cancel the appointment. |
| **Confirmed**            | On asking for confirmation through a reminder, the customer has confirmed their attendance.        |
| **No Show**              | The customer didn’t show up for the appointment. This happens when the appointment time has ended and there is no RO for the customer. |
| **Reminder Sent**        | A reminder has been sent for the appointment to the customer.                                       |
| **Rescheduled**          | The customer has changed the time or date of the appointment.                                       |
| **Rescheduling Requested** | On asking for confirmation through a reminder, the customer has requested to reschedule the appointment. |
| **Scheduled**            | The appointment has been scheduled. This is the status when the appointment is created.             |
| **Show**                 | The customer showed up for the appointment, and an RO has been mapped to the appointment.           |


**status**

| Status Value | Meaning         | Description                                                               | Appointment Tile Color |
|-------------|----------------|---------------------------------------------------------------------------|------------------------|
| `R`        | Show           | Customer showed up and we have linked a repair order with the appointment. | 🟢 Green  |
| `RS`       | Probable Show  | A duplicate customer with similar customer details showed up.             | 🟠 Orange |
| `N`        | No Show        | No repair order found, so the customer has not shown up.                  | 🔴 Red    |
| `RM`       | Manual Show    | When Service Advisors manually mark an appointment as a show.             | 🟢 Green  |
| `NM`       | No Show Manual | When Service Advisors manually mark an appointment as a no-show.          | 🔴 Red    |

---

// File: our-products/scheduler/API/how-to-create-an-appointment

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how to create an appointment in myKaarma, what all parameters would you need, how to fetch them and then use them to best suit your use case.

You can create appointments in myKaarma for customer visits so that your Service Advisors are aware of their daily schedule and your customers could be notified/reminded for their scheduled visit.

To create an appointment, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

### Parameters

####  Path parameter:

Required path parameters for process : 

| Parameter Name  | Type | Description  |
| --- |  ---  | --- |
| `departmentUUID` | `string` | Unique identifier of dealer's department |
| `dealerUuid` | `String` | Unique identifier of dealer |


## Scope

This process requires the following authorization scopes : 

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.create` | `Dealer`,`DealerDepartment` | Authorises client to create appointment for the provided dealer |
| `customer.search` | `DealerDepartment` | Authorizes client to search for customers for provided user's dealer department |
| `customer.update` | `DealerDepartment` | Authorizes client to create customer for provided user's dealer department |
| `kopcode.operation.read` | `Dealer` | Authorizes client to get operation codes for given dealership |
| `kopcode.factory.menu.read` | `Dealer` | Authorizes client to get factory-menus for given dealership |
| `appointment.configuration` | `Dealer`,`DealerDepartment` | Authorizes client to get eligible advisor for the provided dealer |
| `appointment.transportOptions` | `DealerDepartment` | Authorizes client to get transportOption for a dealer |
| `manage.dealerassociate.group` | `DealerDepartment` | Authorizes client to manage dealerassociate group |

The following endpoints can help you with forming a proper request to create an appointment:

## Process

To create an appointment in myKaarma, follow these steps based on your use case.

![Decision Tree](./appt_creation_new_flow.png)

* **Search for a Customer**:
Please refer to <a href="/our-products/integration/customer/search-then-create-customer">search and then create customer documentation</a>. 
For this process, you will need to get UUID of the customer and vehicle.

* **Get services/opcodes**:
Please refer to <a href="/our-products/admin/opcodes/opcodes-and-menus/how-to-get-opcodes-and-menus">get opcodes and menus</a>. 
For this process, you can get the UUIDs of these services and operation Types. Alternatively, you can also use the laborOpcodes of these services. This endpoint gives only OPCODE and SERVICEMENU operation Types. Please use that information while creating an Appointment.

* **Get factory menus**:
Note - This is an Optional Step.
Please refer to <a href="/our-products/admin/opcodes/opcodes-and-menus/how-to-get-factory-menus">get factory menus</a>. 
For this process, you can get the UUIDs of these services and operation Types. This endpoint gives only SERVICEMOTORSMAINTENANCEMENU operation Type. Please use that information while creating an Appointment.

**Sample `serviceList` Object to Pass in Create Appointment API for Factory Menus**
```json
"serviceList": [
  {
    "title": "{laborOpCode}",
    "operationUuid": "{quickOpLiteUuid}",
    "menuUuid": "{uuid}",
    "operationType": "{operationType}"
  }
]
```

* **Get Advisors**:
If your use case doesn't need a specific advisor to whom an appointment will be assigned, you can skip this step. You can pass the 'assignedUser' field as null.
If it does require a specific advisor, then you will to find the UUID of this advisor. Please refer to <a href="/our-products/scheduler/API/how-to-get-eligibleAdvisor">get eligible advisors</a> to find the UUID for your particular advisor.

* **Get Transport options**:
If your use case doesn't require any particular transport option or the transport option is 'None' for the appointment, you can pass 'transportOption' field as null.
If it requires a different transport option, go through <a href="/our-products/scheduler/API/how-to-get-transportOptionForDealer">this page</a> to obtain the UUID of the required transport option.

* **Get Team List**:
Teams are basically group of advisors created at the dealership. Let us say dealership wants appointments of a particular vehicle go to only a group of advisors, teams are helpful in such a setup.
Again, if your use case is of no particular advisor then you can send 'teamUuid' as null and skip this step.
If it is not, then please go through <a href="/our-products/admin/manage/dealer-associate-group/how-to-get-dealerAssociateGroupList">this page</a> and check which teams have the UUID of the advisor you want to be assigned to the appointment and then select a team of your choice. Store the team's UUID for further processing.

* **Get slots available for appointment**:
Now you have all the parameters needed to create the appointment ready and need to find an available slot to schedule the appointment. Please note that availability of slots depend on various parameters:  

- Customer information
- Vehicle information
- Advisor to which appointment is assigned.
- Team of the advisor to which appointment is assigned.
- Services related to the appointment.
- Transport option related to the appointment.

You have obtained the unique identifiers of all these parameters in previous steps of this process. You have to pass these identifiers in the availability request.
Please note:
- It is advised to fetch availability everytime one of these parameters is added/changed.
- There are limits on how many appointments can be scheduled per transport option, advisor or dealership on slot, date and day level. Thus, availability also may change whenever an appointment is scheduled. The appointment can be scheduled from any myKaarma client or any other API partners. Keeping this in mind, it is advised to fetch availability right before scheduling the appointment.

For detailed explanation on how to get the available slots, refer to <a href="/our-products/scheduler/API/how-to-use-getResourceAvailability">this page</a>.

## Request

### HTTP request

```shell
POST  https://api.mykaarma.com/appointment/v2/dealer/{dealerUuid}/appointment
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `dealerUuid` | `String` | Unique identifier of dealer | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.create` | `Dealer` | Authorises client to create appointment for the provided dealer |


### Request Body

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `customerUuid` | `String` | Unique token assigned to each customer in myKaarma | Yes | 
| `vehicleInformation` | `Object` | Details of the vehicle for which appointment is to be created such as - `vin` , `vehicleKey` , `vehicleUuid` | Yes |
| `appointmentStartDateTime` | `String` | The preferred start date-time of the appointment in yyyy-MM-ddTHH:mm:ss format | Yes |
| `appointmentEndDateTime` | `String` | The preferred end date-time of the appointment in yyyy-MM-ddTHH:mm:ss format | No |
| `transportation` | `String` | Option Name of transport option fetched using 'Get Transport options' endpoint. Example: Loaner | No |
| `transportOptionUuid` | `String` | UUID of transport option fetched using 'Get Transport options' endpoint. Example: -f_LNZEWiHQg4AbTH-b_qmDTO8CKwkSQXCtpYFHfWGw | No |
| `altTransportation` | `String` | Custom Name of transport option fetched using 'Get Transport options' endpoint. Example: Loaner | No |
| `assignedUser` | `Obejct` | The details of the dealer associate to whom the appointment is assigned | No |
| `creatorUser` | `Object` | The details of the dealer associate who created the appointment | No |
| `appointmentKey` | `String` | Unique token assigned to each appointment in DMS | No |
| `comments` | `String` | Comments/remarks for the appointment taken as customer's notes | No |
| `internalNotes` | `String` | Internal notes for the appointment which are intended for the dealership personnel only and not for the customer's visibility | No |
| `serviceList` | `Object` | List of services to be performed on the customer's vehicle for the appointment. It contains field like title, description, operationType etc.<br/> title: Title of the service (also referred as labor opcode)<br/>description: Description of the service<br/> operationType: There are 3 supported operation types - OPCODE, SERVICEMENU, SERVICEMOTORSMAINTENANCEMENU.  | No |
| `customerAppointmentPreference` | `Object` | Preferences for customer communication | No |
| `status` | `Object` | Status of the appointment | No |
| `recall` | `Boolean` | Whether the appointment includes a recall | No |
| `pushToDms` | `Boolean` | Whether the appointment should be pushed to DMS | No |

### Explaining objects in request body 

### vehicleInformation

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `vin` | `String` | Vehicle Identification Number - unique code used by automotive industry to identify vehicle | No | 
| `vehicleKey` | `String` | Unique key of vehicle in the DMS | No |
| `vehicleUuid` | `String` | Unique identifier of vehicle in myKaarma | No |

**Note**

None of the fields in this object are required but if you want a vehicle to be associated with the appointment, please pass one of these fields in the vehicleInformation object. You will get the UUID of the vehicle in the same process of getting a customer. Please refer to <a href="/our-products/integration/customer/search-then-create-customer">search and then create customer documentation</a>.

#### assignedUser

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `uuid` | `String` | Unique identifier of the user | No | 
| `deptUUID` | `String` | Unique identifier of the department of the user | No |
| `teamUuid` | `String` | Unique identifier of the team user belongs to | No |

**Note**

Send this object as null if your use case doesn't require an appointment to be assigned to any of the users. Our system will automatically assign the appointment to one of the advisors depending on their availability. 
If you want the appointment to be assigned to a specific user, we would recommend sending the uuid and deptUUID fields. If deptUUID is not sent, we would be default pick the UUID of service department of the dealership. You can get these fields from the response of <a href="/our-products/scheduler/API/how-to-get-eligibleAdvisor">get eligible advisors</a>. 'userUuid' would map to uuid field in this object and "uuid" field of "department" object in the response would map to 'deptUUID'.

#### creatorUser

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `uuid` | `String` | Unique identifier of the user | No | 
| `deptUUID` | `String` | Unique identifier of the department of the user | No |
| `teamUuid` | `String` | Unique identifier of the team user belongs to | No |

**Note**

This object is similar to assignedUser in terms of fields. You can pass this as null if your use case doesn't need a specific creator for the appointment. If not, follow the same steps as the assignedUser.

#### customerAppointmentPreference

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `emailConfirmation` | `Boolean` | Decides whether to send an email for appointment confirmation | No |
| `textConfirmation` | `Boolean` | Decides whether to send an text for appointment confirmation | No |
| `emailReminder` | `Boolean` | Decides whether to send a reminder email for appointment | No |
| `textReminder` | `Boolean` | Decides whether to send a reminder text for appointment | No |
| `notifyCustomer` | `Boolean` | Decides whether to send appointment notifications to the customer | No |
| `sendCommunicationToDA` | `Boolean` | Whether to send appointment communications to the dealer associate | No |
| `confirmationEmail` | `String` | Email ID of customer where appointment confirmation email should be sent | No |
| `confirmationPhoneNumber` | `String` | Phone number of the customer where appointment confirmation text should be sent | No |

**Note**

None of the fields are required. 
If you do not want communication with the customer to be done from myKaarma, send this object as null.
If you want communication with the customer to be done from myKaarma, 'notifyCustomer' will be the umbrella boolean that has to be sent as true. Send other boolean depending on your use case whether you want communication through text or email and whether you want to send reminders or not. Reminders typically go out a day before the appointment.
If you want the user to get notifications of the communication to customer, send this 'sendCommunicationToDA' field as true.

#### status

To create an appointment, our recommendation would be to send this as null.
This is actually an enum that can take these values - CANCELLED, FAILED, UPDATED, Rescheduling Requested, Cancellation Requested, Show, No Show, Rescheduled, Updated, Confirmed, Scheduled, Reminder Sent, Cancelled.
This status updates as the journey of the appointment happens in myKaarma. 

#### serviceList

**Note**

This is not a required field. Send this as null if you don't want any opcodes/services to be attached to your appointment. We will save the service lines with as many details as you send us. For details exactly as they are in our system, just send the 'operationUuid' or 'title' field. 'title' maps to "laborOpCode" and 'operationUuid' maps to "uuid" of the response to <a href="/our-products/admin/opcodes/opcodes-and-menus/how-to-get-opcodes-and-menus">get opcodes and menus</a>.

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `title` | `String` | laborOpCode of the opcode - unique code assigned to every service| No | 
| `description` | `String` | Description of the opcode/service | No |
| `opCodeName` | `String` | Name of the opcode/service | No |
| `price` | `String` | Price of the opcode/service | No |
| `laborTotal` | `String` | Total labor price of the opcode/service | No |
| `partsTotal` | `String` | Total parts price of the opcode/service | No |
| `shopFees` | `String` | Price of the shop of the opcode/service | No |
| `taxes` | `String` | Taxes to be applied for the opcode/service | No |
| `payType` | `String` | What is the pay type of the opcode/service, ex. Customer, Warranty, Internal, etc. | No |
| `sortOrder` | `String` | Defines at what place in the list will the opcode/service show | No |
| `recallID` | `String` | ID of the recall associated with the opcode/service | No |
| `parentTitle` | `String` | This is valid only for menus and not opcodes. The laborOpCode of the opcode associated with the menu | No |
| `menuUuid` | `String` | This is valid only for menus and not opcodes. Unique identifier of the menu | No |
| `operationType` | `String` | What is the type of service. The default is OPCODE. It can be OPCODE, SERVICEMENU, SERVICEMOTORSMAINTENANCEMENU, SERVICEMOTORSLINEITEM, SERVICEMOTORSINDICATOR. | No |
| `operationUuid` | `String` | Unique identifier to the opcode/service | No |
| `isCustomConcern` | `String` | This tells whether the opcode/service is present at dealership or there is a custom request from customer | No |
| `durationInMins` | `String` | The time opcode/service takes in mins | No |
| `parentOpcodeUuid` | `String` | This is valid only for menus and not opcodes. The UUID of the opcode associated with the menu | No |



### Curl for appointment with no specific advisor, team and transport option.

```curl
curl --location --request POST 'https://api.mykaarma.com/appointment/v2/dealer/{{dealer_uuid}}/appointment' \
--header 'Authorization: Basic {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
  "customerUuid": "{customer_uuid}",
  "vehicleInformation": {
    "vehicleUuid": "{vehicle_uuid}"
  },
  "appointmentInformation": {
    "appointmentStartDateTime": "{appointment_start_date_time e.g 2024-10-25T11:15:00}",
    "appointmentEndDateTime": "{appointment_end_date_time e.g 2024-10-25T11:29:59}",
    "trasportOption": null,
    "transportOption": null,
    "assignedUser": null,
    "creatorUser": null,
    "appointmentKey": null,
    "mileageText": null,
    "comments": "\n",
    "internalNotes": "",
    "serviceList": [
        {
        "title": "{labor_opcode}",
        "operationUuid": {operation_uuid},
        "isCustomConcern": false,
        "operationType": "{operation_type}",
      }
    ],
    "customerAppointmentPreference": {
      "emailConfirmation": false,
      "textConfirmation": false,
      "emailReminder": false,
      "textReminder": false,
      "confirmationEmail": "{email}",
      "confirmationPhoneNumber": "310XXXXXXX",
      "notifyCustomer": true,
      "sendCommunicationToDA": true
    },
    "status": null,
    "recall": false,
    "reminderCount": 0,
    "isOverridden": false,
    "overrideFutureNoPrefAppointment": false,
    "pushToDms": true,
    "draftUuid": null,
    "pdrToOpcodes": {},
    "deferredRecallDTOList": null,
    "pickupDeliveryTripEvent": null,
    "sdSessionId": null
  }
}
'
```

### Complete Curl

```curl
curl --location --request POST 'https://api.mykaarma.com/appointment/v2/dealer/{{dealer_uuid}}/appointment' \
--header 'Authorization: Basic {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
  "customerUuid": "fdgdfdfretertegbv43-A9ujPPd-M",
  "vehicleInformation": {
    "vin": null,
    "vehicleKey": null,
    "vehicleUuid": "kdFmlaWcUCWMAdZotP3fgdfVnOKHge56t0NXuG4QpXdWY"
  },
  "appointmentInformation": {
    "appointmentStartDateTime": "2024-10-25T11:15:00",
    "appointmentEndDateTime": "2024-10-25T11:29:59",
    "trasportOption": {
      "altTransportation": null,
      "transportation": null,
      "transportOptionUuid": "dfsdsf43tfxs-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU",
      "bookingID": null,
      "bookInThirdParty": false
    },
    "transportOption": null,
    "assignedUser": {
      "uuid": "6bed86cc14791jkbdsf85a396610a3a84737546a0dd4ed23f522f90c91fe0",
      "deptUUID": "8ec821aefe98664ab15dfwrtrgfdghl0b1aeda9ff58df3db89bb0a55a3",
      "teamUuid": null
    },
    "creatorUser": {
      "uuid": "80c9166f65eecad91e3855555svdgerfg3e5d7a95841c3a2a7086d1c87a",
      "deptUUID": "8ec821aefe9twr42f34f26c3c46f9c37d0b1aeda9ff58df3db89bb0a55a3",
      "teamUuid": null
    },
    "appointmentKey": null,
    "mileageText": null,
    "comments": "\n",
    "internalNotes": "",
    "serviceList": [
        {
        "title": "CECOIL",
        "description": "CECOIL",
        "opCodeName": null,
        "price": null,
        "laborTotal": null,
        "partsTotal": null,
        "shopFees": null,
        "taxes": null,
        "payType": null,
        "sortOrder": 2,
        "recallID": null,
        "parentTitle": null,
        "menuUuid": null,
        "laborOpCode": null,
        "operationType": "OPCODE",
        "operationUuid": null,
        "isCustomConcern": false,
        "durationInMins": null,
        "parentOpcodeUuid": null
      }
    ],
    "customerAppointmentPreference": {
      "emailConfirmation": false,
      "textConfirmation": false,
      "emailReminder": false,
      "textReminder": false,
      "confirmationEmail": "test@gmail.com",
      "confirmationPhoneNumber": "310XXXXXXX",
      "notifyCustomer": true,
      "sendCommunicationToDA": true
    },
    "status": null,
    "recall": false,
    "reminderCount": 0,
    "isOverridden": false,
    "overrideFutureNoPrefAppointment": false,
    "pushToDms": true,
    "draftUuid": null,
    "pdrToOpcodes": {},
    "deferredRecallDTOList": null,
    "pickupDeliveryTripEvent": null,
    "sdSessionId": null
  }
}
'
```

## Postman Collection

To easily explore and test our APIs, you can use our Postman collection.

### Importing the Collection

1. Download the Postman collection JSON file.
2. Open Postman and go to **File > Import**.
3. Upload the collection JSON file.
4. The collection will be added to your Postman workspace.

### Postman Collection Link

You can access the latest Postman collection using the link below:

[![Run in Postman](https://run.pstmn.io/button.svg)](https://elements.getpostman.com/redirect?entityId=3026536-d9624e0a-af17-4d9d-8086-05edaaab18f4&entityType=collection)

---

// File: our-products/scheduler/API/how-to-get-appointments

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you understand how you can get appointments made in the myKaarma system. Let's get started.

# How to get all appointments create/update events in myKaarma

The most efficient and our recommended approach would be webhooks. This would make sure that you get real time updates of all events related to appointments in mykaarma. 

To catch up on the appointments that have already been made, contact apisupport@mykaarma.com.

For detailed documentation on how to enable webhooks for your integration please refer to <a href="/our-products/scheduler/API/mykaarma-webhook-events">this page</a>.

If for some reason, webhooks subscription doesn't work for you and you would like to use our APIs, though we think you should still be using webhooks :), please check if you want to get appointments by: 

## Get appointments by UUID

If you already have the UUID (unique identifier of the appointment in myKaarma), please go through <a href="/our-products/scheduler/API/how-to-get-appointment-by-uuid">this page</a> on how to get appointment by UUID.

## Get appointments by customer

Need to find appointments for a particular customer? Please go through <a href="/our-products/scheduler/API/how-to-get-appointments-for-customer">this page</a> on how to get appointments by customer. Please note this would require you to first fetch UUID of the customer - details on the linked page.

## Get appointments by appointment date

If your use case requires you to search appointments by appointment date. Please go through <a href="/our-products/scheduler/API/how-to-get-appointments-by-appointment-date">this page</a> on how to get appointments by appointment date.

## Get appointment for a particular repair order

If you want to find an appointment linked to a particular repair order, please go through <a href="/our-products/scheduler/API/how-to-get-appointments-by-order-uuid">this page</a> on how to get appointment for a particular repair order. Please note this would require you to first UUID of the repair order - details on the linked page.

## Get appointments by filter

If none of the above cases fit your use case, then you can try using the get appointments by filter method desribed in detail on <a href="/our-products/scheduler/API/how-to-get-appointments-for-customer">this page</a>. This will help you fetch appointments by 

- *Appointment keys* (Keys or identifiers of appointments in DMS).
- *Created date* (Date when appointment was created)
- *Appointment date* (For a range of dates when appointment is scheduled)
- *Customers* (Filter using UUIDs of customer)
- *Appointments* assigned to particular teams (Filter using UUIDs of teams)
- *Created by* (Check what appointments were created by dealer app or web scheduler or API)

Note this is a paginated endpoint with recommended limit of no more than 100 page size. We would advise to use this only if your use case is not satisfied by any of the other methods to get appointments.

The response of all the APIs to get appointments are similar.

## Appointment data model

Please refer to <a href="/our-products/scheduler/API/appointment-data-model">appointment data model</a> to see all the parameters you will get when you get appointments from myKaarma APIs or events.

---

// File: our-products/scheduler/API/how-to-update-an-appointment

# How to update an Appointment

You can update appointments in myKaarma for customer visits so that your Service Advisors are aware of the changed schedule and your customers could be notified/reminded for their scheduled visit.

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `dealerDepartmentUUID` | `String` | Unique identifier of dealer department| Yes|
| `appointmentUuid` | `String` | Unique identifier of the appointment| Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.create` | `DealerDepartment` | Authorises client to create appointment for the provided dealer |

To update an appointment, you have to first the get unique identifier (UUID) of the appointment. 
This is a patch endpoint, so only detail that has to be updated needs to be sent in the request.

Following details can be updated 

- Customer (send the updated customerUuid)
- Vehicle (send the updated vehicleUuid in vehicleInformation)
- Appointment time (send the updated appointmentStartDateTime and appointmentEndDateTime).
- User to which appointment is assigned (send the updated uuid in assignedUser object).
- Transport option (send the updated transportOptionUuid in transportOption object, alternatively you can also send name of the updated transport option in altTransportation in transportOption object)
- Comments related to appointment (comments field), Internal notes related to appointment (internalNotes field), Mileage of the vehicle (mileageText field) are simple string fields.
- Service related to the appointment (serviceList object in the body). Please note that any service that was initially present in the appointment but is not present in update request will be cancelled. So if you plan to add/change a particular service, please fetch the appointment, edit the serviceList accordingly and then send the complete serviceList in the update appointment request.
- Metadata with appointment (appointmentData field in appointmentMetaData object).

On how fetch customer, vehicle or any other parameter, please refer to the <a href="/our-products/scheduler/API/how-to-create-an-appointment">create appointment page</a>

### Request body

*Update appointment and create appointment have same request body*. You can view the request body on <a href="/our-products/scheduler/API/how-to-create-an-appointment">create appointment page</a>. 

## Note
This is a patch endpoint, send only the parameters that you want to update.

:::caution
When updating services, please send the complete list you want in the appointment. Services present in create appointment request but not in update appointment will be marked as invalid.
:::

---

// File: our-products/scheduler/API/how-to-cancel-an-appointment

# How to cancel an Appointment

To cancel an appointment, you can simply use the same endpoint that is used to <a href="/our-products/scheduler/API/how-to-get-eligibleAdvisor">update an appointment</a>. The only parameter that needs to be passed is 'status' with the value "CANCELLED". Please check the example below.

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `dealerDepartmentUUID` | `String` | Unique identifier of dealer department| Yes|
| `appointmentUuid` | `String` | Unique identifier of the appointment| Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.create` | `DealerDepartment` | Authorises client to create appointment for the provided dealer |

### Curl to cancel an appointment

```curl
curl --location -g --request PATCH 'https://api.mykaarma.com/appointment/v2/department/{{dealerDepartmentUuid}}/appointment/{{appointmentUuid}}' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
    "appointmentInformation": {
        "status":"CANCELLED"
    }
}'
```

---

// File: our-products/scheduler/API/how-to-create-draft-appointment

# How to create a draft Appointment

You can create draft appointments in myKaarma and generate consumer scheduler links. Consequently the consumer scheduler link will have all the information supplied in the draft appointment API pre filled.

To create a draft appointment, you first need your credentials. If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.

The following endpoints can help you with forming a proper request to create an appointment:

* **Parameters Used**:
1. `{{dept_uuid}}` - UUID of department for which you want to fetch the customer.
2. `{{test_vin}}` - VIN of the vehicle for which you want to search the customer.
3. `{{basic_auth_token}}` - Authorization token generated using your mykaarma credentials.
4. `{{dealer_uuid}}` - UUID of dealer for which you want to fetch the customer
5. `{{test_vin_customer_uuid}}` - Customer UUID for test VIN (can be computed from 'Get a customer's details' request)
6. `{{test_vin_vehicle_uuid}}` - Vehicle UUID for test VIN (can be computed from 'vehicles' in 'Get a customer's details' request)
7. `{{assignee_da_uuid}}` - UUID of the Chosen Advisor (Can be computed from 'Get Advisors' endpoint)
8. `{{creator_da_uuid}}` - UUID of the advisor creating the Appointment
9. `{{customer_email_id}}` - Email ID of customer to be used for appointment related communication
10. `{{customer_phone_number}}` - Phone no. of customer to be used for appointment related communication (Example - +19110012345)

* **Search for a Customer**
```curl
curl --location --request GET 'https://api.mykaarma.com/customer/v2/department/{{dept_uuid}}/customer/list?searchTerm={{test_vin}}&searchPreference=vehicle&maxResults=50' \
--header 'Authorization: {{basic_auth_token}}'
```
More details on customer search https://docs.mykaarma.com/our-products/integration/customer/how-to-get-a-list-of-customers


* **Match a customer's details**:
You may get multiple customer responses from search and you will need to do matching on your side to find one customer UUID and Vehicle UUID to be supplied to draft appointment API. We recommend using a combination of Vehicle VIN and Customer LastName to uniquely identify a customer.


* ** Optional - Get Opcodes**:
```curl
curl --location --request POST 'https://api.mykaarma.com/appointment/v2/department/{{dept_uuid}}/fetch/opcodes' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
    "communicationCodes": [],
    "dealerAppSchedulerVisibility": null,
    "dealerUUIDList": [],
    "endPosition": null,
    "eventDealerAssociateUuid": null,
    "getMkAndDmsSimilarOpcodeCount": true,
    "getTotalCount": true,
    "isLastPage": true,
    "mobileServiceVisibility": null,
    "onlineSchedulerVisibility": true,
    "opCodes": [],
    "requesterUserUUID": "string",
    "resultSize": null,
    "searchToken": null,
    "serviceCartVisibility": null,
    "sortDirection": "ASCENDING",
    "sortPreference": "OPCODE",
    "startPosition": 0,
    "uuidList": []
}'
```

* ** Optional - Get Advisors**:
```curl
curl --location --request GET 'https://api.mykaarma.com/appointment/v2/dealer/{{dealer_uuid}}/eligibleAdvisor/list' \
--header 'Authorization: {{basic_auth_token}}'
```

* ** Optional - Get Transport options**:
```curl
curl --location --request GET 'https://api.mykaarma.com/appointment/v2/department/{{dept_uuid}}/transportOption/list' \
--header 'Authorization: {{basic_auth_token}}'
```

* **  Optional - Get Appointment Slots**:
1. `{{dealerDepartmentUuid}}` - Department Uuid of the user who wants to see the available slots

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{dealerDepartmentUuid}}/availability' \
--header 'Authorization: Basic {{basic_auth_token}}' \
--header 'Content-Type: application/json'
--data '{
    "requesterUserUUID": "string",
    "dealerUUIDList": "string",
    "platform": {
        "id": 0,
        "name": ""string""
    },
    "dates": [
        "string"
    ],
    "startTime": "string",
    "endTime": "string",
    "existingAppointmentUuid": "string",
    "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": "string",
        "customerKey": "string",
        "uuid": "string"
    },
    "customerPhones": [
        "string"
    ],
    "customerEmails": [
        "string"
    ],
    "vehicleInformation": {
        "brand": "string",
        "dealerUuid": "string",
        "engine": "string",
        "mileage": 10000,
        "model": "string",
        "trim": "string",
        "uuid": "string",
        "vehicleKey": "string",
        "vin": "string",
        "year": "string"
    },
    "selectedAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "string"
        ],
        "transportOptionUuidList": [
            "string"
        ],
        "subTransportOptionUuidList": "string",
        "teamUuidList": [
            "string"
        ]
    },
    "allAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "string"
        ],
        "transportOptionUuidList": [
            "string"
        ],
        "subTransportOptionUuidList": null,
        "teamUuidList": [
            "string"
        ]
    },
    "selectedOperationUuidSet": [
        "string"
    ],
    "selectedRecallOemIdSet": [],
    "callerDaUuid": "string",
    "subscriberName": "string",
    "refreshPanelSelectionState": true,
    "randomStringIdentifierForEditAppointment": "string"
}'
```
For detailed explanation please go through https://docs.mykaarma.com/our-products/scheduler/API/how-to-use-getResourceAvailability


* **Create draft Appointment**:

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/dealer/{{dealer_uuid}}/draftAppointment' \
--header 'Content-Type: application/json' \
--header 'accept: application/json' \
--data '{
 "appointmentCommunicationPreference": {
   "emailConfirmation": true,
   "emailReminder": true,
   "notifyCustomer": true,
   "sendCommunicationToDA": true,
   "textConfirmation": true,
   "textReminder": true
 },
 "appointmentEndDateTime": "",
 "appointmentStartDateTime": "",
 "assignedAdvisorUuid": "",
 "opCodes": [
     {
         "laborOpCode": "DUMMYOPCODE",
         "description": "mykDescription",
         "price": ""
     }
   ],
 "preFilledLinkMetaData":{
     "source": "email"
 },
 "customerDetails": {
   "uuid":"{{test_vin_customer_uuid}}",
   "vehicleIdentifiers": {
     "uuid":"{{test_vin_vehicle_uuid}}"
   }
 },
 "transportOption": "",
 "note": "testing appt creation",
 "expiry": ""
}
'
```

---

// File: our-products/scheduler/API/how-to-use-getResourceAvailability

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get the availabilities of advisors, transport options and teams as per the selected attributes including opcodes, recalls, customer and their chosen vehicle for the specified dates.

## Request

### HTTP request

```shell
POST  https://api.mykaarma.com/appointment/v2/department/{{departmentUUID}}/availability?refreshSelectionState
```


### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes|

####  Request parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `refreshSelectionState` | `Boolean` | If set to true, it returns the state of panel and categorises each entity - `Dealer Associate` , `Team` and `Transport Option` into either `selected` , `unselected` or `disabled`. Availabilities are only returned for the selected entities. | Yes
| `fetchAvailability` | `Boolean` | If set to true, it returns only available slots instead of unavailable slots for each combination of selected `Dealer Associate` , `Team` and `Transport Option`. | No

:::caution
To get available slots in response, send fetchAvailability as true. Otherwise you can get unavailable slots and mark them as unavailable from the complete hours of operation of dealer.
:::

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.configuration` | `DealerDepartment` | Authorises client to fetch availability for the provided dealer department |


:::caution
In the request body below, many fields are marked as not required but it is advised to send all the parameters (like information of vehicle, ) in selected attributes that you will be using to schedule appointment. 
Downside of not sending these parameters may be the slot that comes as available when getting availability may actually not be available when we check with those parameters before scheduling appointment, resulting in appointment create/update failures.
:::

### Request Body

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `requesterUserUUID` | `String` | UUID of the user who is making this request | No | 
| `dealerUUIDList` | `List<String>` | List of dealer UUIDs for which we want to compute first available slot | No | 
| `platform` | `Object` | Specify the platform from which request is coming. eg - `dealerApp` , `Web` etc | No | 
| `dates` | `Set<String>` | Dates for which availability needs to be fetched where each date is in `yyyy-MM-dd` format | Optional if service subscriber is `mkConsumer` otherwise required.  |
| `startTime` | `String` | Time from which we want to compute availability. It should be in the format - `HH:mm:ss` | No |
| `endTime` | `String` | Time till which we want to compute availability. It should be in the format - `HH:mm:ss` | No | 
| `existingAppointmentUuid` | `String` | Appointment UUID when updating an existing appointment | No |
| `customerInformation` | `Object` | Contains selected customer information such as - `firstName` , `lastName`, `company` , `customerKey`, `uuid` on which rules can apply  | No |
| `customerPhones` | `List<String>` |  List containing selected customer's phone numbers | No |
| `customerEmails` | `List<String>` | List containing selected customer's email address | No |
| `vehicleInformation` | `Object` | Contains information about selected customer's vehicle such as - `vin` , `make` , `year` , `model` , `brand` etc | No |
| `selectedAvailabilityAttributes` | `Object` | Specifies the selected attributes based on which availabilities needs to be fetched. These attributes are - `dealerAssociateUuidList`, `transportOptionUuidList`,`subTransportOptionUuidList`,`teamUuidList`  | No | 
| `allAvailabilityAttributes` | `Object` | All the UUIDs of the attributes which are configured at the dealership . These attributes are - `dealerAssociateUuidList`, `transportOptionUuidList`,`subTransportOptionUuidList`,`teamUuidList`. **Note**- Ensure that either all UUIDs for each attribute are included, or none at all. Partial data is not acceptable | No | 
| `selectedOperationUuidSet` | `Set<String>` | Set of opcode/service UUIDs that user has selected | No |
| `selectedRecallOemIdSet` | `Set<String>` | Set of OEM IDs of recalls that the user has selected  | No |
| `callerDaUuid` | `String` | UUID of dealership personnel who is making this request | Required if service subscriber is `mkDealer` Otherwise optional. 
| `subscriberName` | `String` | Name of the subscriber from where the request is coming from. | No| 
| `refreshPanelSelectionState` | `Boolean` | If set to true, it returns the state of panel and categorises each entity - `Dealer Associate` , `Team` , `Transport Option` into either `selected` , `unselected` or `disabled` . if the entity selected in request is unavailable due to assignment rules, the selected entity will be switched to an available one and availabilities of the switched entity will be returned.| No |
| `randomStringIdentifierForEditAppointment` | `String` | Auto generated random identifier which is sent with the request body when editing an appointment through mK desktop scheduler | No |

:::caution
For date ranges, the recommended maximum value is 21 days. For any availability beyond 21 days, it is advised to make sequential calls of 21 days and aggregate responses.
:::

### Sample Request Model 
```shell
{
  "allAvailabilityAttributes": {
    "dealerAssociateUuidList": [
      "string"
    ],
    "subTransportOptionUuidList": [
      "string"
    ],
    "teamUuidList": [
      "string"
    ],
    "transportOptionUuidList": [
      "string"
    ]
  },
  "callerDaUuid": "string",
  "customerEmails": [
    "string"
  ],
  "customerInformation": {
    "company": "string",
    "customerKey": "string",
    "firstName": "string",
    "lastName": "string",
    "uuid": "string"
  },
  "customerPhones": [
    "string"
  ],
  "dates": [
    "string"
  ],
  "dealerUUIDList": [
    "string"
  ],
  "endTime": "string",
  "existingAppointmentUuid": "string",
  "platform": {
    "id": integer,
    "name": "string"
  },
  "randomStringIdentifierForEditAppointment": "string",
  "refreshPanelSelectionState": true,
  "requesterUserUUID": "string",
  "selectedAvailabilityAttributes": {
    "dealerAssociateUuidList": [
      "string"
    ],
    "subTransportOptionUuidList": [
      "string"
    ],
    "teamUuidList": [
      "string"
    ],
    "transportOptionUuidList": [
      "string"
    ]
  },
  "selectedOperationUuidSet": [
    "string"
  ],
  "selectedRecallOemIdSet": [
    "string"
  ],
  "startTime": "string",
  "subscriberName": "string",
  "vehicleInformation": {
    "brand": "string",
    "dealerUuid": "string",
    "engine": "string",
    "mileage": "string",
    "model": "string",
    "trim": "string",
    "uuid": "string",
    "vehicleKey": "string",
    "vin": "string",
    "year": "string"
  }
}
```


### Sample Curl
```shell
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{departmentUUID}}/availability?refreshSelectionState=true' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data '{
    "requesterUserUUID": null,
    "dealerUUIDList": null,
    "platform": {
        "id": null,
        "name": "DealerApp"
    },
    "dates": [
        "2023-03-21",
        "2023-03-20"
    ],
    "startTime": null,
    "endTime": null,
    "existingAppointmentUuid": null,
    "customerInformation": null,
    "customerPhones": null,
    "customerEmails": null,
    "vehicleInformation": null
    "selectedAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "64e07c212f74cf630f9f709fdc321d58e60433227bd5ad8758dfd9c8276fc473"
        ],
        "transportOptionUuidList": [
            "Uuid"
        ],
        "subTransportOptionUuidList": null,
        "teamUuidList": [
            "XHXK76_bW2yRzGIp3uJsLno4HOmrOKpLIlraMD7jn3s"
        ]
    },
    "allAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "64e07c212f74cf630f9f709fdc321d58e60433227bd5ad8758dfd9c8276fc473",
            "e946917fed3fdb82a8b1ace3aa55647cbbcd678e68f2ea50d1a2537a5865d9ff",
            "d2d73272312a7868d219fd7b181697a23757222a01cafde3ef9b8b4cf78d20cb",
            "2b54e0313aa6e4351d2cce3e5f133c768ca3c224403b8ade9709f502296288b5"
        ],
        "transportOptionUuidList": [
            "w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU",
            "qhLQ5MDZWWsZOwy_YEtuvPhz6ZliEkjcrHSqFYdI-o0",
            "CjaK5wAvBDG7Di6XAt6RpllbGtz9SiHoBzM2vDiFa9Q",
            "Uuid"
        ],
        "subTransportOptionUuidList": null,
        "teamUuidList": [
            "XHXK76_bW2yRzGIp3uJsLno4HOmrOKpLIlraMD7jn3s",
            "ALL_ADVISORS_UUID"
        ]
    },
    "selectedOperationUuidSet": ["3V9k8y8f9Rr3p_L7Rgu7kr982vCDoyFyy2Oc1QMmln8","nQisOp04babYr7FpBBZfqOgda3q5VUcOfYakw1mntMY"],
    "selectedRecallOemIdSet": [],
    "callerDaUuid": "5b372a12f3b33348f096bdd0ee38cbf8d84b25a9c128edad4ff0462d0b3603fd",
    "subscriberName": null,
    "refreshPanelSelectionState": null,
    "randomStringIdentifierForEditAppointment": null
}'
```

## Response
```json
{
  "dealerHoursOfOperationEndTime": "string",
  "dealerHoursOfOperationStartTime": "string",
  "panelSelectionStateMap": {
    "panel": {
      "selectedEntityUuidSet": [
        "string"
      ],
      "unselectedEntityUuidSet": [
        "string"
      ],
      "disabledEntityUuidToWarningsMap": {
        "string": [
          {
            "warningCode": "string",
            "warningDescription": "string"
          }
        ]
      }
    }
  },
  "availabilityInfoMap": {
    "string": {
      "string": {
        "vacant": false,
        "warningMap": {
          "string": [
            "string"
          ]
        }
      }
    }
  },
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "statusCode": 0,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

## Summary of Response


| Parameter Name | Description |
| --- |   ---        |
|  `dealerHoursOfOperationStartTime`  |  String of the format `HH:mm:ss` signifying the operation start time of the dealership |
|  `dealerHoursOfOperationEndTime`  |String of the format `HH:mm:ss` signifying the operation end time of the dealership  |
|  `panelSelectionStateMap`  |  A map of type ` Map<Panel, SelectionState>` where `Panel` refers to each of the selection panel/entity - `DEALER_ASSOCIATE` , `TRANSPORT_OPTION`, `TEAM`. <br/> `SelectionState` tells the state of the corresponding panel by maintaining -`selectedEntityUuidSet`  - a set containing UUIDs of selected entities,  `unselectedEntityUuidSet` - a set containing UUIDs of unselected entities and `disabledEntityUuidToWarningsMap` - a mapping between the UUID of disabled entity to list of reasons for its unavailability. <br/> State of the panel is used to prevent users from creating appts with disabled entities.|
|  `availabilityInfoMap`  |A map of type `Map<String, Map<String, VacancyInfo>>`. It tells which combination of `Dealer Associate`(assigned service advisor) , `Transport Option` and `Team` is unavailable when and for what reason. <br/><br/> Here the outer key is a string which contains information about date and time and can have 3 values - <br/> 1. `Date` (eg : 2023-03-26) <br/>2. `Date and Time` (eg : 2023-03-26 12:00:00) <br/>3. `ALL_DATE_TIME`  <br/> This key specifies whether it is applicable for only a specific date , specific date and time or it is always applicable irrespective of date and time. <br/><br/>The inner key is of the format `DA={{DA_UUID}},TO={{TO_UUID}},TEAM={{TEAM_UUID}}` , specifying the combination which is unavailable. <br/><br/> `vacancyInfo` is an object which contains `isVacant` which is always returned as false and a `warningMap` which tells the reasons why this particular combination in unavailable.  |


## Sample availabilityInfoMap for Date

```json
"availabilityInfoMap":{
    "2023-11-29": {
        "DA=149b70145a0989ad7d28f00f699ef9bb7357850c9eb3fdb15dc99a3af6743fd7,TO=recb8K8QYLpT0MQ2RcLZ88KvcIyTYbpi06jGC68FbG0,TEAM=null": {
            "warningMap": {
                "APPT_RULE_WARN_CAPACITY_PLANNING_CONSTRAINT_VIOLATED": [
                    "Rule = \"date rule\" is violated."
                ]
            },
            "vacant": false
        }
    },
}
```

In this the whole date 2023-11-29 is marked unavailable for the combination of DA, TO and Team.


## Sample availabilityInfoMap for Date and Time

```json
"availabilityInfoMap": {
    "2023-12-13 08:15:00": {
        "DA=a1cce52d69d94400649c4f6fc0d0cac3ddb70308c020cae443ad37df10b747d8,TO=Uuid,TEAM=null": {
            "warningMap": {
                "APPT_RULE_WARN_CAPACITY_PLANNING_CONSTRAINT_VIOLATED": [
                    "You have reached the maximum limit of (0) appointments for (:advisor) on (Wednesday).",
                    "The selected timeslot (08:15 AM - 08:29 AM) has been marked as unavailable in the Individuals Schedule of (:advisor) for (Wednesday).",
                    "You have reached the maximum limit of (33) appointments on (Wednesday)."
                ]
            },
            "vacant": false
        }
    },
}
```

In this slot of 08:15 on 2023-12-13 is marked unavailable for this "DA=a1cce52d69d94400649c4f6fc0d0cac3ddb70308c020cae443ad37df10b747d8,TO=Uuid,TEAM=null" combination of DA, TO and TEAM. <br/>
It contains a list of warning messages which shows the reason why a particular slot is unavailable for this particular combination of DA, TO and TEAM.<br/>
Similarly like this availabilityInfoMap contains all the unavailable slots with warnings.


## Sample availabilityInfoMap for ALL_DATE_TIME

```json
"availabilityInfoMap": {
    "ALL_DATE_TIME": {
        "DA=149b70145a0989ad7d28f00f699ef9bb7357850c9eb3fdb15dc99a3af6743fd7,TO=w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU,TEAM=null": {
            "warningMap": {
                "APPT_RULE_WARN_CAPACITY_PLANNING_CONSTRAINT_VIOLATED": [
                    "Rule = \"assingnment rule\" is violated."
                ]
            },
            "vacant": false
        }
    }
}
```
In this all the slots for requested dates are marked unavailable for the combination of DA, TO and TEAM. <br/>
This type of response is generated in the case of assignment rule. Ex - If Opcode in XYZ then Service Advisor not in ABC. <br/>
Now if you choose Opcode XYZ and Service Advisor ABC then above assignment rule will be violated and all the slots will be marked unavailable.

---

// File: our-products/scheduler/API/how-to-use-first-available-slot

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get the first available slot to schedule appointments as per the selected attributes including advisor, transport option, team, opcodes, recalls, customer and their chosen vehicle.

## Request

### HTTP request

<pre>
POST  https://api.mykaarma.com/appointment/v2/department/<PathVariable variableName="departmentUUID"/>/first-available-slot
</pre>


### Parameters

####  Path parameters:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.configuration` | `DealerDepartment` | Authorises client to fetch first available slot for the provided dealer department |

### Request Body

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `requesterUserUUID` | `String` | UUID of the user who is making this request | No | 
| `dealerUUIDList` | `List<String>` | List of dealer UUIDs for which we want to compute first available slot | No | 
| `platform` | `Object` | Specify the platform from which request is coming. eg - `DealerApp` , `Web` etc | No | 
| `dates` | `Set<String>` | Set containing only the start date (in `yyyy-MM-dd` format) from which the first available slot needs to be found. If null, first available slot is computed from the present date up until 90 days. | No |
| `startTime` | `String` | Time from which we want to compute availability. It should be in the format - `HH:mm:ss` | No |
| `endTime` | `String` | Time till which we want to compute availability. It should be in the format - `HH:mm:ss` | No | 
| `existingAppointmentUuid` | `String` | Appointment UUID when updating an existing appointment | No |
| `customerInformation` | `Object` | Contains selected customer information such as - `firstName` , `lastName`, `company` , `customerKey`, `uuid` on which rules can apply | No |
| `customerPhones` | `List<String>` | List containing selected customer's phone numbers | No |
| `customerEmails` | `List<String>` | List containing selected customer's email address | No |
| `vehicleInformation` | `Object` | Contains information about selected customer's vehicle such as - `vin` , `make` , `year` , `model` , `brand` etc | No |
| `selectedAvailabilityAttributes` | `Object` | Specifies the selected attributes based on which availabilities needs to be fetched. These attributes are - `dealerAssociateUuidList`, `transportOptionUuidList`,`subTransportOptionUuidList`,`teamUuidList`  | Yes, `dealerAssociateUuidList` is always required and `transportOptionUuidList` is optional only when service subscriber is `mkConsumer`. Rest of the fields are optional | 
| `allAvailabilityAttributes` | `Object` | All the UUIDs of the attributes which are configured at the dealership . These attributes are - `dealerAssociateUuidList`, `transportOptionUuidList`,`subTransportOptionUuidList`,`teamUuidList`| No | 
| `selectedOperationUuidSet` | `Set<String>` | Set of opcode/service UUIDs that user has selected | No |
| `selectedRecallOemIdSet` | `Set<String>` | Set of OEM IDs of recalls that the user has selected | No |
| `callerDaUuid` | `String` | UUID of dealership personnel who is making this request | Required if serviceSubscriber = `mkDealer` Otherwise optional. | 
| `subscriberName` | `String` | Name of the subscriber from where the request is coming from.| No
| `refreshPanelSelectionState` | `Boolean` | If set to true, it returns the state of panel and categorises each entity - `Dealer Associate`,`Team`,`Transport Option` into either `selected` , `unselected` or `disabled` | No |
| `randomStringIdentifierForEditAppointment` | `String` | Auto generated random identifier which is sent with the request body when editing an appointment through mK desktop scheduler| No | 

### Sample Request Model 
```shell
{
  "allAvailabilityAttributes": {
    "dealerAssociateUuidList": [
      "string"
    ],
    "subTransportOptionUuidList": [
      "string"
    ],
    "teamUuidList": [
      "string"
    ],
    "transportOptionUuidList": [
      "string"
    ]
  },
  "callerDaUuid": "string",
  "customerEmails": [
    "string"
  ],
  "customerInformation": {
    "company": "string",
    "customerKey": "string",
    "firstName": "string",
    "lastName": "string",
    "uuid": "string"
  },
  "customerPhones": [
    "string"
  ],
  "dates": [
    "string"
  ],
  "dealerUUIDList": [
    "string"
  ],
  "endTime": "string",
  "existingAppointmentUuid": "string",
  "platform": {
    "id": integer,
    "name": "string"
  },
  "randomStringIdentifierForEditAppointment": "string",
  "refreshPanelSelectionState": true,
  "requesterUserUUID": "string",
  "selectedAvailabilityAttributes": {
    "dealerAssociateUuidList": [
      "string"
    ],
    "subTransportOptionUuidList": [
      "string"
    ],
    "teamUuidList": [
      "string"
    ],
    "transportOptionUuidList": [
      "string"
    ]
  },
  "selectedOperationUuidSet": [
    "string"
  ],
  "selectedRecallOemIdSet": [
    "string"
  ],
  "startTime": "string",
  "subscriberName": "string",
  "vehicleInformation": {
    "brand": "string",
    "dealerUuid": "string",
    "engine": "string",
    "mileage": "string",
    "model": "string",
    "trim": "string",
    "uuid": "string",
    "vehicleKey": "string",
    "vin": "string",
    "year": "string"
  }
}
```


### Sample Curl
```shell
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{departmentUUID}}/first-available-slot' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data '{
    "requesterUserUUID": null,
    "dealerUUIDList": null,
    "platform": {
        "id": null,
        "name": "DealerApp"
    },
    "dates": null
    "startTime": null,
    "endTime": null,
    "existingAppointmentUuid": null,
    "customerInformation": null,
    "customerPhones": null,
    "customerEmails": null,
    "vehicleInformation": null,
    "selectedAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "64e07c212f74cf630f9f709fdc321d58e60433227bd5ad8758dfd9c8276fc473"
        ],
        "transportOptionUuidList": [
            "Uuid"
        ],
        "subTransportOptionUuidList": null,
        "teamUuidList": [
            "XHXK76_bW2yRzGIp3uJsLno4HOmrOKpLIlraMD7jn3s"
        ]
    },
    "allAvailabilityAttributes": {
        "dealerAssociateUuidList": [
            "64e07c212f74cf630f9f709fdc321d58e60433227bd5ad8758dfd9c8276fc473",
            "e946917fed3fdb82a8b1ace3aa55647cbbcd678e68f2ea50d1a2537a5865d9ff",
            "d2d73272312a7868d219fd7b181697a23757222a01cafde3ef9b8b4cf78d20cb",
            "2b54e0313aa6e4351d2cce3e5f133c768ca3c224403b8ade9709f502296288b5"
        ],
        "transportOptionUuidList": [
            "w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU",
            "qhLQ5MDZWWsZOwy_YEtuvPhz6ZliEkjcrHSqFYdI-o0",
            "CjaK5wAvBDG7Di6XAt6RpllbGtz9SiHoBzM2vDiFa9Q",
            "Uuid"
        ],
        "subTransportOptionUuidList": null,
        "teamUuidList": [
            "XHXK76_bW2yRzGIp3uJsLno4HOmrOKpLIlraMD7jn3s",
            "ALL_ADVISORS_UUID"
        ]
    },
    "selectedOperationUuidSet": ["3V9k8y8f9Rr3p_L7Rgu7kr982vCDoyFyy2Oc1QMmln8","nQisOp04babYr7FpBBZfqOgda3q5VUcOfYakw1mntMY"],
    "selectedRecallOemIdSet": [],
    "callerDaUuid": "5b372a12f3b33348f096bdd0ee38cbf8d84b25a9c128edad4ff0462d0b3603fd",
    "subscriberName": null,
    "refreshPanelSelectionState": null,
    "randomStringIdentifierForEditAppointment": null
}'
```

## Response
```json
{
  "dateTime": "string",
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "statusCode": 0,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```
## Response Summary 

`dateTime` - String of the format `yyyy-MM-dd HH:mm:ss` signifying the date and time of the first available slot

---

// File: our-products/scheduler/API/how-to-use-getVacantTimeSlotInfoWithRules

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

## Request

### HTTP request

```shell
POST  https://api.mykaarma.com/appointment/v2/department/{{departmentUUID}}/vacantTimeSlotInfoWithRules
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUUID` | `String` | Unique identifier of dealer department | Yes|

### Request Body

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `dates` | `Set<String>` | Dates for which availability needs to be fetched where date is in `yyyy-MM-dd` format. `startDate` and `numberOfDays` will be given preference in fetching availabilities. | No |
| `startDate` | `String` | Starting date from which availabilities have to be shown | Yes (No, if dates is provided) |
| `numberOfDays` | `Integer` | Number of days for which availabilities have to be shown. Maximum number of days for which availability can be fetched is 21 | Yes (No, if dates is provided) |
| `daIdList` | `List<Long>` | Dealer Associate ID list for which availability needs to be checked | No |
| `appointmentUuid` | String | UUID of the appointment which is selected while fetching availabilities | No |
| `callerDaUuid` | `String` | UUID of DealerAssociate who is making the request | Not required in the case of third party integration. |
| `isWebScheduler` | `Boolean` | A boolean value which tells if the request came from web scheduler or not. This should be sent true for all requests coming in from third party integrations. | No |
| `startTime` | `String` | Time from which we want to compute availability. It should be in the format - `HH:mm:ss` | No |
| `endTime` | `String` | Time till which we want to compute availability. It should be in the format - `HH:mm:ss` | No |
| `transportOptionCustomName` | `String` | Custom name for the transport option selected. First preference is given to `transportOptionUuidList`, if it is empty or null then availability is fetched through CustomName | No |
| `selectedRecallOemIdSet` | `Set<String>` | Set of OEM IDs of recalls that the user has selected  | No |
| `operationUuidList` | `List<String>` | List of uuids of selected operations. Given preference to fetch availabilities over laborOpcodeList. | No |
| `laborOpcodeList` | `List<String>` | List of selected labor opcodes. Refer to above `operationUuidList` definition for preference order. | No |
| `teamUuidList` | `List<String>` | List of uuids of selected teams | No |
| `transportOptionUuidList` | `List<String>` | List of uuids of selected transport options. Refer to transportOptionCustomName definition for preference details | No |
| `customerInformation` | `Object` | Contains selected customer information such as - `firstName` , `lastName`, `company` , `customerKey`, `uuid` on which rules can apply  | No |
| `customerPhones` | `List<String>` |  List containing selected customer's phone numbers | No |
| `customerEmails` | `List<String>` | List containing selected customer's email address | No |
| `vehicleInformation` | `Object` | vehicleInformation is an object which contains the information about the customer vehicle. Here are the description of some of the fields: `vin`-It is the Vehicle Identification Number used to uniquely identify each vehicle, `vehicleKey`-Unique token assigned to each vehicle in DMS, `vehicleUuid`-Unique token assigned to each vehicle in myKaarma| No |

### Sample Request model
```shell
{
  "appointmentUuid": "string",
  "callerDaUuid": "80c9166f65eecad91e3855555198156470d9cd3e5d7a95841c3a2a7086d1c87a",
  "customerEmails": [
    "string"
  ],
  "customerInformation": {
    "company": "string",
    "customerKey": "string",
    "firstName": "string",
    "lastName": "string",
    "uuid": "SYAucpMne87oAv9to2sQ4WvljeYTqFkMrdtSyklMAuU"
  },
  "customerPhones": [
    "string"
  ],
  "daIdList": [
    142846
  ],
  "startDate": "2024-02-01",
  "numberOfDays": 21,
  "dates": [
    "2023-12-28",
    "2023-12-29"
  ],
  "dealerUUIDList": [
    "039fdebb455231122badd410c61288c1204816098c6c822f495c81e2fae4f70e"
  ],
  "startTime": "16:30:00",
  "endTime": "16:39:59",
  "isWebScheduler": true,
  "operationLeadTimeInMins": 0,
  "operationUuidList": [
    "Gsg9_HOGn0d5uTb2aB3YTkwC_6xAdmB-rlr0KYfk5h0"
  ],
  "laborOpcodeList" : [
      "BFEA"
  ],
  "requesterUserUUID": "string",
  "selectedRecallOemIdSet": [
    "string"
  ],
  "teamUuidList": [
    "string"
  ],
  "transportOptionCustomName": "Shuttle",
  "transportOptionUuidList": [
    "w5fkIJojY4v-pCn0VBtnCur1AsjPwkH2RHUpf89LiMU"
  ],
  "vehicleInformation": {
    "brand": "Audi",
    "dealerUuid": "string",
    "engine": "string",
    "mileage": 10000,
    "model": "A3 Quattro",
    "trim": "string",
    "uuid": "string",
    "vehicleKey": "string",
    "vin": "string",
    "year": "2022"
  }
}
```

### Sample Curl
```shell
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{departmentUUID}}/vacantTimeSlotInfoWithRules' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
    "requesterUserUUID": null,
    "dealerUUIDList": null,
    "dates": [
        "2023-12-27"
    ],
    "daIdList": [
        142846
    ],
    "appointmentUuid": null,
    "callerDaUuid": "80c9166f65eecad91e3855555198156470d9cd3e5d7a95841c3a2a7086d1c87a",
    "isWebScheduler": false,
    "startTime": "17:30:00",
    "endTime": "17:39:59",
    "transportOptionCustomName": null,
    "selectedRecallOemIdSet": [],
    "operationLeadTimeInMins": null,
    "operationUuidList": [],
    "teamUuidList": null,
    "transportOptionUuidList": [
        "Uuid"
    ],
    "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": null,
        "customerKey": null,
        "uuid": "string"
    },
    "customerEmails": [
        "string"
    ],
    "customerPhones": [
        "string"
    ],
    "vehicleInformation": {
        "vin": null,
        "vehicleKey": null,
        "model": "A4 allroad",
        "year": "2021",
        "brand": "Audi",
        "trim": null,
        "engine": null,
        "mileage": null,
        "dealerUuid": null,
        "uuid": "tDA9fbgT45HE-k_Emm4ZlL3gPcmcy6zmUZqwRfu2Gg4"
    },
    "recallConfigsResponse": null
}'
```

### Response

```shell
{
  "apiError": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "apiWarnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ],
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "statusCode": 0,
  "vacantSlotInfo": [
    {
      "date": "2023-12-28",
      "vacantSlotInfoForDate": {
        "142846": [
          {
            "isVacant": true,
            "startTime": "16:30:00",
            "warningCodes": [
              "APPT_RULE_WARN_CAPACITY_PLANNING_CONSTRAINT_VIOLATED"
            ],
            "warningList": [
              "Rule = \"capacity rule\" is violated."
            ]
          }
        ]
      }
    }
  ],
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

### Summary of Response

| Parameter Name | Description |
| --- |   ---        |
| `vacantSlotInfo` | It contains a List of object `vacantSlotInfoForDate` which contains the availability of particular date |
| `vacantSlotInfoForDate` | It contains a key value pair of the selected property with their availability and warningList |
| `142846` | It is the selected DealerAssociate Id which is used as a key in vacantSlotInfoForDate object and its corresponding value shows the availability of slot whose startTime is `16:30:00` by parameter `isVacant`, also contains the list of warnings and its corresponding code |

---

// File: our-products/scheduler/API/how-to-use-get-brandYearForDealer

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get Brand Year for the provided Dealer UUID

## Request

### HTTP request

```shell
POST  https://api.mykaarma.com/appointment/v2/dealer-vehicle-config/brand-years
```

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `dealer.vehicle.config.read` | `Dealer` | Authorises client to read vehicle config for the provided dealer |

### Request Body

| Property Name | Value | Description | Required |
| --- | --- | --- | --- |
| `requesterUserUUID` | `String` | UUID of the user who is making this request | No | 
| `dealerUUIDList` | `List<String>` | List of dealer UUIDs for which we want to get BrandYear | Yes | 

### Sample Request Model 
```shell
{
  "dealerUUIDList": [
    "string"
  ],
  "requesterUserUUID": "string"
}
```

### Sample Curl
```shell
curl --location 'https://api.mykaarma.com/appointment/v2/dealer-vehicle-config/brand-years' \
--header 'Content-Type: application/json' \
--header 'Authorization: {{basic_auth_token}}' \
--data '{
  "dealerUUIDList": [
    "b7aedae19a153bfcc453f36e373d9937bf4ff0df4bb76c1006297fc61b92bd35",
    "bb858056db42991825026f41919a6d3404351b1dad201f1c5470c09d65ad9805"
  ],
  "requesterUserUUID": null
}'
```

## Response
```json
{
  "mapOfDealerAndBrandYears": {
    "additionalProp1": [
      {
        "brandId": 0,
        "brandLogo": "string",
        "brandName": "string",
        "webSchedulerMobileServiceImageURL": "string",
        "years": [
          "string"
        ]
      }
    ],
    "additionalProp2": [
      {
        "brandId": 0,
        "brandLogo": "string",
        "brandName": "string",
        "webSchedulerMobileServiceImageURL": "string",
        "years": [
          "string"
        ]
      }
    ],
    "additionalProp3": [
      {
        "brandId": 0,
        "brandLogo": "string",
        "brandName": "string",
        "webSchedulerMobileServiceImageURL": "string",
        "years": [
          "string"
        ]
      }
    ]
  },
  "statusCode": 0,
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

---

// File: our-products/scheduler/API/how-to-save-an-opcode

# How to save an Opcode

Use the following end point to save an Opcode.

* **Save an Opcode**:

1. `{{opcodeUUID}}` - Unique token assigned to each opcode in myKaarma. Example: -f_LNFHYWiHQg4AbTH-b_qmDTO8CKwknvhCtpYFmbWGw

```curl
curl --location -g --request POST 'https://api.mykaarma.com/appointment/v2/department/{{dealerDepartmentUuid}}/opcode' \
--header 'Content-Type: text/plain' \
--data-raw '{
    "opcode" : {
    "laborOpCode" : "RBALANCEI",
    "opCodeName" : "ROAD FORCE BALANCE AND ROTATE NO STAGGERED WHEELS",
    "description" : "ROAD FORCE BALANCE AND ROTATE NO STAGGERED WHEELS",
    "totalPrice" : "85.00",
    "opCodeDurationInMinutes" : "30",
    "isValid" : true,
    "uuid" : {{opcodeUUID}},
    "inMobileService" : false,
    "inOnlineScheduler" : false,
    "communicationCode" : null,
    "payType" : null,
    "inServiceCart" : true,
    "inDealerAppScheduler" : false,
    "dmsDescription" : "DATACLOVER APPOINTMENT",
    "laborPrice" : "85.00",
    "dmsLaborPrice" : null,
    "partsPrice" : "0.0",
    "dmsPartsPrice" : null,
    "taxAmount" : null,
    "dmsTaxAmount" : null,
    "dmsTotalPrice" : null,
    "sortOrder" : null,
    "correction" : "DATACLOVER APPOINTMENT",
    "cause" : null,
    "soldHours" : 0.8,
    "dispatchCode" : null,
    "comebackFlag" : true,
    "usagePercentile" : null,
    "position" : 0,
    "leadTimeInMinutes" : null,
    "isIndexed" : false,
    "isDefault" : false,
    "notes" : null,
    "serviceType" : null,
    "recallId" : null,
    "vehicleMileageConfigList" : null,
    "dailyLimitConfigList" : null,
    "pullEstimateInSC" : false,
    "miscPrice" : null,
    "useDmsPrice" : null,
    "showDmsPriceMismatchWarning" : null
  },
  "errorOnDuplicate" : false,
  "eventDealerAssociateUuid" : null
}'
```

---

// File: our-products/scheduler/API/how-to-get-appointment-by-uuid

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you fetch appointments scheduled on a particular date depending on your use case.

To fetch appointments scheduled for a particular date, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

To fetch appointments scheduled on a particular date you would need.
- appointmentUuid (You would get this either in responses when getting appointments or in the response of create appointment)
- departmentUuid (You would receive this at the time of integration)


## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/dealerDepartment/{departmentUuid}/uuid/{{appointmentUuid}}
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUuid` | `String` | Unique identifier of dealer's department | Yes|
| `appointmentUuid` | `String` | Unique identifier of the appointment in myKaarma system | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.get` | `Department` | Authorises client to get appointments for a department |

## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/appointment/v2/dealerDepartment/{{departmentUuid}}/uuid/{{appointmentUuid}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "error": [
    {
      "errorCode": 0,
      "errorDescription": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "appointmentInfo": {
      "uuid": "string",
      "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": "string",
        "isBusiness": false,
        "customerKey": "string",
        "confirmationPhone": "string",
        "confirmationEmail": "string",
        "custLocale": "string",
        "uuid": "string"
      },
      "vehicleInformation": {
        "vin": "string",
        "vehicleKey": "string",
        "model": "string",
        "year": "string",
        "brand": "string",
        "trim": "string",
        "engine": "string",
        "mileage": "string",
        "dealerUuid": "string",
        "uuid": "string"
      },
      "orderInformation": {
        "uuid": "string",
        "orderNumber": "string",
        "orderDate": "string",
        "orderType": "string"
      },
      "dealerUuid": "string",
      "assignedAdvisorUuid": "string",
      "creatorAdvisorUuid": "string",
      "assignedAdvisorUserUuid": "string",
      "creatorAdvisorUserUuid": "string",
      "assignedAdvisorDmsDepartmentCode": 0,
      "date": "string",
      "preferredDate": "string",
      "startTime": "string",
      "endTime": "string",
      "transportOption": {
        "uuid": "string",
        "altTransportation": "string",
        "bookingId": "string",
        "bookInThirdParty": false,
        "bookingStartDate": "string",
        "bookingEndDate": "string",
        "bookingIsManual": "string",
        "bookingIsValid": "string",
        "loanerSmartLink": "string",
        "transportation": "string",
        "organicTransportation": "string",
        "subTransportOptionUuid": "string"
      },
      "appointmentKey": "string",
      "mileageText": "string",
      "recall": false,
      "platform": "string",
      "appointmentSource": "string",
      "newStatus": "string",
      "comments": "string",
      "internalNotes": "string",
      "isCancelled": false,
      "reminderCount": 0,
      "serviceList": [
        {
          "uuid": "string",
          "opCode": "string",
          "laborOpCode": "string",
          "description": "string",
          "operationType": "string",
          "laborTotal": 0,
          "partsTotal": 0,
          "shopFees": 0,
          "taxes": 0,
          "price": 0,
          "isValid": true,
          "payType": "string",
          "sortOrder": 1,
          "parentOpcodeUuid": "string",
          "menuUuid": "string",
          "recallID": "string",
          "durationInMins": 1,
          "isCustomConcern": false,
          "isDealerAddedLine": false
        }
      ],
      "skillList": [{
        "uuid":"string",
        "name":"string",
        "dealerUuid":"string",
        "departmentUuid":"string",
        "operationList":null,
        "isValid":true
      }],
      "appointmentCommunicationPreferences": {
        "emailConfirmation": true,
        "textConfirmation": false,
        "emailReminder": true,
        "textReminder": false,
        "confirmationEmail": "string",
        "confirmationPhoneNumber": "string",
        "notifyCustomer": true,
        "sendCommunicationToDA": true
      },
      "pdrToOpcodes": {},
      "teamUuid": "string",
      "dispatchCode": "string",
      "customerVehicleInspectionId": "string",
      "sarmetaData": {
        "dmsMetaData":{
            "type":"string",
            "title":"string",
            "description":"string",
            "vehicleUuid":"string",
            "dealerAssociateId":"string"
        },
        "appointmentData": {}
      }
    }
}
```

---

// File: our-products/scheduler/API/how-to-get-appointments-by-appointment-date

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you fetch appointments scheduled on a particular date depending on your use case.

To fetch appointments scheduled for a particular date, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

To fetch appointments scheduled on a particular date you would need.
- departmentUuid (You would receive this at the time of integration)


## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/dealerDepartment/{departmentUuid}/date/{{date}}
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUuid` | `String` | Unique identifier of dealer's department | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.get` | `Department` | Authorises client to get appointments for a department |

## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/appointment/v2/dealerDepartment/{{departmentUuid}}/date/{{date}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "error": [
    {
      "errorCode": 0,
      "errorDescription": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "serviceAppointments": [
    {
      "uuid": "string",
      "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": "string",
        "isBusiness": false,
        "customerKey": "string",
        "confirmationPhone": "string",
        "confirmationEmail": "string",
        "custLocale": "string",
        "uuid": "string"
      },
      "vehicleInformation": {
        "vin": "string",
        "vehicleKey": "string",
        "model": "string",
        "year": "string",
        "brand": "string",
        "trim": "string",
        "engine": "string",
        "mileage": "string",
        "dealerUuid": "string",
        "uuid": "string"
      },
      "orderInformation": {
        "uuid": "string",
        "orderNumber": "string",
        "orderDate": "string",
        "orderType": "string"
      },
      "dealerUuid": "string",
      "assignedAdvisorUuid": "string",
      "creatorAdvisorUuid": "string",
      "assignedAdvisorUserUuid": "string",
      "creatorAdvisorUserUuid": "string",
      "assignedAdvisorDmsDepartmentCode": 0,
      "date": "string",
      "preferredDate": "string",
      "startTime": "string",
      "endTime": "string",
      "transportOption": {
        "uuid": "string",
        "altTransportation": "string",
        "bookingId": "string",
        "bookInThirdParty": false,
        "bookingStartDate": "string",
        "bookingEndDate": "string",
        "bookingIsManual": "string",
        "bookingIsValid": "string",
        "loanerSmartLink": "string",
        "transportation": "string",
        "organicTransportation": "string",
        "subTransportOptionUuid": "string"
      },
      "appointmentKey": "string",
      "mileageText": "string",
      "recall": false,
      "platform": "string",
      "appointmentSource": "string",
      "newStatus": "string",
      "comments": "string",
      "internalNotes": "string",
      "isCancelled": false,
      "reminderCount": 0,
      "serviceList": [
        {
          "uuid": "string",
          "opCode": "string",
          "laborOpCode": "string",
          "description": "string",
          "operationType": "string",
          "laborTotal": 0,
          "partsTotal": 0,
          "shopFees": 0,
          "taxes": 0,
          "price": 0,
          "isValid": true,
          "payType": "string",
          "sortOrder": 1,
          "parentOpcodeUuid": "string",
          "menuUuid": "string",
          "recallID": "string",
          "durationInMins": 1,
          "isCustomConcern": false,
          "isDealerAddedLine": false
        }
      ],
      "skillList": [{
        "uuid":"string",
        "name":"string",
        "dealerUuid":"string",
        "departmentUuid":"string",
        "operationList":null,
        "isValid":true
      }],
      "appointmentCommunicationPreferences": {
        "emailConfirmation": true,
        "textConfirmation": false,
        "emailReminder": true,
        "textReminder": false,
        "confirmationEmail": "string",
        "confirmationPhoneNumber": "string",
        "notifyCustomer": true,
        "sendCommunicationToDA": true
      },
      "pdrToOpcodes": {},
      "teamUuid": "string",
      "dispatchCode": "string",
      "customerVehicleInspectionId": "string",
      "sarmetaData": {
        "dmsMetaData":{
            "type":"string",
            "title":"string",
            "description":"string",
            "vehicleUuid":"string",
            "dealerAssociateId":"string"
        },
        "appointmentData": {}
      }
    }
  ]
}
```

---

// File: our-products/scheduler/API/how-to-get-appointments-by-filter

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you fetch appointments using filter. This may be helpful in cases where you need to fetch appointments for: 

- *Appointment keys* (Keys or identifiers of appointments in DMS).
- *Created date* (For appointments created within a date range)
- *Appointment date* (For a range of dates when appointment is scheduled)
- *Customers* (Filter using UUIDs of customer)
- *Appointments assigned to particular teams* (Filter using UUIDs of teams)
- *Created by* (Check what appointments were created by dealer app or web scheduler or API)
- *Appointment UUIDs* (Appointments for a bunch of UUIDs)

To fetch appointments scheduled for a particular date, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

## Request

### HTTP request

```shell
POST  https://api.mykaarma.com/appointment/v2/department/{dealerDepartmentUUID}/list
```

### Parameters

####  Path parameter:

Required path parameters for process : 

| Parameter Name  | Type | Description  |
| --- |  ---  | --- |
| `departmentUUID` | `string` | Unique identifier of dealer's department |

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.get` | `Department` | Authorises client to get appointments for a department |

## Get appointments by appointment key

Pass the appointment keys as a list in the appointmentKeys field.

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_auth_header}}' \
--header 'Content-Type: application/json' \
--data '{
    "appointmentKeys": [
        "string"
    ],
    "pageNumber": 1,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments for customers

Pass the customer UUIDs as a list in the customerUuids field.

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_auth_header}}' \
--header 'Content-Type: application/json' \
--data '{
    "customerUuids": [
        "string"
    ],
    "pageNumber": 1,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments for UUIDs

Pass the appointment UUIDs as a list in the appointmentUuids field.


```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_auth_header}}' \
--header 'Content-Type: application/json' \
--data '{
    "appointmentUuids": [
        "string"
    ],
    "pageNumber": 1,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments for teams

Pass the team UUIDs as a list in the teamUuids field. To get UUIDs of team please refer to to <a href="/our-products/admin/manage/dealer-associate-group/how-to-get-dealerAssociateGroupList">get teams</a>


```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_auth_header}}' \
--header 'Content-Type: application/json' \
--data '{
    "teamUuids": [
        "string"
    ],
    "pageNumber": 1,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments by appointment date

Pass startDate and endDate to get appointments in a date range

- startDate (retrieve appointments based on scheduled date of the appt on or after this date)
- endDate (Retrieve appointments based on scheduled date of the appt on or before this date)

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_header_auth}}' \
--header 'Content-Type: application/json' \
--data '{
    "startDate": "2025-02-11",
    "endDate": "2025-02-12",
    "pageNumber": 2,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments by creation date

Pass startDate and endDate to get appointments in a date range

- startCreatedDate (retrieve appointments created on or after this date)
- endCreatedDate (retrieve appointments created on or before this date)

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_header_auth}}' \
--header 'Content-Type: application/json' \
--data '{
    "startCreatedDate": "2025-02-11",
    "endCreatedDate": "2025-02-12",
    "pageNumber": 2,
    "pageSize": 10,
    "sortAscending": true
}'
```

## Get appointments by creation source

Pass the creator that for which you would like to see the appointments. Possible values supported at the moment are: 

- dealerapp
- online
- DMS
- API

```curl
curl --location 'https://api.mykaarma.com/appointment/v2/department/{{department_uuid}}/list' \
--header 'accept: application/json' \
--header 'authorization: Basic {{basic_header_auth}}' \
--header 'Content-Type: application/json' \
--data '{
    "createdBy": "API",
    "pageNumber": 2,
    "pageSize": 10,
    "sortAscending": true
}'
```

**Note**

- In case more than one kind of filter is sent in request, the result will be end of this discussion.
- This endpoint implements pagination and can only be used with page size of 100.

---

// File: our-products/scheduler/API/how-to-get-appointments-by-order-uuid

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you fetch appointments scheduled on a particular date depending on your use case.

To fetch appointments scheduled for a particular date, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

To fetch appointments scheduled on a particular date you would need.
- orderUuid (Get it from <a href="/our-products/integration/order/how-to-get-a-list-of-orders">Get a list of orders</a>)
- departmentUuid (You would receive this at the time of integration)


## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/dealerDepartment/{departmentUuid}/order/{{orderUuid}}
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUuid` | `String` | Unique identifier of dealer's department | Yes|
| `orderUuid` | `String` | Unique identifier of repair order in myKaarma | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.get` | `Department` | Authorises client to get appointments for a department |

## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/appointment/v2/dealerDepartment/{{departmentUuid}}/order/{{orderUuid}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "error": [
    {
      "errorCode": 0,
      "errorDescription": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "serviceAppointments": [
    {
      "uuid": "string",
      "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": "string",
        "isBusiness": false,
        "customerKey": "string",
        "confirmationPhone": "string",
        "confirmationEmail": "string",
        "custLocale": "string",
        "uuid": "string"
      },
      "vehicleInformation": {
        "vin": "string",
        "vehicleKey": "string",
        "model": "string",
        "year": "string",
        "brand": "string",
        "trim": "string",
        "engine": "string",
        "mileage": "string",
        "dealerUuid": "string",
        "uuid": "string"
      },
      "orderInformation": {
        "uuid": "string",
        "orderNumber": "string",
        "orderDate": "string",
        "orderType": "string"
      },
      "dealerUuid": "string",
      "assignedAdvisorUuid": "string",
      "creatorAdvisorUuid": "string",
      "assignedAdvisorUserUuid": "string",
      "creatorAdvisorUserUuid": "string",
      "assignedAdvisorDmsDepartmentCode": 0,
      "date": "string",
      "preferredDate": "string",
      "startTime": "string",
      "endTime": "string",
      "transportOption": {
        "uuid": "string",
        "altTransportation": "string",
        "bookingId": "string",
        "bookInThirdParty": false,
        "bookingStartDate": "string",
        "bookingEndDate": "string",
        "bookingIsManual": "string",
        "bookingIsValid": "string",
        "loanerSmartLink": "string",
        "transportation": "string",
        "organicTransportation": "string",
        "subTransportOptionUuid": "string"
      },
      "appointmentKey": "string",
      "mileageText": "string",
      "recall": false,
      "platform": "string",
      "appointmentSource": "string",
      "newStatus": "string",
      "comments": "string",
      "internalNotes": "string",
      "isCancelled": false,
      "reminderCount": 0,
      "serviceList": [
        {
          "uuid": "string",
          "opCode": "string",
          "laborOpCode": "string",
          "description": "string",
          "operationType": "string",
          "laborTotal": 0,
          "partsTotal": 0,
          "shopFees": 0,
          "taxes": 0,
          "price": 0,
          "isValid": true,
          "payType": "string",
          "sortOrder": 1,
          "parentOpcodeUuid": "string",
          "menuUuid": "string",
          "recallID": "string",
          "durationInMins": 1,
          "isCustomConcern": false,
          "isDealerAddedLine": false
        }
      ],
      "skillList": [{
        "uuid":"string",
        "name":"string",
        "dealerUuid":"string",
        "departmentUuid":"string",
        "operationList":null,
        "isValid":true
      }],
      "appointmentCommunicationPreferences": {
        "emailConfirmation": true,
        "textConfirmation": false,
        "emailReminder": true,
        "textReminder": false,
        "confirmationEmail": "string",
        "confirmationPhoneNumber": "string",
        "notifyCustomer": true,
        "sendCommunicationToDA": true
      },
      "pdrToOpcodes": {},
      "teamUuid": "string",
      "dispatchCode": "string",
      "customerVehicleInspectionId": "string",
      "sarmetaData": {
        "dmsMetaData":{
            "type":"string",
            "title":"string",
            "description":"string",
            "vehicleUuid":"string",
            "dealerAssociateId":"string"
        },
        "appointmentData": {}
      }
    }
  ]
}
```

---

// File: our-products/scheduler/API/how-to-get-appointments-for-customer

import AuthPageLink from '@site/src/components/AuthPageLink';

This document is designed to help you fetch appointments for a customer depending on your use case.

To fetch appointments for a customer, you first need your credentials. If you don't already have one, head over to the <AuthPageLink/> page to see how you can request for credentials from us.

To fetch appointments for a customer you would need.
- customerUuid (Get it from <a href="/our-products/integration/customer/search-then-create-customer">search and then create customer documentation</a>)
- departmentUuid (You would receive this at the time of integration)


## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/dealerDepartment/{departmentUuid}/customer/{customerUuid}?fetchOnlyLatestAppointment=false&fromDate=
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `departmentUuid` | `String` | Unique identifier of dealer's department | Yes|
| `customerUuid` | `String` | Unique identifier of customer | Yes|

####  Query parameter:

| Parameter Name  | Description  | Required | Default Value |
| --- |  ---  | --- | ---|
| `fetchOnlyLatestAppointment` | Send this as true if you need to fetch only latest appointment| No| false|
| `fromDate` | Date from which appointments are to be fetched in this format - "yyyy-MM-dd'T'HH:mm:ss"| No| empty|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.get` | `Department` | Authorises client to get appointments for a department |




## Endpoint
```shell
curl -X GET "https://api.mykaarma.com/appointment/v2/dealerDepartment/{{departmentUuid}}/customer/{{customerUuid}}?fetchOnlyLatestAppointment={{fetchOnlyLatestAppointment}}&fromDate={{fromDate}}"
-H "accept: application/json" 
-H "Authorization: {{basic_auth_token}}"
```

## Response
```json
{
  "error": [
    {
      "errorCode": 0,
      "errorDescription": "string"
    }
  ],
  "warnings": [
    {
      "warningCode": 0,
      "warningDescription": "string"
    }
  ],
  "serviceAppointments": [
    {
      "uuid": "string",
      "customerInformation": {
        "firstName": "string",
        "lastName": "string",
        "company": "string",
        "isBusiness": false,
        "customerKey": "string",
        "confirmationPhone": "string",
        "confirmationEmail": "string",
        "custLocale": "string",
        "uuid": "string"
      },
      "vehicleInformation": {
        "vin": "string",
        "vehicleKey": "string",
        "model": "string",
        "year": "string",
        "brand": "string",
        "trim": "string",
        "engine": "string",
        "mileage": "string",
        "dealerUuid": "string",
        "uuid": "string"
      },
      "orderInformation": {
        "uuid": "string",
        "orderNumber": "string",
        "orderDate": "string",
        "orderType": "string"
      },
      "dealerUuid": "string",
      "assignedAdvisorUuid": "string",
      "creatorAdvisorUuid": "string",
      "assignedAdvisorUserUuid": "string",
      "creatorAdvisorUserUuid": "string",
      "assignedAdvisorDmsDepartmentCode": 0,
      "date": "string",
      "preferredDate": "string",
      "startTime": "string",
      "endTime": "string",
      "transportOption": {
        "uuid": "string",
        "altTransportation": "string",
        "bookingId": "string",
        "bookInThirdParty": false,
        "bookingStartDate": "string",
        "bookingEndDate": "string",
        "bookingIsManual": "string",
        "bookingIsValid": "string",
        "loanerSmartLink": "string",
        "transportation": "string",
        "organicTransportation": "string",
        "subTransportOptionUuid": "string"
      },
      "appointmentKey": "string",
      "mileageText": "string",
      "recall": false,
      "platform": "string",
      "appointmentSource": "string",
      "newStatus": "string",
      "comments": "string",
      "internalNotes": "string",
      "isCancelled": false,
      "reminderCount": 0,
      "serviceList": [
        {
          "uuid": "string",
          "opCode": "string",
          "laborOpCode": "string",
          "description": "string",
          "operationType": "string",
          "laborTotal": 0,
          "partsTotal": 0,
          "shopFees": 0,
          "taxes": 0,
          "price": 0,
          "isValid": true,
          "payType": "string",
          "sortOrder": 1,
          "parentOpcodeUuid": "string",
          "menuUuid": "string",
          "recallID": "string",
          "durationInMins": 1,
          "isCustomConcern": false,
          "isDealerAddedLine": false
        }
      ],
      "skillList": [{
        "uuid":"string",
        "name":"string",
        "dealerUuid":"string",
        "departmentUuid":"string",
        "operationList":null,
        "isValid":true
      }],
      "appointmentCommunicationPreferences": {
        "emailConfirmation": true,
        "textConfirmation": false,
        "emailReminder": true,
        "textReminder": false,
        "confirmationEmail": "string",
        "confirmationPhoneNumber": "string",
        "notifyCustomer": true,
        "sendCommunicationToDA": true
      },
      "pdrToOpcodes": {},
      "teamUuid": "string",
      "dispatchCode": "string",
      "customerVehicleInspectionId": "string",
      "sarmetaData": {
        "dmsMetaData":{
            "type":"string",
            "title":"string",
            "description":"string",
            "vehicleUuid":"string",
            "dealerAssociateId":"string"
        },
        "appointmentData": {}
      }
    }
  ]
}
```

---

// File: our-products/scheduler/API/how-to-get-eligibleAdvisor

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get service advisor list for which appointment can be scheduled in myKaarma

## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/dealer/{dealerUuid}/eligibleAdvisor/list
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `dealerUuid` | `String` | Unique identifier of dealer | Yes|

### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.configuration` | `Dealer` | Authorises client to get eligible advisor for the provided dealer |


### Sample Curl

```shell
curl --location 'https://api.mykaarma.com/appointment/v2/dealer/{dealer_uuid}/eligibleAdvisor/list' \
--header 'Authorization: {{basic_auth_token}}'
```


## Response
```json
{
  "dealerAssociateSet": [
    {
      "associateDmsID": "string",
      "bio": "string",
      "cellPhone": "string",
      "defaultThreadOwnerUserUUID": "string",
      "department": {
        "brokerNumber": "string",
        "calendarUuid": "string",
        "communicationGroup": "string",
        "contactFName": "string",
        "contactLName": "string",
        "dealer": {
          "id": 0,
          "isValid": true,
          "name": "string",
          "uuid": "string"
        },
        "departmentType": "string",
        "emailAddress": "string",
        "id": 0,
        "name": "string",
        "phoneNumber": "string",
        "textNumber": "string",
        "uuid": "string"
      },
      "emailAddress": "string",
      "firstName": "string",
      "id": 0,
      "imageUrl": "string",
      "isDealerMappedToSsoPartner": true,
      "isSsoPartnerMapped": true,
      "isTextNumberVerified": true,
      "isValid": true,
      "lastName": "string",
      "nickname": "string",
      "outOfOffice": true,
      "outOfOfficeStartDate": "string",
      "role": {
        "roleAcronym": "string",
        "roleName": "string"
      },
      "ssoFeatureEnabled": true,
      "textNumber": "string",
      "userInviteStatus": "string",
      "userName": "string",
      "userUuid": "string",
      "uuid": "string"
    }
  ],
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "statusCode": 0,
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

---

// File: our-products/scheduler/API/how-to-get-transportOptionForDealer

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

Get all transport options for dealer

## Request

### HTTP request

```shell
GET  https://api.mykaarma.com/appointment/v2/department/{{dealerDepartmentUUID}}/transportOption/list
```

### Parameters

####  Path parameter:

| Parameter Name  | Value | Description  | Required
| --- |  ---  | --- | ---|
| `dealerDepartmentUUID` | `String` | Unique identifier of dealer department | Yes |


### Authorization

This request requires the following authorization scopes:

| Scope | Level | Description |
| --- | --- | --- |
| `appointment.transportOptions` | `DealerDepartment` | Authorises client to get transportOption for a dealer |


###Sample Curl

```shell
curl --location 'https://api.mykaarma.com/appointment/v2/department/3fed82861160717ea55057293650d3f0e63903c756ec1b85b261a70390ff0d6f/transportOption/list' \
--header 'Authorization: {{basic_auth_token}}'
```

## Response
```json
{
  "statusCode": 0,
  "transportOptionList": [
    {
      "customName": "string",
      "icon": "string",
      "optionName": "string",
      "showOnDealerApp": true,
      "showOnline": true,
      "transportOptionUuid": "string"
    }
  ],
  "error": {
    "errorCode": "string",
    "errorDescription": "string",
    "errorUID": "string"
  },
  "warnings": [
    {
      "warningCode": "string",
      "warningDescription": "string"
    }
  ]
}
```

---

// File: our-products/scheduler/API/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const AppointmentApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.appointmentApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<AppointmentApiSwagger />

---

// File: our-products/scheduler/API/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/transportation/intro

The myKaarma transportation module contains a set of RESTful APIs which are used to handle everything related to transportation at a dealership or dealer group.

---

// File: our-products/transportation/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/transportation/mobile service/index

import DocCardList from '@theme/DocCardList';

<DocCardList />

---

// File: our-products/transportation/mobile service/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const MobileServiceApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.mobileServiceApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<MobileServiceApiSwagger />

---

// File: our-products/transportation/pickup-and-delivery/how-to-create-trip

# How to create a trip
This document is designed to help you understand how you can create a trip using the pickup delivery API.
To create trips, you first need your credentials. If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.

The endpoint mentioned below can help you with creating a trip -

* **Parameters Used**:
1. `{{requesterUserUuid}}` - UUID of the user who is creating the trip
2. `{{dealerAssociateUuid}}` - UUID of the dealer associate who is creating the trip
3. `{{dealerDepartmentUuid}}` - UUID of the dealer department you want to create trip for
4. `{{dealerUuid}}` - UUID of the dealer you want to create trip for
5. `{{customerUuid}}` - UUID of the customer for which the trip is to be created
6. `{{appointmentTime}}` - Start time for the created trip. eg. "2023-01-06T12:00:03-0500"
7. `{{rideType}}` - Ride type of trip to be created. Possible values are "PICKUP_CUSTOMER", "PICKUP_VEHICLE", "DROPOFF_CUSTOMER", "DROPOFF_VEHICLE", "LOANER_SWAP", "MISCELLANEOUS", "RIDE_SHARE"
8. `{{tripStatus}}` - Status of the trip to be created. eg. "UNASSIGNED"
9. `{{originLocationLon}}`, `{{originLocationLat}}` - Coordinates (in double) of the origin address for the trip
10. `{{destLocationLon}}`, `{{destLocationLat}}` - Coordinates (in double) of the destination address for the trip
11. `{{originAddress}}` - Origin address string for the trip
12. `{{destinationAddress}}` - Destination address string for the trip
13. `{{basic_auth_token}}` - Authorization: Basic "generate using username password"

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `pickupdelivery.trip.create`

* **Endpoint**
```
curl --location --request PUT 'https://api.mykaarma.com/pickupdelivery/v3/event/create' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
    "requesterUserUUID": "{{requesterUserUuid}}",
    "dealerDepartmentUUIDList": [
        "{{dealerDepartmentUuid}}"
    ],
    "pickupDeliveryTripEvent": {
        "optionalFields": {},
        "sendMessageToCustomer": true,
        "isDropCar": false,
        "isValid": true,
        "sharedRidePartner": null,
        "assignedByDealerAssociateUUID": "{{dealerAssociateUuid}}",
        "rideType": "{{rideType}}",
        "loanerVehicleRequired": false,
        "customerDlVerified": false,
        "customerInsuranceVerified": false,
        "loanerVehicleUuid": null,
        "loanerModel": null,
        "primaryDriverLastName": null,
        "primaryDriverFirstName": null,
        "primaryDriverUUID": null,
        "tripStatus": {{tripStatus}},
        "secondaryDriverLastName": null,
        "secondaryDriverFirstName": null,
        "secondaryDriverUUID": null,
        "vehicleIdentifiers": null,
        "originLocationLon": {{originLocationLon}},
        "originLocationLat": {{originLocationLat}},
        "originAddress": "{{originAddress}}",
        "destLocationLon": {{destLocationLon}},
        "destLocationLat": {{destLocationLat}},
        "destinationAddress": "{{destinationAddress}}",
        "appointmentTime": "{{appointmentTime}}",
        "mustStartBy": null,
        "dealerUUID": "{{dealerUuid}}",
        "dealerDepartmentUUID": "{{dealerDepartmentUuid}}",
        "subTrips": null,
        "customerFirstName": null,
        "customerLastName": null,
        "customerUUID": "{{customerUuid}}"
        "createdDate": null
    }
}'
```
* **Response**
```
{
    "statusCode": integer,
    "error": {
      "errorCode": "string",
      "errorDescription": "string",
      "metadata": "string"
    },
    "warnings": [
      {
        "warningCode": "string",
        "warningDescription": "string"
      }
    ],
    "eventUUID": "string"
}


{eventUUID} - the UUID of the created trip
```

---

// File: our-products/transportation/pickup-and-delivery/index

import DocCardList from '@theme/DocCardList';

A comprehensive guide to manage pickup and delivery trips.

<DocCardList />

---

// File: our-products/transportation/pickup-and-delivery/how-to-fetch-trip

# How to fetch a trip
This document is designed to help you understand how you can fetch a trip using the trip UUID.
To fetch a trip, you first need your credentials.If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.
The endpoint mentioned below can help you with fetching a trip -

* **Parameters Used**:
1. `{{requesterUserUuid}}` - UUID of the user who is sending the fetch trips list request
2. `{{dealerDepartmentUuid}}` - UUID of the dealer department you want to fetch trips list for
3. `{{dealerUuid}}` - UUID of the dealer you want to filter trips list for
4. `{{tripUUID}}` - UUID of the trip you want to fetch
5. `{{basic_auth_token}}` - Authorization: Basic "generate using username password"

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `pickupdelivery.trip.fetch`

* **Endpoint**
```
curl --location --request POST 'https://api.mykaarma.com/pickupdelivery/v3/trip/{{tripUUID}}' \
--header 'Authorization: {{basic_auth_token}}' \
--header 'Content-Type: application/json' \
--data-raw '{
    "requesterUserUUID": "{{requesterUserUuid}}",
    "dealerDepartmentUUIDList": [
        "{{dealerDepartmentUuid}}"
    ],
    "dealerUUID": "{{dealerUuid}}"
}' 
```
* **Response**
```
{
    "statusCode": integer,
    "error": {
      "errorCode": "string",
      "errorDescription": "string",
      "metadata": "string"
    },
    "warnings": [
      {
        "warningCode": "string",
        "warningDescription": "string"
      }
    ],
    "pickupDeliveryTripsList": []
}
```

---

// File: our-products/transportation/pickup-and-delivery/how-to-filter-trips

# How to filter trips
This document is designed to help you understand how you can filter trips based on certain paramters.
To get filtered trips list based on certain paramters, you first need your credentials. If you don't already have one, head over to the Authentication and Authorization page to see how you can request for credentials from us.

The endpoint mentioned below can help you with filtering out trips -

* **Parameters Used**:
1. `{{requesterUserUuid}}` - UUID of the user who is sending the fetch trips list request
2. `{{dealerDepartmentUuid}}` - UUID of the dealer department you want to fetch trips list for
3. `{{dealerUuid}}` - UUID of the dealer you want to filter trips list for
4. `{{fromDate}}` - Start of date range in which to filter trips. eg. "2023-01-01T00:00:00+0530"
5. `{{toDate}}` - End of date range in which to filter trips. eg.  "2023-01-10T00:00:00+0530"
6. `{{rideType}}` - Ride type of trips to be fetched. Possible values are "PICKUP_CUSTOMER", "PICKUP_VEHICLE", "DROPOFF_CUSTOMER", "DROPOFF_VEHICLE", "LOANER_SWAP", "MISCELLANEOUS", "RIDE_SHARE"
7. `{{basic_auth_token}}` - Authorization: Basic "generate using username password"

* **Scope**:
The service subscriber needs to have the following scope for the department in the request - `pickupdelivery.trip.fetch`

* **Endpoint**
```
curl --location --request POST 'https://api.mykaarma.com/pickupdelivery/v3/event/list' \
--header 'Content-Type: application/json' \
--header 'Authorization: {{basic_auth_token}}' \
--data-raw '{
    "requesterUserUUID": "{{requesterUserUuid}}",
    "dealerDepartmentUUIDList": [
        "{{dealerDepartmentUuid}}"
    ],
    "startAppointmentTime": "{{fromDate}}",
    "endAppointmentTime": "{{toDate}}",
    "dealerUUIDList": [
        "{{dealerUuid}}"
    ],
    "driverUUIDs": [],
    "customerUUIDs": [],
    "dealerOrderUUIDs": [],
    "tripStatusList": [],
    "lastAppointmentTime": null,
    "pageSize": null,
    "rideType": "{{rideType}}"
}'
```
* **Response**
```
{
    "statusCode": integer,
    "error": {
      "errorCode": "string",
      "errorDescription": "string",
      "metadata": "string"
    },
    "warnings": [
      {
        "warningCode": "string",
        "warningDescription": "string"
      }
    ],
    "pickupDeliveryTripsList": []
}
```

---

// File: our-products/transportation/pickup-and-delivery/api-reference

import SwaggerUI from "swagger-ui-react"
import "swagger-ui-react/swagger-ui.css"

import useDocusaurusContext from '@docusaurus/useDocusaurusContext';

export const PickupAndDeliveryApiSwagger = () => {
    const {siteConfig} = useDocusaurusContext();
    let url = siteConfig.customFields.pickupAndDeliveryApiOpenapiUrl;
    return (<SwaggerUI url={url} />)
}

<PickupAndDeliveryApiSwagger />
